// OpenGL|ES Delegates.
// File Created with OpenGL Parser 3.
// Developed by Luis Guijarro PÃ©rez.

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace dgtk.OpenGL
{
	internal static class delegatesGLES
	{
		#region A:

		internal delegate void glAccumxOES(uint op, int value);
		internal delegate bool glAcquireKeyedMutexWin32EXT(uint memory, ulong key, uint timeout);
		internal delegate void glActiveProgramEXT(uint program);
		internal delegate void glActiveShaderProgram(uint pipeline, uint program);
		internal delegate void glActiveShaderProgramEXT(uint pipeline, uint program);
		internal delegate void glActiveTexture(TextureUnit texture);
		internal delegate void glAlphaFunc(AlphaFunction func, float @ref);
		internal delegate void glAlphaFuncQCOM(uint func, float @ref);
		internal delegate void glAlphaFuncx(AlphaFunction func, int @ref);
		internal delegate void glAlphaFuncxOES(AlphaFunction func, int @ref);
		internal delegate void glApplyFramebufferAttachmentCMAAINTEL();
		internal delegate void glAttachShader(uint program, uint shader);
		#endregion

		#region B:

		internal delegate void glBeginConditionalRenderNV(uint id, ConditionalRenderMode mode);
		internal delegate void glBeginPerfMonitorAMD(uint monitor);
		internal delegate void glBeginPerfQueryINTEL(uint queryHandle);
		internal delegate void glBeginQuery(QueryTarget target, uint id);
		internal delegate void glBeginQueryEXT(QueryTarget target, uint id);
		internal delegate void glBeginTransformFeedback(PrimitiveType primitiveMode);
		internal unsafe delegate void glBindAttribLocation(uint program, uint index, string name);
		internal delegate void glBindBuffer(BufferTargetARB target, uint buffer);
		internal delegate void glBindBufferBase(BufferTargetARB target, uint index, uint buffer);
		internal delegate void glBindBufferRange(BufferTargetARB target, uint index, uint buffer, IntPtr offset, int size);
		internal unsafe delegate void glBindFragDataLocationEXT(uint program, uint color, string name);
		internal unsafe delegate void glBindFragDataLocationIndexedEXT(uint program, uint colorNumber, uint index, string name);
		internal delegate void glBindFramebuffer(FramebufferTarget target, uint framebuffer);
		internal delegate void glBindFramebufferOES(FramebufferTarget target, uint framebuffer);
		internal delegate void glBindImageTexture(uint unit, uint texture, int level, bool layered, int layer, BufferAccessARB access, InternalFormat format);
		internal delegate void glBindProgramPipeline(uint pipeline);
		internal delegate void glBindProgramPipelineEXT(uint pipeline);
		internal delegate void glBindRenderbuffer(RenderbufferTarget target, uint renderbuffer);
		internal delegate void glBindRenderbufferOES(RenderbufferTarget target, uint renderbuffer);
		internal delegate void glBindSampler(uint unit, uint sampler);
		internal delegate void glBindShadingRateImageNV(uint texture);
		internal delegate void glBindTexture(TextureTarget target, uint texture);
		internal delegate void glBindTransformFeedback(BindTransformFeedbackTarget target, uint id);
		internal delegate void glBindVertexArray(uint array);
		internal delegate void glBindVertexArrayOES(uint array);
		internal delegate void glBindVertexBuffer(uint bindingindex, uint buffer, IntPtr offset, int stride);
		internal unsafe delegate void glBitmapxOES(int width, int height, int xorig, int yorig, int xmove, int ymove, byte* bitmap);
		internal delegate void glBlendBarrier();
		internal delegate void glBlendBarrierKHR();
		internal delegate void glBlendBarrierNV();
		internal delegate void glBlendColor(float red, float green, float blue, float alpha);
		internal delegate void glBlendColorxOES(int red, int green, int blue, int alpha);
		internal delegate void glBlendEquation(BlendEquationModeEXT mode);
		internal delegate void glBlendEquationEXT(BlendEquationModeEXT mode);
		internal delegate void glBlendEquationi(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationiEXT(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationiOES(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationOES(BlendEquationModeEXT mode);
		internal delegate void glBlendEquationSeparate(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparatei(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateiEXT(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateiOES(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateOES(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendFunc(BlendingFactor sfactor, BlendingFactor dfactor);
		internal delegate void glBlendFunci(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFunciEXT(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFunciOES(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFuncSeparate(BlendingFactor sfactorRGB, BlendingFactor dfactorRGB, BlendingFactor sfactorAlpha, BlendingFactor dfactorAlpha);
		internal delegate void glBlendFuncSeparatei(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateiEXT(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateiOES(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateOES(BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendParameteriNV(uint pname, int value);
		internal delegate void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferANGLE(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferLayerEXT(int srcX0, int srcY0, int srcX1, int srcY1, int srcLayer, int dstX0, int dstY0, int dstX1, int dstY1, int dstLayer, ClearBufferMask mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferLayersEXT(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferNV(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, ClearBufferMask mask, BlitFramebufferFilter filter);
		internal delegate void glBufferAttachMemoryNV(BufferTargetARB target, uint memory, ulong offset);
		internal delegate void glBufferData(BufferTargetARB target, int size, IntPtr data, BufferUsageARB usage);
		internal delegate void glBufferPageCommitmentMemNV(BufferStorageTarget target, IntPtr offset, int size, uint memory, ulong memOffset, bool commit);
		internal delegate void glBufferStorageEXT(BufferStorageTarget target, int size, IntPtr data, BufferStorageMask flags);
		internal delegate void glBufferStorageExternalEXT(uint target, IntPtr offset, int size, IntPtr clientBuffer, BufferStorageMask flags);
		internal delegate void glBufferStorageMemEXT(BufferTargetARB target, int size, uint memory, ulong offset);
		internal delegate void glBufferSubData(BufferTargetARB target, IntPtr offset, int size, IntPtr data);
		#endregion

		#region C:

		internal delegate uint glCheckFramebufferStatus(FramebufferTarget target);
		internal delegate uint glCheckFramebufferStatusOES(FramebufferTarget target);
		internal delegate void glClear(ClearBufferMask mask);
		internal delegate void glClearAccumxOES(int red, int green, int blue, int alpha);
		internal delegate void glClearBufferfi(Buffer buffer, int drawbuffer, float depth, int stencil);
		internal unsafe delegate void glClearBufferfv(Buffer buffer, int drawbuffer, float* value);
		internal unsafe delegate void glClearBufferiv(Buffer buffer, int drawbuffer, int* value);
		internal unsafe delegate void glClearBufferuiv(Buffer buffer, int drawbuffer, uint* value);
		internal delegate void glClearColor(float red, float green, float blue, float alpha);
		internal delegate void glClearColorx(int red, int green, int blue, int alpha);
		internal delegate void glClearColorxOES(int red, int green, int blue, int alpha);
		internal delegate void glClearDepthf(float d);
		internal delegate void glClearDepthfOES(float depth);
		internal delegate void glClearDepthx(int depth);
		internal delegate void glClearDepthxOES(int depth);
		internal unsafe delegate void glClearPixelLocalStorageuiEXT(int offset, int n, uint* values);
		internal delegate void glClearStencil(int s);
		internal delegate void glClearTexImageEXT(uint texture, int level, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearTexSubImageEXT(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClientActiveTexture(TextureUnit texture);
		internal delegate uint glClientWaitSync(IntPtr sync, SyncObjectMask flags, ulong timeout);
		internal delegate uint glClientWaitSyncAPPLE(IntPtr sync, SyncObjectMask flags, ulong timeout);
		internal delegate void glClipControlEXT(uint origin, uint depth);
		internal unsafe delegate void glClipPlanef(ClipPlaneName p, float* eqn);
		internal unsafe delegate void glClipPlanefIMG(ClipPlaneName p, float* eqn);
		internal unsafe delegate void glClipPlanefOES(ClipPlaneName plane, float* equation);
		internal unsafe delegate void glClipPlanex(ClipPlaneName plane, int* equation);
		internal unsafe delegate void glClipPlanexIMG(ClipPlaneName p, int* eqn);
		internal unsafe delegate void glClipPlanexOES(ClipPlaneName plane, int* equation);
		internal delegate void glColor3xOES(int red, int green, int blue);
		internal unsafe delegate void glColor3xvOES(int* components);
		internal delegate void glColor4f(float red, float green, float blue, float alpha);
		internal delegate void glColor4ub(byte red, byte green, byte blue, byte alpha);
		internal delegate void glColor4x(int red, int green, int blue, int alpha);
		internal delegate void glColor4xOES(int red, int green, int blue, int alpha);
		internal unsafe delegate void glColor4xvOES(int* components);
		internal delegate void glColorMask(bool red, bool green, bool blue, bool alpha);
		internal delegate void glColorMaski(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorMaskiEXT(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorMaskiOES(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorPointer(int size, ColorPointerType type, int stride, IntPtr pointer);
		internal delegate void glCompileShader(uint shader);
		internal delegate void glCompressedTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage3D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage3DOES(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, InternalFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, InternalFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage3DOES(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, InternalFormat format, int imageSize, IntPtr data);
		internal delegate void glConservativeRasterParameteriNV(uint pname, int param);
		internal delegate void glConvolutionParameterxOES(ConvolutionTargetEXT target, ConvolutionParameter pname, int param);
		internal unsafe delegate void glConvolutionParameterxvOES(ConvolutionTargetEXT target, ConvolutionParameter pname, int* @params);
		internal delegate void glCopyBufferSubData(CopyBufferSubDataTarget readTarget, CopyBufferSubDataTarget writeTarget, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glCopyBufferSubDataNV(CopyBufferSubDataTarget readTarget, CopyBufferSubDataTarget writeTarget, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glCopyImageSubData(uint srcName, CopyImageSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyImageSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal delegate void glCopyImageSubDataEXT(uint srcName, CopyBufferSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyBufferSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal delegate void glCopyImageSubDataOES(uint srcName, CopyBufferSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyBufferSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal delegate void glCopyPathNV(uint resultPath, uint srcPath);
		internal delegate void glCopyTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
		internal delegate void glCopyTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		internal delegate void glCopyTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyTexSubImage3DOES(uint target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyTextureLevelsAPPLE(uint destinationTexture, uint sourceTexture, int sourceBaseLevel, int sourceLevelCount);
		internal delegate void glCoverageMaskNV(bool mask);
		internal delegate void glCoverageModulationNV(uint components);
		internal unsafe delegate void glCoverageModulationTableNV(int n, float* v);
		internal delegate void glCoverageOperationNV(uint operation);
		internal unsafe delegate void glCoverFillPathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, InstancedPathCoverMode coverMode, PathTransformType transformType, float* transformValues);
		internal delegate void glCoverFillPathNV(uint path, PathCoverMode coverMode);
		internal unsafe delegate void glCoverStrokePathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, InstancedPathCoverMode coverMode, PathTransformType transformType, float* transformValues);
		internal delegate void glCoverStrokePathNV(uint path, PathCoverMode coverMode);
		internal unsafe delegate void glCreateMemoryObjectsEXT(int n, uint* memoryObjects);
		internal unsafe delegate void glCreatePerfQueryINTEL(uint queryId, uint* queryHandle);
		internal delegate uint glCreateProgram();
		internal unsafe delegate void glCreateSemaphoresNV(int n, uint* semaphores);
		internal delegate uint glCreateShader(ShaderType type);
		internal unsafe delegate uint glCreateShaderProgramEXT(ShaderType type, string @string);
		internal unsafe delegate uint glCreateShaderProgramv(ShaderType type, int count, string[] strings);
		internal unsafe delegate uint glCreateShaderProgramvEXT(ShaderType type, int count, string[] strings);
		internal delegate void glCullFace(TriangleFace mode);
		internal delegate void glCurrentPaletteMatrixOES(uint matrixpaletteindex);
		#endregion

		#region D:

		internal delegate void glDebugMessageCallback(Delegate callback, IntPtr userParam);
		internal delegate void glDebugMessageCallbackKHR(Delegate callback, IntPtr userParam);
		internal unsafe delegate void glDebugMessageControl(DebugSource source, DebugType type, DebugSeverity severity, int count, uint* ids, bool enabled);
		internal unsafe delegate void glDebugMessageControlKHR(DebugSource source, DebugType type, DebugSeverity severity, int count, uint* ids, bool enabled);
		internal unsafe delegate void glDebugMessageInsert(DebugSource source, DebugType type, uint id, DebugSeverity severity, int length, string buf);
		internal unsafe delegate void glDebugMessageInsertKHR(DebugSource source, DebugType type, uint id, DebugSeverity severity, int length, string buf);
		internal unsafe delegate void glDeleteBuffers(int n, uint* buffers);
		internal unsafe delegate void glDeleteFencesNV(int n, uint* fences);
		internal unsafe delegate void glDeleteFramebuffers(int n, uint* framebuffers);
		internal unsafe delegate void glDeleteFramebuffersOES(int n, uint* framebuffers);
		internal unsafe delegate void glDeleteMemoryObjectsEXT(int n, uint* memoryObjects);
		internal delegate void glDeletePathsNV(uint path, int range);
		internal unsafe delegate void glDeletePerfMonitorsAMD(int n, uint* monitors);
		internal delegate void glDeletePerfQueryINTEL(uint queryHandle);
		internal delegate void glDeleteProgram(uint program);
		internal unsafe delegate void glDeleteProgramPipelines(int n, uint* pipelines);
		internal unsafe delegate void glDeleteProgramPipelinesEXT(int n, uint* pipelines);
		internal unsafe delegate void glDeleteQueries(int n, uint* ids);
		internal unsafe delegate void glDeleteQueriesEXT(int n, uint* ids);
		internal unsafe delegate void glDeleteRenderbuffers(int n, uint* renderbuffers);
		internal unsafe delegate void glDeleteRenderbuffersOES(int n, uint* renderbuffers);
		internal unsafe delegate void glDeleteSamplers(int count, uint* samplers);
		internal unsafe delegate void glDeleteSemaphoresEXT(int n, uint* semaphores);
		internal delegate void glDeleteShader(uint shader);
		internal delegate void glDeleteSync(IntPtr sync);
		internal delegate void glDeleteSyncAPPLE(IntPtr sync);
		internal unsafe delegate void glDeleteTextures(int n, uint* textures);
		internal unsafe delegate void glDeleteTransformFeedbacks(int n, uint* ids);
		internal unsafe delegate void glDeleteVertexArrays(int n, uint* arrays);
		internal unsafe delegate void glDeleteVertexArraysOES(int n, uint* arrays);
		internal delegate void glDepthFunc(DepthFunction func);
		internal delegate void glDepthMask(bool flag);
		internal unsafe delegate void glDepthRangeArrayfvNV(uint first, int count, float* v);
		internal unsafe delegate void glDepthRangeArrayfvOES(uint first, int count, float* v);
		internal delegate void glDepthRangef(float n, float f);
		internal delegate void glDepthRangefOES(float n, float f);
		internal delegate void glDepthRangeIndexedfNV(uint index, float n, float f);
		internal delegate void glDepthRangeIndexedfOES(uint index, float n, float f);
		internal delegate void glDepthRangex(int n, int f);
		internal delegate void glDepthRangexOES(int n, int f);
		internal delegate void glDetachShader(uint program, uint shader);
		internal delegate void glDisable(EnableCap cap);
		internal delegate void glDisableClientState(EnableCap array);
		internal delegate void glDisableDriverControlQCOM(uint driverControl);
		internal delegate void glDisablei(EnableCap target, uint index);
		internal delegate void glDisableiEXT(EnableCap target, uint index);
		internal delegate void glDisableiNV(EnableCap target, uint index);
		internal delegate void glDisableiOES(EnableCap target, uint index);
		internal delegate void glDisableVertexAttribArray(uint index);
		internal unsafe delegate void glDiscardFramebufferEXT(FramebufferTarget target, int numAttachments, InvalidateFramebufferAttachment* attachments);
		internal delegate void glDispatchCompute(uint num_groups_x, uint num_groups_y, uint num_groups_z);
		internal delegate void glDispatchComputeIndirect(IntPtr indirect);
		internal delegate void glDrawArrays(PrimitiveType mode, int first, int count);
		internal delegate void glDrawArraysIndirect(PrimitiveType mode, IntPtr indirect);
		internal delegate void glDrawArraysInstanced(PrimitiveType mode, int first, int count, int instancecount);
		internal delegate void glDrawArraysInstancedANGLE(PrimitiveType mode, int first, int count, int primcount);
		internal delegate void glDrawArraysInstancedBaseInstanceEXT(PrimitiveType mode, int first, int count, int instancecount, uint baseinstance);
		internal delegate void glDrawArraysInstancedEXT(PrimitiveType mode, int start, int count, int primcount);
		internal delegate void glDrawArraysInstancedNV(PrimitiveType mode, int first, int count, int primcount);
		internal unsafe delegate void glDrawBuffers(int n, DrawBufferMode* bufs);
		internal unsafe delegate void glDrawBuffersEXT(int n, uint* bufs);
		internal unsafe delegate void glDrawBuffersIndexedEXT(int n, uint* location, int* indices);
		internal unsafe delegate void glDrawBuffersNV(int n, uint* bufs);
		internal delegate void glDrawElements(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices);
		internal delegate void glDrawElementsBaseVertex(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawElementsBaseVertexEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawElementsBaseVertexOES(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawElementsIndirect(PrimitiveType mode, DrawElementsType type, IntPtr indirect);
		internal delegate void glDrawElementsInstanced(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount);
		internal delegate void glDrawElementsInstancedANGLE(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glDrawElementsInstancedBaseInstanceEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, uint baseinstance);
		internal delegate void glDrawElementsInstancedBaseVertex(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
		internal delegate void glDrawElementsInstancedBaseVertexBaseInstanceEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex, uint baseinstance);
		internal delegate void glDrawElementsInstancedBaseVertexEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
		internal delegate void glDrawElementsInstancedBaseVertexOES(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
		internal delegate void glDrawElementsInstancedEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glDrawElementsInstancedNV(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glDrawMeshTasksIndirectNV(IntPtr indirect);
		internal delegate void glDrawMeshTasksNV(uint first, uint count);
		internal delegate void glDrawRangeElements(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices);
		internal delegate void glDrawRangeElementsBaseVertex(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawRangeElementsBaseVertexEXT(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawRangeElementsBaseVertexOES(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawTexfOES(float x, float y, float z, float width, float height);
		internal unsafe delegate void glDrawTexfvOES(float* coords);
		internal delegate void glDrawTexiOES(int x, int y, int z, int width, int height);
		internal unsafe delegate void glDrawTexivOES(int* coords);
		internal delegate void glDrawTexsOES(short x, short y, short z, short width, short height);
		internal unsafe delegate void glDrawTexsvOES(short* coords);
		internal delegate void glDrawTexxOES(int x, int y, int z, int width, int height);
		internal unsafe delegate void glDrawTexxvOES(int* coords);
		internal delegate void glDrawTransformFeedbackEXT(PrimitiveType mode, uint id);
		internal delegate void glDrawTransformFeedbackInstancedEXT(PrimitiveType mode, uint id, int instancecount);
		internal delegate void glDrawVkImageNV(ulong vkImage, uint sampler, float x0, float y0, float x1, float y1, float z, float s0, float t0, float s1, float t1);
		#endregion

		#region E:

		internal delegate void glEGLImageTargetRenderbufferStorageOES(uint target, IntPtr image);
		internal unsafe delegate void glEGLImageTargetTexStorageEXT(uint target, IntPtr image, int* attrib_list);
		internal delegate void glEGLImageTargetTexture2DOES(uint target, IntPtr image);
		internal unsafe delegate void glEGLImageTargetTextureStorageEXT(uint texture, IntPtr image, int* attrib_list);
		internal delegate void glEnable(EnableCap cap);
		internal delegate void glEnableClientState(EnableCap array);
		internal delegate void glEnableDriverControlQCOM(uint driverControl);
		internal delegate void glEnablei(EnableCap target, uint index);
		internal delegate void glEnableiEXT(EnableCap target, uint index);
		internal delegate void glEnableiNV(EnableCap target, uint index);
		internal delegate void glEnableiOES(EnableCap target, uint index);
		internal delegate void glEnableVertexAttribArray(uint index);
		internal delegate void glEndConditionalRenderNV();
		internal delegate void glEndPerfMonitorAMD(uint monitor);
		internal delegate void glEndPerfQueryINTEL(uint queryHandle);
		internal delegate void glEndQuery(QueryTarget target);
		internal delegate void glEndQueryEXT(QueryTarget target);
		internal delegate void glEndTilingQCOM(BufferBitQCOM preserveMask);
		internal delegate void glEndTransformFeedback();
		internal delegate void glEvalCoord1xOES(int u);
		internal unsafe delegate void glEvalCoord1xvOES(int* coords);
		internal delegate void glEvalCoord2xOES(int u, int v);
		internal unsafe delegate void glEvalCoord2xvOES(int* coords);
		internal delegate void glExtGetBufferPointervQCOM(uint target, IntPtr @params);
		internal unsafe delegate void glExtGetBuffersQCOM(uint* buffers, int maxBuffers, int* numBuffers);
		internal unsafe delegate void glExtGetFramebuffersQCOM(uint* framebuffers, int maxFramebuffers, int* numFramebuffers);
		internal unsafe delegate void glExtGetProgramBinarySourceQCOM(uint program, ShaderType shadertype, StringBuilder source, int* length);
		internal unsafe delegate void glExtGetProgramsQCOM(uint* programs, int maxPrograms, int* numPrograms);
		internal unsafe delegate void glExtGetRenderbuffersQCOM(uint* renderbuffers, int maxRenderbuffers, int* numRenderbuffers);
		internal unsafe delegate void glExtGetShadersQCOM(uint* shaders, int maxShaders, int* numShaders);
		internal unsafe delegate void glExtGetTexLevelParameterivQCOM(uint texture, uint face, int level, uint pname, int* @params);
		internal delegate void glExtGetTexSubImageQCOM(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr texels);
		internal unsafe delegate void glExtGetTexturesQCOM(uint* textures, int maxTextures, int* numTextures);
		internal delegate bool glExtIsProgramBinaryQCOM(uint program);
		internal delegate void glExtrapolateTex2DQCOM(uint src1, uint src2, uint output, float scaleFactor);
		internal delegate void glExtTexObjectStateOverrideiQCOM(uint target, uint pname, int param);
		#endregion

		#region F:

		internal unsafe delegate void glFeedbackBufferxOES(int n, uint type, int* buffer);
		internal delegate IntPtr glFenceSync(SyncCondition condition, SyncBehaviorFlags flags);
		internal delegate IntPtr glFenceSyncAPPLE(SyncCondition condition, SyncBehaviorFlags flags);
		internal delegate void glFinish();
		internal delegate void glFinishFenceNV(uint fence);
		internal delegate void glFlush();
		internal delegate void glFlushMappedBufferRange(BufferTargetARB target, IntPtr offset, int length);
		internal delegate void glFlushMappedBufferRangeEXT(BufferTargetARB target, IntPtr offset, int length);
		internal delegate void glFogf(FogParameter pname, float param);
		internal unsafe delegate void glFogfv(FogParameter pname, float* @params);
		internal delegate void glFogx(FogPName pname, int param);
		internal delegate void glFogxOES(FogPName pname, int param);
		internal unsafe delegate void glFogxv(FogPName pname, int* param);
		internal unsafe delegate void glFogxvOES(FogPName pname, int* param);
		internal delegate void glFragmentCoverageColorNV(uint color);
		internal delegate void glFramebufferFetchBarrierEXT();
		internal delegate void glFramebufferFetchBarrierQCOM();
		internal unsafe delegate void glFramebufferFoveationConfigQCOM(uint framebuffer, uint numLayers, uint focalPointsPerLayer, uint requestedFeatures, uint* providedFeatures);
		internal delegate void glFramebufferFoveationParametersQCOM(uint framebuffer, uint layer, uint focalPoint, float focalX, float focalY, float gainX, float gainY, float foveaArea);
		internal delegate void glFramebufferParameteri(FramebufferTarget target, FramebufferParameterName pname, int param);
		internal delegate void glFramebufferParameteriMESA(FramebufferTarget target, FramebufferParameterName pname, int param);
		internal delegate void glFramebufferPixelLocalStorageSizeEXT(uint target, int size);
		internal delegate void glFramebufferRenderbuffer(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal delegate void glFramebufferRenderbufferOES(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal unsafe delegate void glFramebufferSampleLocationsfvNV(FramebufferTarget target, uint start, int count, float* v);
		internal delegate void glFramebufferShadingRateEXT(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int baseLayer, int numLayers, int texelWidth, int texelHeight);
		internal delegate void glFramebufferTexture(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFramebufferTexture2D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture2DDownsampleIMG(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int xscale, int yscale);
		internal delegate void glFramebufferTexture2DMultisampleEXT(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int samples);
		internal delegate void glFramebufferTexture2DMultisampleIMG(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int samples);
		internal delegate void glFramebufferTexture2DOES(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture3DOES(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int zoffset);
		internal delegate void glFramebufferTextureEXT(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFramebufferTextureLayer(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer);
		internal delegate void glFramebufferTextureLayerDownsampleIMG(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer, int xscale, int yscale);
		internal delegate void glFramebufferTextureMultisampleMultiviewOVR(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int samples, int baseViewIndex, int numViews);
		internal delegate void glFramebufferTextureMultiviewOVR(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews);
		internal delegate void glFramebufferTextureOES(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFrontFace(FrontFaceDirection mode);
		internal delegate void glFrustumf(float l, float r, float b, float t, float n, float f);
		internal delegate void glFrustumfOES(float l, float r, float b, float t, float n, float f);
		internal delegate void glFrustumx(int l, int r, int b, int t, int n, int f);
		internal delegate void glFrustumxOES(int l, int r, int b, int t, int n, int f);
		#endregion

		#region G:

		internal unsafe delegate void glGenBuffers(int n, uint* buffers);
		internal delegate void glGenerateMipmap(TextureTarget target);
		internal delegate void glGenerateMipmapOES(TextureTarget target);
		internal unsafe delegate void glGenFencesNV(int n, uint* fences);
		internal unsafe delegate void glGenFramebuffers(int n, uint* framebuffers);
		internal unsafe delegate void glGenFramebuffersOES(int n, uint* framebuffers);
		internal delegate uint glGenPathsNV(int range);
		internal unsafe delegate void glGenPerfMonitorsAMD(int n, uint* monitors);
		internal unsafe delegate void glGenProgramPipelines(int n, uint* pipelines);
		internal unsafe delegate void glGenProgramPipelinesEXT(int n, uint* pipelines);
		internal unsafe delegate void glGenQueries(int n, uint* ids);
		internal unsafe delegate void glGenQueriesEXT(int n, uint* ids);
		internal unsafe delegate void glGenRenderbuffers(int n, uint* renderbuffers);
		internal unsafe delegate void glGenRenderbuffersOES(int n, uint* renderbuffers);
		internal unsafe delegate void glGenSamplers(int count, uint* samplers);
		internal unsafe delegate void glGenSemaphoresEXT(int n, uint* semaphores);
		internal unsafe delegate void glGenTextures(int n, uint* textures);
		internal unsafe delegate void glGenTransformFeedbacks(int n, uint* ids);
		internal unsafe delegate void glGenVertexArrays(int n, uint* arrays);
		internal unsafe delegate void glGenVertexArraysOES(int n, uint* arrays);
		internal unsafe delegate void glGetActiveAttrib(uint program, uint index, int bufSize, int* length, int* size, AttributeType* type, StringBuilder name);
		internal unsafe delegate void glGetActiveUniform(uint program, uint index, int bufSize, int* length, int* size, UniformType* type, StringBuilder name);
		internal unsafe delegate void glGetActiveUniformBlockiv(uint program, uint uniformBlockIndex, UniformBlockPName pname, int* @params);
		internal unsafe delegate void glGetActiveUniformBlockName(uint program, uint uniformBlockIndex, int bufSize, int* length, StringBuilder uniformBlockName);
		internal unsafe delegate void glGetActiveUniformsiv(uint program, int uniformCount, uint* uniformIndices, UniformPName pname, int* @params);
		internal unsafe delegate void glGetAttachedShaders(uint program, int maxCount, int* count, uint* shaders);
		internal unsafe delegate int glGetAttribLocation(uint program, string name);
		internal unsafe delegate void glGetBooleani_v(BufferTargetARB target, uint index, bool* data);
		internal unsafe delegate void glGetBooleanv(GetPName pname, bool* data);
		internal unsafe delegate void glGetBufferParameteri64v(BufferTargetARB target, BufferPNameARB pname, long* @params);
		internal unsafe delegate void glGetBufferParameteriv(BufferTargetARB target, BufferPNameARB pname, int* @params);
		internal delegate void glGetBufferPointerv(BufferTargetARB target, BufferPointerNameARB pname, IntPtr @params);
		internal delegate void glGetBufferPointervOES(BufferTargetARB target, BufferPointerNameARB pname, IntPtr @params);
		internal unsafe delegate void glGetClipPlanef(ClipPlaneName plane, float* equation);
		internal unsafe delegate void glGetClipPlanefOES(ClipPlaneName plane, float* equation);
		internal unsafe delegate void glGetClipPlanex(ClipPlaneName plane, int* equation);
		internal unsafe delegate void glGetClipPlanexOES(ClipPlaneName plane, int* equation);
		internal unsafe delegate void glGetConvolutionParameterxvOES(uint target, uint pname, int* @params);
		internal unsafe delegate void glGetCoverageModulationTableNV(int bufSize, float* v);
		internal unsafe delegate uint glGetDebugMessageLog(uint count, int bufSize, DebugSource* sources, DebugType* types, uint* ids, DebugSeverity* severities, int* lengths, StringBuilder messageLog);
		internal unsafe delegate uint glGetDebugMessageLogKHR(uint count, int bufSize, DebugSource* sources, DebugType* types, uint* ids, DebugSeverity* severities, int* lengths, StringBuilder messageLog);
		internal unsafe delegate void glGetDriverControlsQCOM(int* num, int size, uint* driverControls);
		internal unsafe delegate void glGetDriverControlStringQCOM(uint driverControl, int bufSize, int* length, StringBuilder driverControlString);
		internal delegate uint glGetError();
		internal unsafe delegate void glGetFenceivNV(uint fence, FenceParameterNameNV pname, int* @params);
		internal unsafe delegate void glGetFirstPerfQueryIdINTEL(uint* queryId);
		internal unsafe delegate void glGetFixedv(GetPName pname, int* @params);
		internal unsafe delegate void glGetFixedvOES(GetPName pname, int* @params);
		internal unsafe delegate void glGetFloati_vNV(GetPName target, uint index, float* data);
		internal unsafe delegate void glGetFloati_vOES(GetPName target, uint index, float* data);
		internal unsafe delegate void glGetFloatv(GetPName pname, float* data);
		internal unsafe delegate int glGetFragDataIndexEXT(uint program, string name);
		internal unsafe delegate int glGetFragDataLocation(uint program, string name);
		internal unsafe delegate void glGetFragmentShadingRatesEXT(int samples, int maxCount, int* count, ShadingRate* shadingRates);
		internal unsafe delegate void glGetFramebufferAttachmentParameteriv(FramebufferTarget target, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferAttachmentParameterivOES(FramebufferTarget target, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferParameteriv(FramebufferTarget target, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferParameterivMESA(FramebufferTarget target, FramebufferAttachmentParameterName pname, int* @params);
		internal delegate int glGetFramebufferPixelLocalStorageSizeEXT(FramebufferTarget target);
		internal delegate uint glGetGraphicsResetStatus();
		internal delegate uint glGetGraphicsResetStatusEXT();
		internal delegate uint glGetGraphicsResetStatusKHR();
		internal unsafe delegate void glGetHistogramParameterxvOES(HistogramTargetEXT target, GetHistogramParameterPNameEXT pname, int* @params);
		internal delegate ulong glGetImageHandleNV(uint texture, int level, bool layered, int layer, PixelFormat format);
		internal unsafe delegate void glGetInteger64i_v(GetPName target, uint index, long* data);
		internal unsafe delegate void glGetInteger64v(GetPName pname, long* data);
		internal unsafe delegate void glGetInteger64vAPPLE(GetPName pname, long* @params);
		internal unsafe delegate void glGetInteger64vEXT(GetPName pname, long* data);
		internal unsafe delegate void glGetIntegeri_v(GetPName target, uint index, int* data);
		internal unsafe delegate void glGetIntegeri_vEXT(GetPName target, uint index, int* data);
		internal unsafe delegate void glGetIntegerv(GetPName pname, int* data);
		internal unsafe delegate void glGetInternalformativ(TextureTarget target, InternalFormat internalformat, InternalFormatPName pname, int count, int* @params);
		internal unsafe delegate void glGetInternalformatSampleivNV(TextureTarget target, InternalFormat internalformat, int samples, InternalFormatPName pname, int count, int* @params);
		internal unsafe delegate void glGetLightfv(LightName light, LightParameter pname, float* @params);
		internal unsafe delegate void glGetLightxOES(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetLightxv(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetLightxvOES(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetMapxvOES(MapTarget target, GetMapQuery query, int* v);
		internal unsafe delegate void glGetMaterialfv(TriangleFace face, MaterialParameter pname, float* @params);
		internal delegate void glGetMaterialxOES(TriangleFace face, MaterialParameter pname, int param);
		internal unsafe delegate void glGetMaterialxv(TriangleFace face, MaterialParameter pname, int* @params);
		internal unsafe delegate void glGetMaterialxvOES(TriangleFace face, MaterialParameter pname, int* @params);
		internal unsafe delegate void glGetMemoryObjectDetachedResourcesuivNV(uint memory, uint pname, int first, int count, uint* @params);
		internal unsafe delegate void glGetMemoryObjectParameterivEXT(uint memoryObject, MemoryObjectParameterName pname, int* @params);
		internal unsafe delegate void glGetMultisamplefv(GetMultisamplePNameNV pname, uint index, float* val);
		internal unsafe delegate void glGetNextPerfQueryIdINTEL(uint queryId, uint* nextQueryId);
		internal unsafe delegate void glGetnUniformfv(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformfvEXT(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformfvKHR(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformiv(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformivEXT(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformivKHR(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformuiv(uint program, int location, int bufSize, uint* @params);
		internal unsafe delegate void glGetnUniformuivKHR(uint program, int location, int bufSize, uint* @params);
		internal unsafe delegate void glGetObjectLabel(ObjectIdentifier identifier, uint name, int bufSize, int* length, StringBuilder label);
		internal unsafe delegate void glGetObjectLabelEXT(uint type, uint @object, int bufSize, int* length, StringBuilder label);
		internal unsafe delegate void glGetObjectLabelKHR(uint identifier, uint name, int bufSize, int* length, StringBuilder label);
		internal unsafe delegate void glGetObjectPtrLabel(IntPtr ptr, int bufSize, int* length, StringBuilder label);
		internal unsafe delegate void glGetObjectPtrLabelKHR(IntPtr ptr, int bufSize, int* length, StringBuilder label);
		internal unsafe delegate void glGetPathColorGenfvNV(PathColor color, PathGenMode pname, float* value);
		internal unsafe delegate void glGetPathColorGenivNV(PathColor color, PathGenMode pname, int* value);
		internal unsafe delegate void glGetPathCommandsNV(uint path, PathCoordType* commands);
		internal unsafe delegate void glGetPathCoordsNV(uint path, float* coords);
		internal unsafe delegate void glGetPathDashArrayNV(uint path, float* dashArray);
		internal delegate float glGetPathLengthNV(uint path, int startSegment, int numSegments);
		internal unsafe delegate void glGetPathMetricRangeNV(PathMetricMask metricQueryMask, uint firstPathName, int numPaths, int stride, float* metrics);
		internal unsafe delegate void glGetPathMetricsNV(PathMetricMask metricQueryMask, int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, int stride, float* metrics);
		internal unsafe delegate void glGetPathParameterfvNV(uint path, PathParameter pname, float* value);
		internal unsafe delegate void glGetPathParameterivNV(uint path, PathParameter pname, int* value);
		internal unsafe delegate void glGetPathSpacingNV(PathListMode pathListMode, int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, float advanceScale, float kerningScale, PathTransformType transformType, float* returnedSpacing);
		internal unsafe delegate void glGetPathTexGenfvNV(TextureUnit texCoordSet, PathGenMode pname, float* value);
		internal unsafe delegate void glGetPathTexGenivNV(TextureUnit texCoordSet, PathGenMode pname, int* value);
		internal unsafe delegate void glGetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, StringBuilder counterName, uint counterDescLength, StringBuilder counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue);
		internal unsafe delegate void glGetPerfMonitorCounterDataAMD(uint monitor, uint pname, int dataSize, uint* data, int* bytesWritten);
		internal delegate void glGetPerfMonitorCounterInfoAMD(uint group, uint counter, uint pname, IntPtr data);
		internal unsafe delegate void glGetPerfMonitorCountersAMD(uint group, int* numCounters, int* maxActiveCounters, int counterSize, uint* counters);
		internal unsafe delegate void glGetPerfMonitorCounterStringAMD(uint group, uint counter, int bufSize, int* length, StringBuilder counterString);
		internal unsafe delegate void glGetPerfMonitorGroupsAMD(int* numGroups, int groupsSize, uint* groups);
		internal unsafe delegate void glGetPerfMonitorGroupStringAMD(uint group, int bufSize, int* length, StringBuilder groupString);
		internal unsafe delegate void glGetPerfQueryDataINTEL(uint queryHandle, PerfQueryDataFlags flags, int dataSize, IntPtr data, uint* bytesWritten);
		internal unsafe delegate void glGetPerfQueryIdByNameINTEL(StringBuilder queryName, uint* queryId);
		internal unsafe delegate void glGetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, StringBuilder queryName, uint* dataSize, uint* noCounters, uint* noInstances, PerformanceQueryCapsMaskINTEL* capsMask);
		internal unsafe delegate void glGetPixelMapxv(PixelMap map, int size, int* values);
		internal delegate void glGetPointerv(GetPointervPName pname, IntPtr @params);
		internal delegate void glGetPointervKHR(uint pname, IntPtr @params);
		internal unsafe delegate void glGetProgramBinary(uint program, int bufSize, int* length, uint* binaryFormat, IntPtr binary);
		internal unsafe delegate void glGetProgramBinaryOES(uint program, int bufSize, int* length, uint* binaryFormat, IntPtr binary);
		internal unsafe delegate void glGetProgramInfoLog(uint program, int bufSize, int* length, StringBuilder infoLog);
		internal unsafe delegate void glGetProgramInterfaceiv(uint program, ProgramInterface programInterface, ProgramInterfacePName pname, int* @params);
		internal unsafe delegate void glGetProgramiv(uint program, ProgramPropertyARB pname, int* @params);
		internal unsafe delegate void glGetProgramPipelineInfoLog(uint pipeline, int bufSize, int* length, StringBuilder infoLog);
		internal unsafe delegate void glGetProgramPipelineInfoLogEXT(uint pipeline, int bufSize, int* length, StringBuilder infoLog);
		internal unsafe delegate void glGetProgramPipelineiv(uint pipeline, PipelineParameterName pname, int* @params);
		internal unsafe delegate void glGetProgramPipelineivEXT(uint pipeline, PipelineParameterName pname, int* @params);
		internal unsafe delegate void glGetProgramResourcefvNV(uint program, ProgramInterface programInterface, uint index, int propCount, uint* props, int count, int* length, float* @params);
		internal unsafe delegate uint glGetProgramResourceIndex(uint program, ProgramInterface programInterface, string name);
		internal unsafe delegate void glGetProgramResourceiv(uint program, ProgramInterface programInterface, uint index, int propCount, ProgramResourceProperty* props, int count, int* length, int* @params);
		internal unsafe delegate int glGetProgramResourceLocation(uint program, ProgramInterface programInterface, string name);
		internal unsafe delegate int glGetProgramResourceLocationIndexEXT(uint program, ProgramInterface programInterface, string name);
		internal unsafe delegate void glGetProgramResourceName(uint program, ProgramInterface programInterface, uint index, int bufSize, int* length, StringBuilder name);
		internal unsafe delegate void glGetQueryiv(QueryTarget target, QueryParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryivEXT(QueryTarget target, QueryParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryObjecti64vEXT(uint id, QueryObjectParameterName pname, long* @params);
		internal unsafe delegate void glGetQueryObjectivEXT(uint id, QueryObjectParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryObjectui64vEXT(uint id, QueryObjectParameterName pname, ulong* @params);
		internal unsafe delegate void glGetQueryObjectuiv(uint id, QueryObjectParameterName pname, uint* @params);
		internal unsafe delegate void glGetQueryObjectuivEXT(uint id, QueryObjectParameterName pname, uint* @params);
		internal unsafe delegate void glGetRenderbufferParameteriv(RenderbufferTarget target, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetRenderbufferParameterivOES(RenderbufferTarget target, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterfv(uint sampler, SamplerParameterF pname, float* @params);
		internal unsafe delegate void glGetSamplerParameterIiv(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterIivEXT(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterIivOES(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterIuiv(uint sampler, SamplerParameterI pname, uint* @params);
		internal unsafe delegate void glGetSamplerParameterIuivEXT(uint sampler, SamplerParameterI pname, uint* @params);
		internal unsafe delegate void glGetSamplerParameterIuivOES(uint sampler, SamplerParameterI pname, uint* @params);
		internal unsafe delegate void glGetSamplerParameteriv(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSemaphoreParameterivNV(uint semaphore, SemaphoreParameterName pname, int* @params);
		internal unsafe delegate void glGetSemaphoreParameterui64vEXT(uint semaphore, SemaphoreParameterName pname, ulong* @params);
		internal unsafe delegate void glGetShaderInfoLog(uint shader, int bufSize, int* length, StringBuilder infoLog);
		internal unsafe delegate void glGetShaderiv(uint shader, ShaderParameterName pname, int* @params);
		internal unsafe delegate void glGetShaderPrecisionFormat(ShaderType shadertype, PrecisionType precisiontype, int* range, int* precision);
		internal unsafe delegate void glGetShaderSource(uint shader, int bufSize, int* length, StringBuilder source);
		internal unsafe delegate void glGetShadingRateImagePaletteNV(uint viewport, uint entry, uint* rate);
		internal unsafe delegate void glGetShadingRateSampleLocationivNV(uint rate, uint samples, uint index, int* location);
		internal unsafe delegate byte* glGetString(StringName name);
		internal unsafe delegate byte* glGetStringi(StringName name, uint index);
		internal unsafe delegate void glGetSynciv(IntPtr sync, SyncParameterName pname, int count, int* length, int* values);
		internal unsafe delegate void glGetSyncivAPPLE(IntPtr sync, SyncParameterName pname, int count, int* length, int* values);
		internal unsafe delegate void glGetTexEnvfv(TextureEnvTarget target, TextureEnvParameter pname, float* @params);
		internal unsafe delegate void glGetTexEnviv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetTexEnvxv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetTexEnvxvOES(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetTexGenfvOES(TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal unsafe delegate void glGetTexGenivOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal unsafe delegate void glGetTexGenxvOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal unsafe delegate void glGetTexLevelParameterfv(TextureTarget target, int level, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTexLevelParameteriv(TextureTarget target, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexLevelParameterxvOES(TextureTarget target, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterfv(TextureTarget target, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTexParameterIiv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterIivEXT(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterIivOES(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterIuiv(TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTexParameterIuivEXT(TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTexParameterIuivOES(TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTexParameteriv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterxv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterxvOES(TextureTarget target, GetTextureParameter pname, int* @params);
		internal delegate ulong glGetTextureHandleIMG(uint texture);
		internal delegate ulong glGetTextureHandleNV(uint texture);
		internal delegate ulong glGetTextureSamplerHandleIMG(uint texture, uint sampler);
		internal delegate ulong glGetTextureSamplerHandleNV(uint texture, uint sampler);
		internal unsafe delegate void glGetTransformFeedbackVarying(uint program, uint index, int bufSize, int* length, int* size, AttributeType* type, StringBuilder name);
		internal unsafe delegate void glGetTranslatedShaderSourceANGLE(uint shader, int bufSize, int* length, StringBuilder source);
		internal unsafe delegate uint glGetUniformBlockIndex(uint program, string uniformBlockName);
		internal unsafe delegate void glGetUniformfv(uint program, int location, float* @params);
		internal unsafe delegate void glGetUniformi64vNV(uint program, int location, long* @params);
		internal unsafe delegate void glGetUniformIndices(uint program, int uniformCount, string[] uniformNames, uint* uniformIndices);
		internal unsafe delegate void glGetUniformiv(uint program, int location, int* @params);
		internal unsafe delegate int glGetUniformLocation(uint program, string name);
		internal unsafe delegate void glGetUniformuiv(uint program, int location, uint* @params);
		internal unsafe delegate void glGetUnsignedBytei_vEXT(uint target, uint index, byte* data);
		internal unsafe delegate void glGetUnsignedBytevEXT(GetPName pname, byte* data);
		internal unsafe delegate void glGetVertexAttribfv(uint index, VertexAttribPropertyARB pname, float* @params);
		internal unsafe delegate void glGetVertexAttribIiv(uint index, VertexAttribEnum pname, int* @params);
		internal unsafe delegate void glGetVertexAttribIuiv(uint index, VertexAttribEnum pname, uint* @params);
		internal unsafe delegate void glGetVertexAttribiv(uint index, VertexAttribPropertyARB pname, int* @params);
		internal delegate void glGetVertexAttribPointerv(uint index, VertexAttribPointerPropertyARB pname, IntPtr pointer);
		internal unsafe delegate Delegate glGetVkProcAddrNV(string name);
		#endregion

		#region H:

		internal delegate void glHint(HintTarget target, HintMode mode);
		#endregion

		#region I:

		internal delegate void glImportMemoryFdEXT(uint memory, ulong size, ExternalHandleType handleType, int fd);
		internal delegate void glImportMemoryWin32HandleEXT(uint memory, ulong size, ExternalHandleType handleType, IntPtr handle);
		internal delegate void glImportMemoryWin32NameEXT(uint memory, ulong size, ExternalHandleType handleType, IntPtr name);
		internal delegate void glImportSemaphoreFdEXT(uint semaphore, ExternalHandleType handleType, int fd);
		internal delegate void glImportSemaphoreWin32HandleEXT(uint semaphore, ExternalHandleType handleType, IntPtr handle);
		internal delegate void glImportSemaphoreWin32NameEXT(uint semaphore, ExternalHandleType handleType, IntPtr name);
		internal delegate void glIndexxOES(int component);
		internal unsafe delegate void glIndexxvOES(int* component);
		internal unsafe delegate void glInsertEventMarkerEXT(int length, string marker);
		internal delegate void glInterpolatePathsNV(uint resultPath, uint pathA, uint pathB, float weight);
		internal unsafe delegate void glInvalidateFramebuffer(FramebufferTarget target, int numAttachments, InvalidateFramebufferAttachment* attachments);
		internal unsafe delegate void glInvalidateSubFramebuffer(FramebufferTarget target, int numAttachments, InvalidateFramebufferAttachment* attachments, int x, int y, int width, int height);
		internal delegate bool glIsBuffer(uint buffer);
		internal delegate bool glIsEnabled(EnableCap cap);
		internal delegate bool glIsEnabledi(EnableCap target, uint index);
		internal delegate bool glIsEnablediEXT(EnableCap target, uint index);
		internal delegate bool glIsEnablediNV(EnableCap target, uint index);
		internal delegate bool glIsEnablediOES(EnableCap target, uint index);
		internal delegate bool glIsFenceNV(uint fence);
		internal delegate bool glIsFramebuffer(uint framebuffer);
		internal delegate bool glIsFramebufferOES(uint framebuffer);
		internal delegate bool glIsImageHandleResidentNV(ulong handle);
		internal delegate bool glIsMemoryObjectEXT(uint memoryObject);
		internal delegate bool glIsPathNV(uint path);
		internal delegate bool glIsPointInFillPathNV(uint path, uint mask, float x, float y);
		internal delegate bool glIsPointInStrokePathNV(uint path, float x, float y);
		internal delegate bool glIsProgram(uint program);
		internal delegate bool glIsProgramPipeline(uint pipeline);
		internal delegate bool glIsProgramPipelineEXT(uint pipeline);
		internal delegate bool glIsQuery(uint id);
		internal delegate bool glIsQueryEXT(uint id);
		internal delegate bool glIsRenderbuffer(uint renderbuffer);
		internal delegate bool glIsRenderbufferOES(uint renderbuffer);
		internal delegate bool glIsSampler(uint sampler);
		internal delegate bool glIsSemaphoreEXT(uint semaphore);
		internal delegate bool glIsShader(uint shader);
		internal delegate bool glIsSync(IntPtr sync);
		internal delegate bool glIsSyncAPPLE(IntPtr sync);
		internal delegate bool glIsTexture(uint texture);
		internal delegate bool glIsTextureHandleResidentNV(ulong handle);
		internal delegate bool glIsTransformFeedback(uint id);
		internal delegate bool glIsVertexArray(uint array);
		internal delegate bool glIsVertexArrayOES(uint array);
		#endregion

		#region L:

		internal unsafe delegate void glLabelObjectEXT(uint type, uint @object, int length, string label);
		internal delegate void glLightf(LightName light, LightParameter pname, float param);
		internal unsafe delegate void glLightfv(LightName light, LightParameter pname, float* @params);
		internal delegate void glLightModelf(LightModelParameter pname, float param);
		internal unsafe delegate void glLightModelfv(LightModelParameter pname, float* @params);
		internal delegate void glLightModelx(LightModelParameter pname, int param);
		internal delegate void glLightModelxOES(LightModelParameter pname, int param);
		internal unsafe delegate void glLightModelxv(LightModelParameter pname, int* param);
		internal unsafe delegate void glLightModelxvOES(LightModelParameter pname, int* param);
		internal delegate void glLightx(LightName light, LightParameter pname, int param);
		internal delegate void glLightxOES(LightName light, LightParameter pname, int param);
		internal unsafe delegate void glLightxv(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glLightxvOES(LightName light, LightParameter pname, int* @params);
		internal delegate void glLineWidth(float width);
		internal delegate void glLineWidthx(int width);
		internal delegate void glLineWidthxOES(int width);
		internal delegate void glLinkProgram(uint program);
		internal delegate void glLoadIdentity();
		internal unsafe delegate void glLoadMatrixf(float* m);
		internal unsafe delegate void glLoadMatrixx(int* m);
		internal unsafe delegate void glLoadMatrixxOES(int* m);
		internal delegate void glLoadPaletteFromModelViewMatrixOES();
		internal unsafe delegate void glLoadTransposeMatrixxOES(int* m);
		internal delegate void glLogicOp(LogicOp opcode);
		#endregion

		#region M:

		internal delegate void glMakeImageHandleNonResidentNV(ulong handle);
		internal delegate void glMakeImageHandleResidentNV(ulong handle, uint access);
		internal delegate void glMakeTextureHandleNonResidentNV(ulong handle);
		internal delegate void glMakeTextureHandleResidentNV(ulong handle);
		internal delegate void glMap1xOES(MapTarget target, int u1, int u2, int stride, int order, int points);
		internal delegate void glMap2xOES(MapTarget target, int u1, int u2, int ustride, int uorder, int v1, int v2, int vstride, int vorder, int points);
		internal unsafe delegate IntPtr* glMapBufferOES(BufferTargetARB target, BufferAccessARB access);
		internal unsafe delegate IntPtr* glMapBufferRange(BufferTargetARB target, IntPtr offset, int length, MapBufferAccessMask access);
		internal unsafe delegate IntPtr* glMapBufferRangeEXT(BufferTargetARB target, IntPtr offset, int length, MapBufferAccessMask access);
		internal delegate void glMapGrid1xOES(int n, int u1, int u2);
		internal delegate void glMapGrid2xOES(int n, int u1, int u2, int v1, int v2);
		internal delegate void glMaterialf(TriangleFace face, MaterialParameter pname, float param);
		internal unsafe delegate void glMaterialfv(TriangleFace face, MaterialParameter pname, float* @params);
		internal delegate void glMaterialx(TriangleFace face, MaterialParameter pname, int param);
		internal delegate void glMaterialxOES(TriangleFace face, MaterialParameter pname, int param);
		internal unsafe delegate void glMaterialxv(TriangleFace face, MaterialParameter pname, int* param);
		internal unsafe delegate void glMaterialxvOES(TriangleFace face, MaterialParameter pname, int* param);
		internal delegate void glMatrixFrustumEXT(MatrixMode mode, double left, double right, double bottom, double top, double zNear, double zFar);
		internal delegate void glMatrixIndexPointerOES(int size, MatrixIndexPointerTypeARB type, int stride, IntPtr pointer);
		internal unsafe delegate void glMatrixLoad3x2fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixLoad3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixLoaddEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixLoadfEXT(MatrixMode mode, float* m);
		internal delegate void glMatrixLoadIdentityEXT(MatrixMode mode);
		internal unsafe delegate void glMatrixLoadTranspose3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixLoadTransposedEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixLoadTransposefEXT(MatrixMode mode, float* m);
		internal delegate void glMatrixMode(MatrixMode mode);
		internal unsafe delegate void glMatrixMult3x2fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixMult3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixMultdEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixMultfEXT(MatrixMode mode, float* m);
		internal unsafe delegate void glMatrixMultTranspose3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixMultTransposedEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixMultTransposefEXT(MatrixMode mode, float* m);
		internal delegate void glMatrixOrthoEXT(MatrixMode mode, double left, double right, double bottom, double top, double zNear, double zFar);
		internal delegate void glMatrixPopEXT(MatrixMode mode);
		internal delegate void glMatrixPushEXT(MatrixMode mode);
		internal delegate void glMatrixRotatedEXT(MatrixMode mode, double angle, double x, double y, double z);
		internal delegate void glMatrixRotatefEXT(MatrixMode mode, float angle, float x, float y, float z);
		internal delegate void glMatrixScaledEXT(MatrixMode mode, double x, double y, double z);
		internal delegate void glMatrixScalefEXT(MatrixMode mode, float x, float y, float z);
		internal delegate void glMatrixTranslatedEXT(MatrixMode mode, double x, double y, double z);
		internal delegate void glMatrixTranslatefEXT(MatrixMode mode, float x, float y, float z);
		internal delegate void glMaxActiveShaderCoresARM(uint count);
		internal delegate void glMaxShaderCompilerThreadsKHR(uint count);
		internal delegate void glMemoryBarrier(MemoryBarrierMask barriers);
		internal delegate void glMemoryBarrierByRegion(MemoryBarrierMask barriers);
		internal unsafe delegate void glMemoryObjectParameterivEXT(uint memoryObject, MemoryObjectParameterName pname, int* @params);
		internal delegate void glMinSampleShading(float value);
		internal delegate void glMinSampleShadingOES(float value);
		internal unsafe delegate void glMultiDrawArraysEXT(PrimitiveType mode, int* first, int* count, int primcount);
		internal delegate void glMultiDrawArraysIndirectEXT(PrimitiveType mode, IntPtr indirect, int drawcount, int stride);
		internal unsafe delegate void glMultiDrawElementsBaseVertexEXT(PrimitiveType mode, int* count, DrawElementsType type, IntPtr indices, int drawcount, int* basevertex);
		internal unsafe delegate void glMultiDrawElementsEXT(PrimitiveType mode, int* count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glMultiDrawElementsIndirectEXT(PrimitiveType mode, DrawElementsType type, IntPtr indirect, int drawcount, int stride);
		internal delegate void glMultiDrawMeshTasksIndirectCountNV(IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
		internal delegate void glMultiDrawMeshTasksIndirectNV(IntPtr indirect, int drawcount, int stride);
		internal delegate void glMultiTexCoord1bOES(TextureUnit texture, sbyte s);
		internal unsafe delegate void glMultiTexCoord1bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord1xOES(TextureUnit texture, int s);
		internal unsafe delegate void glMultiTexCoord1xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoord2bOES(TextureUnit texture, sbyte s, sbyte t);
		internal unsafe delegate void glMultiTexCoord2bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord2xOES(TextureUnit texture, int s, int t);
		internal unsafe delegate void glMultiTexCoord2xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoord3bOES(TextureUnit texture, sbyte s, sbyte t, sbyte r);
		internal unsafe delegate void glMultiTexCoord3bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord3xOES(TextureUnit texture, int s, int t, int r);
		internal unsafe delegate void glMultiTexCoord3xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoord4bOES(TextureUnit texture, sbyte s, sbyte t, sbyte r, sbyte q);
		internal unsafe delegate void glMultiTexCoord4bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord4f(TextureUnit target, float s, float t, float r, float q);
		internal delegate void glMultiTexCoord4x(TextureUnit texture, int s, int t, int r, int q);
		internal delegate void glMultiTexCoord4xOES(TextureUnit texture, int s, int t, int r, int q);
		internal unsafe delegate void glMultiTexCoord4xvOES(TextureUnit texture, int* coords);
		internal unsafe delegate void glMultMatrixf(float* m);
		internal unsafe delegate void glMultMatrixx(int* m);
		internal unsafe delegate void glMultMatrixxOES(int* m);
		internal unsafe delegate void glMultTransposeMatrixxOES(int* m);
		#endregion

		#region N:

		internal delegate void glNamedBufferAttachMemoryNV(uint buffer, uint memory, ulong offset);
		internal delegate void glNamedBufferPageCommitmentMemNV(uint buffer, IntPtr offset, int size, uint memory, ulong memOffset, bool commit);
		internal delegate void glNamedBufferStorageExternalEXT(uint buffer, IntPtr offset, int size, IntPtr clientBuffer, BufferStorageMask flags);
		internal delegate void glNamedBufferStorageMemEXT(uint buffer, int size, uint memory, ulong offset);
		internal unsafe delegate void glNamedFramebufferSampleLocationsfvNV(uint framebuffer, uint start, int count, float* v);
		internal delegate void glNamedFramebufferTextureMultiviewOVR(uint framebuffer, FramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews);
		internal delegate void glNamedRenderbufferStorageMultisampleAdvancedAMD(uint renderbuffer, int samples, int storageSamples, InternalFormat internalformat, int width, int height);
		internal delegate void glNormal3f(float nx, float ny, float nz);
		internal delegate void glNormal3x(int nx, int ny, int nz);
		internal delegate void glNormal3xOES(int nx, int ny, int nz);
		internal unsafe delegate void glNormal3xvOES(int* coords);
		internal delegate void glNormalPointer(NormalPointerType type, int stride, IntPtr pointer);
		#endregion

		#region O:

		internal unsafe delegate void glObjectLabel(ObjectIdentifier identifier, uint name, int length, string label);
		internal unsafe delegate void glObjectLabelKHR(ObjectIdentifier identifier, uint name, int length, string label);
		internal unsafe delegate void glObjectPtrLabel(IntPtr ptr, int length, string label);
		internal unsafe delegate void glObjectPtrLabelKHR(IntPtr ptr, int length, string label);
		internal delegate void glOrthof(float l, float r, float b, float t, float n, float f);
		internal delegate void glOrthofOES(float l, float r, float b, float t, float n, float f);
		internal delegate void glOrthox(int l, int r, int b, int t, int n, int f);
		internal delegate void glOrthoxOES(int l, int r, int b, int t, int n, int f);
		#endregion

		#region P:

		internal delegate void glPassThroughxOES(int token);
		internal delegate void glPatchParameteri(PatchParameterName pname, int value);
		internal delegate void glPatchParameteriEXT(PatchParameterName pname, int value);
		internal delegate void glPatchParameteriOES(PatchParameterName pname, int value);
		internal unsafe delegate void glPathColorGenNV(PathColor color, PathGenMode genMode, PathColorFormat colorFormat, float* coeffs);
		internal unsafe delegate void glPathCommandsNV(uint path, int numCommands, PathCoordType* commands, int numCoords, PathCoordType coordType, IntPtr coords);
		internal delegate void glPathCoordsNV(uint path, int numCoords, PathCoordType coordType, IntPtr coords);
		internal delegate void glPathCoverDepthFuncNV(DepthFunction func);
		internal unsafe delegate void glPathDashArrayNV(uint path, int dashCount, float* dashArray);
		internal delegate void glPathFogGenNV(PathGenMode genMode);
		internal delegate uint glPathGlyphIndexArrayNV(uint firstPathName, uint fontTarget, IntPtr fontName, PathFontStyle fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale);
		internal unsafe delegate uint glPathGlyphIndexRangeNV(uint fontTarget, IntPtr fontName, PathFontStyle fontStyle, uint pathParameterTemplate, float emScale, uint* baseAndCount);
		internal delegate void glPathGlyphRangeNV(uint firstPathName, PathFontTarget fontTarget, IntPtr fontName, PathFontStyle fontStyle, uint firstGlyph, int numGlyphs, PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate void glPathGlyphsNV(uint firstPathName, PathFontTarget fontTarget, IntPtr fontName, PathFontStyle fontStyle, int numGlyphs, PathElementType type, IntPtr charcodes, PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate uint glPathMemoryGlyphIndexArrayNV(uint firstPathName, uint fontTarget, int fontSize, IntPtr fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate void glPathParameterfNV(uint path, PathParameter pname, float value);
		internal unsafe delegate void glPathParameterfvNV(uint path, PathParameter pname, float* value);
		internal delegate void glPathParameteriNV(uint path, PathParameter pname, int value);
		internal unsafe delegate void glPathParameterivNV(uint path, PathParameter pname, int* value);
		internal delegate void glPathStencilDepthOffsetNV(float factor, float units);
		internal delegate void glPathStencilFuncNV(StencilFunction func, int @ref, uint mask);
		internal delegate void glPathStringNV(uint path, PathStringFormat format, int length, IntPtr pathString);
		internal unsafe delegate void glPathSubCommandsNV(uint path, int commandStart, int commandsToDelete, int numCommands, PathCoordType* commands, int numCoords, PathCoordType coordType, IntPtr coords);
		internal delegate void glPathSubCoordsNV(uint path, int coordStart, int numCoords, PathCoordType coordType, IntPtr coords);
		internal unsafe delegate void glPathTexGenNV(PathColor texCoordSet, PathGenMode genMode, int components, float* coeffs);
		internal delegate void glPauseTransformFeedback();
		internal unsafe delegate void glPixelMapx(PixelMap map, int size, int* values);
		internal delegate void glPixelStorei(PixelStoreParameter pname, int param);
		internal delegate void glPixelStorex(PixelStoreParameter pname, int param);
		internal delegate void glPixelTransferxOES(PixelTransferParameter pname, int param);
		internal delegate void glPixelZoomxOES(int xfactor, int yfactor);
		internal unsafe delegate bool glPointAlongPathNV(uint path, int startSegment, int numSegments, float distance, float* x, float* y, float* tangentX, float* tangentY);
		internal delegate void glPointParameterf(PointParameterNameARB pname, float param);
		internal unsafe delegate void glPointParameterfv(PointParameterNameARB pname, float* @params);
		internal delegate void glPointParameterx(PointParameterNameARB pname, int param);
		internal delegate void glPointParameterxOES(PointParameterNameARB pname, int param);
		internal unsafe delegate void glPointParameterxv(PointParameterNameARB pname, int* @params);
		internal unsafe delegate void glPointParameterxvOES(PointParameterNameARB pname, int* @params);
		internal delegate void glPointSize(float size);
		internal delegate void glPointSizePointerOES(uint type, int stride, IntPtr pointer);
		internal delegate void glPointSizex(int size);
		internal delegate void glPointSizexOES(int size);
		internal delegate void glPolygonModeNV(TriangleFace face, PolygonMode mode);
		internal delegate void glPolygonOffset(float factor, float units);
		internal delegate void glPolygonOffsetClampEXT(float factor, float units, float clamp);
		internal delegate void glPolygonOffsetx(int factor, int units);
		internal delegate void glPolygonOffsetxOES(int factor, int units);
		internal delegate void glPopDebugGroup();
		internal delegate void glPopDebugGroupKHR();
		internal delegate void glPopGroupMarkerEXT();
		internal delegate void glPopMatrix();
		internal delegate void glPrimitiveBoundingBox(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal delegate void glPrimitiveBoundingBoxEXT(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal delegate void glPrimitiveBoundingBoxOES(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal unsafe delegate void glPrioritizeTexturesxOES(int n, uint* textures, int* priorities);
		internal delegate void glProgramBinary(uint program, uint binaryFormat, IntPtr binary, int length);
		internal delegate void glProgramBinaryOES(uint program, uint binaryFormat, IntPtr binary, int length);
		internal delegate void glProgramParameteri(uint program, ProgramParameterPName pname, int value);
		internal delegate void glProgramParameteriEXT(uint program, ProgramParameterPName pname, int value);
		internal unsafe delegate void glProgramPathFragmentInputGenNV(uint program, int location, uint genMode, int components, float* coeffs);
		internal delegate void glProgramUniform1f(uint program, int location, float v0);
		internal delegate void glProgramUniform1fEXT(uint program, int location, float v0);
		internal unsafe delegate void glProgramUniform1fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform1fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform1i(uint program, int location, int v0);
		internal delegate void glProgramUniform1i64NV(uint program, int location, long x);
		internal unsafe delegate void glProgramUniform1i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform1iEXT(uint program, int location, int v0);
		internal unsafe delegate void glProgramUniform1iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform1ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform1ui(uint program, int location, uint v0);
		internal delegate void glProgramUniform1ui64NV(uint program, int location, ulong x);
		internal unsafe delegate void glProgramUniform1ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform1uiEXT(uint program, int location, uint v0);
		internal unsafe delegate void glProgramUniform1uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform1uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniform2f(uint program, int location, float v0, float v1);
		internal delegate void glProgramUniform2fEXT(uint program, int location, float v0, float v1);
		internal unsafe delegate void glProgramUniform2fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform2fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform2i(uint program, int location, int v0, int v1);
		internal delegate void glProgramUniform2i64NV(uint program, int location, long x, long y);
		internal unsafe delegate void glProgramUniform2i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform2iEXT(uint program, int location, int v0, int v1);
		internal unsafe delegate void glProgramUniform2iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform2ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform2ui(uint program, int location, uint v0, uint v1);
		internal delegate void glProgramUniform2ui64NV(uint program, int location, ulong x, ulong y);
		internal unsafe delegate void glProgramUniform2ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform2uiEXT(uint program, int location, uint v0, uint v1);
		internal unsafe delegate void glProgramUniform2uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform2uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniform3f(uint program, int location, float v0, float v1, float v2);
		internal delegate void glProgramUniform3fEXT(uint program, int location, float v0, float v1, float v2);
		internal unsafe delegate void glProgramUniform3fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform3fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform3i(uint program, int location, int v0, int v1, int v2);
		internal delegate void glProgramUniform3i64NV(uint program, int location, long x, long y, long z);
		internal unsafe delegate void glProgramUniform3i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform3iEXT(uint program, int location, int v0, int v1, int v2);
		internal unsafe delegate void glProgramUniform3iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform3ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform3ui(uint program, int location, uint v0, uint v1, uint v2);
		internal delegate void glProgramUniform3ui64NV(uint program, int location, ulong x, ulong y, ulong z);
		internal unsafe delegate void glProgramUniform3ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform3uiEXT(uint program, int location, uint v0, uint v1, uint v2);
		internal unsafe delegate void glProgramUniform3uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform3uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniform4f(uint program, int location, float v0, float v1, float v2, float v3);
		internal delegate void glProgramUniform4fEXT(uint program, int location, float v0, float v1, float v2, float v3);
		internal unsafe delegate void glProgramUniform4fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform4fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform4i(uint program, int location, int v0, int v1, int v2, int v3);
		internal delegate void glProgramUniform4i64NV(uint program, int location, long x, long y, long z, long w);
		internal unsafe delegate void glProgramUniform4i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform4iEXT(uint program, int location, int v0, int v1, int v2, int v3);
		internal unsafe delegate void glProgramUniform4iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform4ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform4ui(uint program, int location, uint v0, uint v1, uint v2, uint v3);
		internal delegate void glProgramUniform4ui64NV(uint program, int location, ulong x, ulong y, ulong z, ulong w);
		internal unsafe delegate void glProgramUniform4ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform4uiEXT(uint program, int location, uint v0, uint v1, uint v2, uint v3);
		internal unsafe delegate void glProgramUniform4uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform4uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniformHandleui64IMG(uint program, int location, ulong value);
		internal delegate void glProgramUniformHandleui64NV(uint program, int location, ulong value);
		internal unsafe delegate void glProgramUniformHandleui64vIMG(uint program, int location, int count, ulong* values);
		internal unsafe delegate void glProgramUniformHandleui64vNV(uint program, int location, int count, ulong* values);
		internal unsafe delegate void glProgramUniformMatrix2fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x3fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x3fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x4fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x4fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x2fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x2fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x4fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x4fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x2fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x2fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x3fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x3fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glPushDebugGroup(DebugSource source, uint id, int length, string message);
		internal unsafe delegate void glPushDebugGroupKHR(DebugSource source, uint id, int length, string message);
		internal unsafe delegate void glPushGroupMarkerEXT(int length, string marker);
		internal delegate void glPushMatrix();
		#endregion

		#region Q:

		internal delegate void glQueryCounterEXT(uint id, QueryCounterTarget target);
		internal unsafe delegate uint glQueryMatrixxOES(int* mantissa, int* exponent);
		#endregion

		#region R:

		internal delegate void glRasterPos2xOES(int x, int y);
		internal unsafe delegate void glRasterPos2xvOES(int* coords);
		internal delegate void glRasterPos3xOES(int x, int y, int z);
		internal unsafe delegate void glRasterPos3xvOES(int* coords);
		internal delegate void glRasterPos4xOES(int x, int y, int z, int w);
		internal unsafe delegate void glRasterPos4xvOES(int* coords);
		internal delegate void glRasterSamplesEXT(uint samples, bool fixedsamplelocations);
		internal delegate void glReadBuffer(ReadBufferMode src);
		internal delegate void glReadBufferIndexedEXT(ReadBufferMode src, int index);
		internal delegate void glReadBufferNV(uint mode);
		internal delegate void glReadnPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadnPixelsEXT(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadnPixelsKHR(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glRectxOES(int x1, int y1, int x2, int y2);
		internal unsafe delegate void glRectxvOES(int* v1, int* v2);
		internal delegate bool glReleaseKeyedMutexWin32EXT(uint memory, ulong key);
		internal delegate void glReleaseShaderCompiler();
		internal delegate void glRenderbufferStorage(RenderbufferTarget target, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisample(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleAdvancedAMD(RenderbufferTarget target, int samples, int storageSamples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleANGLE(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleAPPLE(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleEXT(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleIMG(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleNV(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageOES(RenderbufferTarget target, InternalFormat internalformat, int width, int height);
		internal delegate void glResetMemoryObjectParameterNV(uint memory, uint pname);
		internal delegate void glResolveDepthValuesNV();
		internal delegate void glResolveMultisampleFramebufferAPPLE();
		internal delegate void glResumeTransformFeedback();
		internal delegate void glRotatef(float angle, float x, float y, float z);
		internal delegate void glRotatex(int angle, int x, int y, int z);
		internal delegate void glRotatexOES(int angle, int x, int y, int z);
		#endregion

		#region S:

		internal delegate void glSampleCoverage(float value, bool invert);
		internal delegate void glSampleCoveragex(int value, bool invert);
		internal delegate void glSampleCoveragexOES(int value, bool invert);
		internal delegate void glSampleMaski(uint maskNumber, uint mask);
		internal delegate void glSamplerParameterf(uint sampler, SamplerParameterF pname, float param);
		internal unsafe delegate void glSamplerParameterfv(uint sampler, SamplerParameterF pname, float* param);
		internal delegate void glSamplerParameteri(uint sampler, SamplerParameterI pname, int param);
		internal unsafe delegate void glSamplerParameterIiv(uint sampler, SamplerParameterI pname, int* param);
		internal unsafe delegate void glSamplerParameterIivEXT(uint sampler, SamplerParameterI pname, int* param);
		internal unsafe delegate void glSamplerParameterIivOES(uint sampler, SamplerParameterI pname, int* param);
		internal unsafe delegate void glSamplerParameterIuiv(uint sampler, SamplerParameterI pname, uint* param);
		internal unsafe delegate void glSamplerParameterIuivEXT(uint sampler, SamplerParameterI pname, uint* param);
		internal unsafe delegate void glSamplerParameterIuivOES(uint sampler, SamplerParameterI pname, uint* param);
		internal unsafe delegate void glSamplerParameteriv(uint sampler, SamplerParameterI pname, int* param);
		internal delegate void glScalef(float x, float y, float z);
		internal delegate void glScalex(int x, int y, int z);
		internal delegate void glScalexOES(int x, int y, int z);
		internal delegate void glScissor(int x, int y, int width, int height);
		internal unsafe delegate void glScissorArrayvNV(uint first, int count, int* v);
		internal unsafe delegate void glScissorArrayvOES(uint first, int count, int* v);
		internal unsafe delegate void glScissorExclusiveArrayvNV(uint first, int count, int* v);
		internal delegate void glScissorExclusiveNV(int x, int y, int width, int height);
		internal delegate void glScissorIndexedNV(uint index, int left, int bottom, int width, int height);
		internal delegate void glScissorIndexedOES(uint index, int left, int bottom, int width, int height);
		internal unsafe delegate void glScissorIndexedvNV(uint index, int* v);
		internal unsafe delegate void glScissorIndexedvOES(uint index, int* v);
		internal unsafe delegate void glSelectPerfMonitorCountersAMD(uint monitor, bool enable, uint group, int numCounters, uint* counterList);
		internal unsafe delegate void glSemaphoreParameterivNV(uint semaphore, SemaphoreParameterName pname, int* @params);
		internal unsafe delegate void glSemaphoreParameterui64vEXT(uint semaphore, SemaphoreParameterName pname, ulong* @params);
		internal delegate void glSetFenceNV(uint fence, FenceConditionNV condition);
		internal delegate void glShadeModel(ShadingModel mode);
		internal unsafe delegate void glShaderBinary(int count, uint* shaders, ShaderBinaryFormat binaryFormat, IntPtr binary, int length);
		internal unsafe delegate void glShaderSource(uint shader, int count, string[] @string, int* length);
		internal delegate void glShadingRateCombinerOpsEXT(ShadingRateCombinerOp combinerOp0, ShadingRateCombinerOp combinerOp1);
		internal delegate void glShadingRateEXT(ShadingRate rate);
		internal delegate void glShadingRateImageBarrierNV(bool synchronize);
		internal unsafe delegate void glShadingRateImagePaletteNV(uint viewport, uint first, int count, uint* rates);
		internal delegate void glShadingRateQCOM(ShadingRateQCOM rate);
		internal unsafe delegate void glShadingRateSampleOrderCustomNV(uint rate, uint samples, int* locations);
		internal delegate void glShadingRateSampleOrderNV(uint order);
		internal unsafe delegate void glSignalSemaphoreEXT(uint semaphore, uint numBufferBarriers, uint* buffers, uint numTextureBarriers, uint* textures, TextureLayout* dstLayouts);
		internal delegate void glSignalVkFenceNV(ulong vkFence);
		internal delegate void glSignalVkSemaphoreNV(ulong vkSemaphore);
		internal delegate void glStartTilingQCOM(uint x, uint y, uint width, uint height, BufferBitQCOM preserveMask);
		internal unsafe delegate void glStencilFillPathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, PathFillMode fillMode, uint mask, PathTransformType transformType, float* transformValues);
		internal delegate void glStencilFillPathNV(uint path, PathFillMode fillMode, uint mask);
		internal delegate void glStencilFunc(StencilFunction func, int @ref, uint mask);
		internal delegate void glStencilFuncSeparate(TriangleFace face, StencilFunction func, int @ref, uint mask);
		internal delegate void glStencilMask(uint mask);
		internal delegate void glStencilMaskSeparate(TriangleFace face, uint mask);
		internal delegate void glStencilOp(StencilOp fail, StencilOp zfail, StencilOp zpass);
		internal delegate void glStencilOpSeparate(TriangleFace face, StencilOp sfail, StencilOp dpfail, StencilOp dppass);
		internal unsafe delegate void glStencilStrokePathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, PathTransformType transformType, float* transformValues);
		internal delegate void glStencilStrokePathNV(uint path, int reference, uint mask);
		internal unsafe delegate void glStencilThenCoverFillPathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, PathFillMode fillMode, uint mask, InstancedPathCoverMode coverMode, PathTransformType transformType, float* transformValues);
		internal delegate void glStencilThenCoverFillPathNV(uint path, PathFillMode fillMode, uint mask, PathCoverMode coverMode);
		internal unsafe delegate void glStencilThenCoverStrokePathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, InstancedPathCoverMode coverMode, PathTransformType transformType, float* transformValues);
		internal delegate void glStencilThenCoverStrokePathNV(uint path, int reference, uint mask, PathCoverMode coverMode);
		internal delegate void glSubpixelPrecisionBiasNV(uint xbits, uint ybits);
		#endregion

		#region T:

		internal delegate bool glTestFenceNV(uint fence);
		internal delegate void glTexAttachMemoryNV(TextureTarget target, uint memory, ulong offset);
		internal delegate void glTexBuffer(TextureTarget target, SizedInternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferEXT(TextureTarget target, SizedInternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferOES(TextureTarget target, SizedInternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferRange(TextureTarget target, SizedInternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTexBufferRangeEXT(TextureTarget target, SizedInternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTexBufferRangeOES(TextureTarget target, SizedInternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTexCoord1bOES(sbyte s);
		internal unsafe delegate void glTexCoord1bvOES(sbyte* coords);
		internal delegate void glTexCoord1xOES(int s);
		internal unsafe delegate void glTexCoord1xvOES(int* coords);
		internal delegate void glTexCoord2bOES(sbyte s, sbyte t);
		internal unsafe delegate void glTexCoord2bvOES(sbyte* coords);
		internal delegate void glTexCoord2xOES(int s, int t);
		internal unsafe delegate void glTexCoord2xvOES(int* coords);
		internal delegate void glTexCoord3bOES(sbyte s, sbyte t, sbyte r);
		internal unsafe delegate void glTexCoord3bvOES(sbyte* coords);
		internal delegate void glTexCoord3xOES(int s, int t, int r);
		internal unsafe delegate void glTexCoord3xvOES(int* coords);
		internal delegate void glTexCoord4bOES(sbyte s, sbyte t, sbyte r, sbyte q);
		internal unsafe delegate void glTexCoord4bvOES(sbyte* coords);
		internal delegate void glTexCoord4xOES(int s, int t, int r, int q);
		internal unsafe delegate void glTexCoord4xvOES(int* coords);
		internal delegate void glTexCoordPointer(int size, TexCoordPointerType type, int stride, IntPtr pointer);
		internal delegate void glTexEnvf(TextureEnvTarget target, TextureEnvParameter pname, float param);
		internal unsafe delegate void glTexEnvfv(TextureEnvTarget target, TextureEnvParameter pname, float* @params);
		internal delegate void glTexEnvi(TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal unsafe delegate void glTexEnviv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal delegate void glTexEnvx(TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal delegate void glTexEnvxOES(TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal unsafe delegate void glTexEnvxv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glTexEnvxvOES(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal delegate void glTexEstimateMotionQCOM(uint @ref, uint target, uint output);
		internal delegate void glTexEstimateMotionRegionsQCOM(uint @ref, uint target, uint output, uint mask);
		internal delegate void glTexGenfOES(TextureCoordName coord, TextureGenParameter pname, float param);
		internal unsafe delegate void glTexGenfvOES(TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal delegate void glTexGeniOES(TextureCoordName coord, TextureGenParameter pname, int param);
		internal unsafe delegate void glTexGenivOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glTexGenxOES(TextureCoordName coord, TextureGenParameter pname, int param);
		internal unsafe delegate void glTexGenxvOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage3D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage3DOES(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexPageCommitmentEXT(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, bool commit);
		internal delegate void glTexPageCommitmentMemNV(TextureTarget target, int layer, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint memory, ulong offset, bool commit);
		internal delegate void glTexParameterf(TextureTarget target, TextureParameterName pname, float param);
		internal unsafe delegate void glTexParameterfv(TextureTarget target, TextureParameterName pname, float* @params);
		internal delegate void glTexParameteri(TextureTarget target, TextureParameterName pname, int param);
		internal unsafe delegate void glTexParameterIiv(TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTexParameterIivEXT(TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTexParameterIivOES(TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTexParameterIuiv(TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTexParameterIuivEXT(TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTexParameterIuivOES(TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTexParameteriv(TextureTarget target, TextureParameterName pname, int* @params);
		internal delegate void glTexParameterx(TextureTarget target, GetTextureParameter pname, int param);
		internal delegate void glTexParameterxOES(TextureTarget target, GetTextureParameter pname, int param);
		internal unsafe delegate void glTexParameterxv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glTexParameterxvOES(TextureTarget target, GetTextureParameter pname, int* @params);
		internal delegate void glTexStorage1DEXT(TextureTarget target, int levels, SizedInternalFormat internalformat, int width);
		internal delegate void glTexStorage2D(TextureTarget target, int levels, SizedInternalFormat internalformat, int width, int height);
		internal delegate void glTexStorage2DEXT(TextureTarget target, int levels, SizedInternalFormat internalformat, int width, int height);
		internal delegate void glTexStorage2DMultisample(TextureTarget target, int samples, SizedInternalFormat internalformat, int width, int height, bool fixedsamplelocations);
		internal delegate void glTexStorage3D(TextureTarget target, int levels, SizedInternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTexStorage3DEXT(TextureTarget target, int levels, SizedInternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTexStorage3DMultisample(TextureTarget target, int samples, SizedInternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal delegate void glTexStorage3DMultisampleOES(TextureTarget target, int samples, SizedInternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal unsafe delegate void glTexStorageAttribs2DEXT(TextureTarget target, int levels, SizedInternalFormat internalformat, int width, int height, TexStorageAttribs* attrib_list);
		internal unsafe delegate void glTexStorageAttribs3DEXT(TextureTarget target, int levels, SizedInternalFormat internalformat, int width, int height, int depth, TexStorageAttribs* attrib_list);
		internal delegate void glTexStorageMem1DEXT(TextureTarget target, int levels, SizedInternalFormat internalFormat, int width, uint memory, ulong offset);
		internal delegate void glTexStorageMem2DEXT(TextureTarget target, int levels, SizedInternalFormat internalFormat, int width, int height, uint memory, ulong offset);
		internal delegate void glTexStorageMem2DMultisampleEXT(TextureTarget target, int samples, SizedInternalFormat internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTexStorageMem3DEXT(TextureTarget target, int levels, SizedInternalFormat internalFormat, int width, int height, int depth, uint memory, ulong offset);
		internal delegate void glTexStorageMem3DMultisampleEXT(TextureTarget target, int samples, SizedInternalFormat internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage3DOES(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureAttachMemoryNV(uint texture, uint memory, ulong offset);
		internal delegate void glTextureBarrierNV();
		internal delegate void glTextureFoveationParametersQCOM(uint texture, uint layer, uint focalPoint, float focalX, float focalY, float gainX, float gainY, float foveaArea);
		internal delegate void glTexturePageCommitmentMemNV(uint texture, int layer, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint memory, ulong offset, bool commit);
		internal delegate void glTextureStorage1DEXT(uint texture, uint target, int levels, SizedInternalFormat internalformat, int width);
		internal delegate void glTextureStorage2DEXT(uint texture, uint target, int levels, SizedInternalFormat internalformat, int width, int height);
		internal delegate void glTextureStorage3DEXT(uint texture, uint target, int levels, SizedInternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTextureStorageMem1DEXT(uint texture, int levels, SizedInternalFormat internalFormat, int width, uint memory, ulong offset);
		internal delegate void glTextureStorageMem2DEXT(uint texture, int levels, SizedInternalFormat internalFormat, int width, int height, uint memory, ulong offset);
		internal delegate void glTextureStorageMem2DMultisampleEXT(uint texture, int samples, SizedInternalFormat internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTextureStorageMem3DEXT(uint texture, int levels, SizedInternalFormat internalFormat, int width, int height, int depth, uint memory, ulong offset);
		internal delegate void glTextureStorageMem3DMultisampleEXT(uint texture, int samples, SizedInternalFormat internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTextureViewEXT(uint texture, TextureTarget target, uint origtexture, SizedInternalFormat internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
		internal delegate void glTextureViewOES(uint texture, TextureTarget target, uint origtexture, SizedInternalFormat internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
		internal unsafe delegate void glTransformFeedbackVaryings(uint program, int count, string[] varyings, TransformFeedbackBufferMode bufferMode);
		internal unsafe delegate void glTransformPathNV(uint resultPath, uint srcPath, PathTransformType transformType, float* transformValues);
		internal delegate void glTranslatef(float x, float y, float z);
		internal delegate void glTranslatex(int x, int y, int z);
		internal delegate void glTranslatexOES(int x, int y, int z);
		#endregion

		#region U:

		internal delegate void glUniform1f(int location, float v0);
		internal unsafe delegate void glUniform1fv(int location, int count, float* value);
		internal delegate void glUniform1i(int location, int v0);
		internal delegate void glUniform1i64NV(int location, long x);
		internal unsafe delegate void glUniform1i64vNV(int location, int count, long* value);
		internal unsafe delegate void glUniform1iv(int location, int count, int* value);
		internal delegate void glUniform1ui(int location, uint v0);
		internal delegate void glUniform1ui64NV(int location, ulong x);
		internal unsafe delegate void glUniform1ui64vNV(int location, int count, ulong* value);
		internal unsafe delegate void glUniform1uiv(int location, int count, uint* value);
		internal delegate void glUniform2f(int location, float v0, float v1);
		internal unsafe delegate void glUniform2fv(int location, int count, float* value);
		internal delegate void glUniform2i(int location, int v0, int v1);
		internal delegate void glUniform2i64NV(int location, long x, long y);
		internal unsafe delegate void glUniform2i64vNV(int location, int count, long* value);
		internal unsafe delegate void glUniform2iv(int location, int count, int* value);
		internal delegate void glUniform2ui(int location, uint v0, uint v1);
		internal delegate void glUniform2ui64NV(int location, ulong x, ulong y);
		internal unsafe delegate void glUniform2ui64vNV(int location, int count, ulong* value);
		internal unsafe delegate void glUniform2uiv(int location, int count, uint* value);
		internal delegate void glUniform3f(int location, float v0, float v1, float v2);
		internal unsafe delegate void glUniform3fv(int location, int count, float* value);
		internal delegate void glUniform3i(int location, int v0, int v1, int v2);
		internal delegate void glUniform3i64NV(int location, long x, long y, long z);
		internal unsafe delegate void glUniform3i64vNV(int location, int count, long* value);
		internal unsafe delegate void glUniform3iv(int location, int count, int* value);
		internal delegate void glUniform3ui(int location, uint v0, uint v1, uint v2);
		internal delegate void glUniform3ui64NV(int location, ulong x, ulong y, ulong z);
		internal unsafe delegate void glUniform3ui64vNV(int location, int count, ulong* value);
		internal unsafe delegate void glUniform3uiv(int location, int count, uint* value);
		internal delegate void glUniform4f(int location, float v0, float v1, float v2, float v3);
		internal unsafe delegate void glUniform4fv(int location, int count, float* value);
		internal delegate void glUniform4i(int location, int v0, int v1, int v2, int v3);
		internal delegate void glUniform4i64NV(int location, long x, long y, long z, long w);
		internal unsafe delegate void glUniform4i64vNV(int location, int count, long* value);
		internal unsafe delegate void glUniform4iv(int location, int count, int* value);
		internal delegate void glUniform4ui(int location, uint v0, uint v1, uint v2, uint v3);
		internal delegate void glUniform4ui64NV(int location, ulong x, ulong y, ulong z, ulong w);
		internal unsafe delegate void glUniform4ui64vNV(int location, int count, ulong* value);
		internal unsafe delegate void glUniform4uiv(int location, int count, uint* value);
		internal delegate void glUniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
		internal delegate void glUniformHandleui64IMG(int location, ulong value);
		internal delegate void glUniformHandleui64NV(int location, ulong value);
		internal unsafe delegate void glUniformHandleui64vIMG(int location, int count, ulong* value);
		internal unsafe delegate void glUniformHandleui64vNV(int location, int count, ulong* value);
		internal unsafe delegate void glUniformMatrix2fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x3fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x3fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x4fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x4fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x2fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x2fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x4fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x4fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x2fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x2fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x3fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x3fvNV(int location, int count, bool transpose, float* value);
		internal delegate bool glUnmapBuffer(BufferTargetARB target);
		internal delegate bool glUnmapBufferOES(uint target);
		internal delegate void glUseProgram(uint program);
		internal delegate void glUseProgramStages(uint pipeline, UseProgramStageMask stages, uint program);
		internal delegate void glUseProgramStagesEXT(uint pipeline, UseProgramStageMask stages, uint program);
		internal delegate void glUseShaderProgramEXT(uint type, uint program);
		#endregion

		#region V:

		internal delegate void glValidateProgram(uint program);
		internal delegate void glValidateProgramPipeline(uint pipeline);
		internal delegate void glValidateProgramPipelineEXT(uint pipeline);
		internal delegate void glVertex2bOES(sbyte x, sbyte y);
		internal unsafe delegate void glVertex2bvOES(sbyte* coords);
		internal delegate void glVertex2xOES(int x);
		internal unsafe delegate void glVertex2xvOES(int* coords);
		internal delegate void glVertex3bOES(sbyte x, sbyte y, sbyte z);
		internal unsafe delegate void glVertex3bvOES(sbyte* coords);
		internal delegate void glVertex3xOES(int x, int y);
		internal unsafe delegate void glVertex3xvOES(int* coords);
		internal delegate void glVertex4bOES(sbyte x, sbyte y, sbyte z, sbyte w);
		internal unsafe delegate void glVertex4bvOES(sbyte* coords);
		internal delegate void glVertex4xOES(int x, int y, int z);
		internal unsafe delegate void glVertex4xvOES(int* coords);
		internal delegate void glVertexAttrib1f(uint index, float x);
		internal unsafe delegate void glVertexAttrib1fv(uint index, float* v);
		internal delegate void glVertexAttrib2f(uint index, float x, float y);
		internal unsafe delegate void glVertexAttrib2fv(uint index, float* v);
		internal delegate void glVertexAttrib3f(uint index, float x, float y, float z);
		internal unsafe delegate void glVertexAttrib3fv(uint index, float* v);
		internal delegate void glVertexAttrib4f(uint index, float x, float y, float z, float w);
		internal unsafe delegate void glVertexAttrib4fv(uint index, float* v);
		internal delegate void glVertexAttribBinding(uint attribindex, uint bindingindex);
		internal delegate void glVertexAttribDivisor(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorANGLE(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorEXT(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorNV(uint index, uint divisor);
		internal delegate void glVertexAttribFormat(uint attribindex, int size, VertexAttribType type, bool normalized, uint relativeoffset);
		internal delegate void glVertexAttribI4i(uint index, int x, int y, int z, int w);
		internal unsafe delegate void glVertexAttribI4iv(uint index, int* v);
		internal delegate void glVertexAttribI4ui(uint index, uint x, uint y, uint z, uint w);
		internal unsafe delegate void glVertexAttribI4uiv(uint index, uint* v);
		internal delegate void glVertexAttribIFormat(uint attribindex, int size, VertexAttribIType type, uint relativeoffset);
		internal delegate void glVertexAttribIPointer(uint index, int size, VertexAttribIType type, int stride, IntPtr pointer);
		internal delegate void glVertexAttribPointer(uint index, int size, VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);
		internal delegate void glVertexBindingDivisor(uint bindingindex, uint divisor);
		internal delegate void glVertexPointer(int size, VertexPointerType type, int stride, IntPtr pointer);
		internal delegate void glViewport(int x, int y, int width, int height);
		internal unsafe delegate void glViewportArrayvNV(uint first, int count, float* v);
		internal unsafe delegate void glViewportArrayvOES(uint first, int count, float* v);
		internal delegate void glViewportIndexedfNV(uint index, float x, float y, float w, float h);
		internal delegate void glViewportIndexedfOES(uint index, float x, float y, float w, float h);
		internal unsafe delegate void glViewportIndexedfvNV(uint index, float* v);
		internal unsafe delegate void glViewportIndexedfvOES(uint index, float* v);
		internal delegate void glViewportPositionWScaleNV(uint index, float xcoeff, float ycoeff);
		internal delegate void glViewportSwizzleNV(uint index, uint swizzlex, uint swizzley, uint swizzlez, uint swizzlew);
		#endregion

		#region W:

		internal unsafe delegate void glWaitSemaphoreEXT(uint semaphore, uint numBufferBarriers, uint* buffers, uint numTextureBarriers, uint* textures, TextureLayout* srcLayouts);
		internal delegate void glWaitSync(IntPtr sync, SyncBehaviorFlags flags, ulong timeout);
		internal delegate void glWaitSyncAPPLE(IntPtr sync, SyncBehaviorFlags flags, ulong timeout);
		internal delegate void glWaitVkSemaphoreNV(ulong vkSemaphore);
		internal unsafe delegate void glWeightPathsNV(uint resultPath, int numPaths, uint* paths, float* weights);
		internal delegate void glWeightPointerOES(int size, uint type, int stride, IntPtr pointer);
		internal unsafe delegate void glWindowRectanglesEXT(uint mode, int count, int* box);
		#endregion

	}
}

