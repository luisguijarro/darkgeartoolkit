// OpenGL Delegates.
// File Created with OpenGL Parser 3.
// Developed by Luis Guijarro PÃ©rez.

using System;

namespace dgtk.OpenGL
{
	internal static class delegatesGL
	{
		#region A:

		internal delegate void glAccum(AccumOp op, float value);
		internal delegate void glAccumxOES(uint op, int value);
		internal delegate bool glAcquireKeyedMutexWin32EXT(uint memory, ulong key, uint timeout);
		internal delegate void glActiveProgramEXT(uint program);
		internal delegate void glActiveShaderProgram(uint pipeline, uint program);
		internal delegate void glActiveShaderProgramEXT(uint pipeline, uint program);
		internal delegate void glActiveStencilFaceEXT(StencilFaceDirection face);
		internal delegate void glActiveTexture(TextureUnit texture);
		internal delegate void glActiveTextureARB(TextureUnit texture);
		internal unsafe delegate void glActiveVaryingNV(uint program, sbyte* name);
		internal delegate void glAlphaFragmentOp1ATI(FragmentOpATI op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod);
		internal delegate void glAlphaFragmentOp2ATI(FragmentOpATI op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod);
		internal delegate void glAlphaFragmentOp3ATI(FragmentOpATI op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod, uint arg3, uint arg3Rep, uint arg3Mod);
		internal delegate void glAlphaFunc(AlphaFunction func, float @ref);
		internal delegate void glAlphaFuncQCOM(uint func, float @ref);
		internal delegate void glAlphaFuncx(AlphaFunction func, int @ref);
		internal delegate void glAlphaFuncxOES(AlphaFunction func, int @ref);
		internal delegate void glAlphaToCoverageDitherControlNV(uint mode);
		internal delegate void glApplyFramebufferAttachmentCMAAINTEL();
		internal delegate void glApplyTextureEXT(LightTextureModeEXT mode);
		internal unsafe delegate bool glAreProgramsResidentNV(int n, uint* programs, bool* residences);
		internal unsafe delegate bool glAreTexturesResident(int n, uint* textures, bool* residences);
		internal unsafe delegate bool glAreTexturesResidentEXT(int n, uint* textures, bool* residences);
		internal delegate void glArrayElement(int i);
		internal delegate void glArrayElementEXT(int i);
		internal delegate void glArrayObjectATI(EnableCap array, int size, ScalarType type, int stride, uint buffer, uint offset);
		internal unsafe delegate uint glAsyncCopyBufferSubDataNVX(int waitSemaphoreCount, uint* waitSemaphoreArray, ulong* fenceValueArray, uint readGpu, uint writeGpuMask, uint readBuffer, uint writeBuffer, IntPtr readOffset, IntPtr writeOffset, int size, int signalSemaphoreCount, uint* signalSemaphoreArray, ulong* signalValueArray);
		internal unsafe delegate uint glAsyncCopyImageSubDataNVX(int waitSemaphoreCount, uint* waitSemaphoreArray, ulong* waitValueArray, uint srcGpu, uint dstGpuMask, uint srcName, uint srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, uint dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth, int signalSemaphoreCount, uint* signalSemaphoreArray, ulong* signalValueArray);
		internal delegate void glAsyncMarkerSGIX(uint marker);
		internal delegate void glAttachObjectARB(uint containerObj, uint obj);
		internal delegate void glAttachShader(uint program, uint shader);
		#endregion

		#region B:

		internal delegate void glBegin(PrimitiveType mode);
		internal delegate void glBeginConditionalRender(uint id, ConditionalRenderMode mode);
		internal delegate void glBeginConditionalRenderNV(uint id, ConditionalRenderMode mode);
		internal delegate void glBeginConditionalRenderNVX(uint id);
		internal delegate void glBeginFragmentShaderATI();
		internal delegate void glBeginOcclusionQueryNV(uint id);
		internal delegate void glBeginPerfMonitorAMD(uint monitor);
		internal delegate void glBeginPerfQueryINTEL(uint queryHandle);
		internal delegate void glBeginQuery(QueryTarget target, uint id);
		internal delegate void glBeginQueryARB(uint target, uint id);
		internal delegate void glBeginQueryEXT(QueryTarget target, uint id);
		internal delegate void glBeginQueryIndexed(QueryTarget target, uint index, uint id);
		internal delegate void glBeginTransformFeedback(PrimitiveType primitiveMode);
		internal delegate void glBeginTransformFeedbackEXT(PrimitiveType primitiveMode);
		internal delegate void glBeginTransformFeedbackNV(PrimitiveType primitiveMode);
		internal delegate void glBeginVertexShaderEXT();
		internal delegate void glBeginVideoCaptureNV(uint video_capture_slot);
		internal unsafe delegate void glBindAttribLocation(uint program, uint index, sbyte* name);
		internal unsafe delegate void glBindAttribLocationARB(uint programObj, uint index, sbyte* name);
		internal delegate void glBindBuffer(BufferTargetARB target, uint buffer);
		internal delegate void glBindBufferARB(BufferTargetARB target, uint buffer);
		internal delegate void glBindBufferBase(BufferTargetARB target, uint index, uint buffer);
		internal delegate void glBindBufferBaseEXT(BufferTargetARB target, uint index, uint buffer);
		internal delegate void glBindBufferBaseNV(BufferTargetARB target, uint index, uint buffer);
		internal delegate void glBindBufferOffsetEXT(BufferTargetARB target, uint index, uint buffer, IntPtr offset);
		internal delegate void glBindBufferOffsetNV(BufferTargetARB target, uint index, uint buffer, IntPtr offset);
		internal delegate void glBindBufferRange(BufferTargetARB target, uint index, uint buffer, IntPtr offset, int size);
		internal delegate void glBindBufferRangeEXT(BufferTargetARB target, uint index, uint buffer, IntPtr offset, int size);
		internal delegate void glBindBufferRangeNV(BufferTargetARB target, uint index, uint buffer, IntPtr offset, int size);
		internal unsafe delegate void glBindBuffersBase(BufferTargetARB target, uint first, int count, uint* buffers);
		internal unsafe delegate void glBindBuffersRange(BufferTargetARB target, uint first, int count, uint* buffers, IntPtr* offsets, int* sizes);
		internal unsafe delegate void glBindFragDataLocation(uint program, uint color, sbyte* name);
		internal unsafe delegate void glBindFragDataLocationEXT(uint program, uint color, sbyte* name);
		internal unsafe delegate void glBindFragDataLocationIndexed(uint program, uint colorNumber, uint index, sbyte* name);
		internal unsafe delegate void glBindFragDataLocationIndexedEXT(uint program, uint colorNumber, uint index, sbyte* name);
		internal delegate void glBindFragmentShaderATI(uint id);
		internal delegate void glBindFramebuffer(FramebufferTarget target, uint framebuffer);
		internal delegate void glBindFramebufferEXT(FramebufferTarget target, uint framebuffer);
		internal delegate void glBindFramebufferOES(FramebufferTarget target, uint framebuffer);
		internal delegate void glBindImageTexture(uint unit, uint texture, int level, bool layered, int layer, BufferAccessARB access, InternalFormat format);
		internal delegate void glBindImageTextureEXT(uint index, uint texture, int level, bool layered, int layer, BufferAccessARB access, int format);
		internal unsafe delegate void glBindImageTextures(uint first, int count, uint* textures);
		internal delegate uint glBindLightParameterEXT(LightName light, LightParameter value);
		internal delegate uint glBindMaterialParameterEXT(MaterialFace face, MaterialParameter value);
		internal delegate void glBindMultiTextureEXT(TextureUnit texunit, TextureTarget target, uint texture);
		internal delegate uint glBindParameterEXT(VertexShaderParameterEXT value);
		internal delegate void glBindProgramARB(ProgramTarget target, uint program);
		internal delegate void glBindProgramNV(VertexAttribEnumNV target, uint id);
		internal delegate void glBindProgramPipeline(uint pipeline);
		internal delegate void glBindProgramPipelineEXT(uint pipeline);
		internal delegate void glBindRenderbuffer(RenderbufferTarget target, uint renderbuffer);
		internal delegate void glBindRenderbufferEXT(RenderbufferTarget target, uint renderbuffer);
		internal delegate void glBindRenderbufferOES(RenderbufferTarget target, uint renderbuffer);
		internal delegate void glBindSampler(uint unit, uint sampler);
		internal unsafe delegate void glBindSamplers(uint first, int count, uint* samplers);
		internal delegate void glBindShadingRateImageNV(uint texture);
		internal delegate uint glBindTexGenParameterEXT(TextureUnit unit, TextureCoordName coord, TextureGenParameter value);
		internal delegate void glBindTexture(TextureTarget target, uint texture);
		internal delegate void glBindTextureEXT(TextureTarget target, uint texture);
		internal unsafe delegate void glBindTextures(uint first, int count, uint* textures);
		internal delegate void glBindTextureUnit(uint unit, uint texture);
		internal delegate uint glBindTextureUnitParameterEXT(TextureUnit unit, VertexShaderTextureUnitParameter value);
		internal delegate void glBindTransformFeedback(BindTransformFeedbackTarget target, uint id);
		internal delegate void glBindTransformFeedbackNV(BufferTargetARB target, uint id);
		internal delegate void glBindVertexArray(uint array);
		internal delegate void glBindVertexArrayAPPLE(uint array);
		internal delegate void glBindVertexArrayOES(uint array);
		internal delegate void glBindVertexBuffer(uint bindingindex, uint buffer, IntPtr offset, int stride);
		internal unsafe delegate void glBindVertexBuffers(uint first, int count, uint* buffers, IntPtr* offsets, int* strides);
		internal delegate void glBindVertexShaderEXT(uint id);
		internal delegate void glBindVideoCaptureStreamBufferNV(uint video_capture_slot, uint stream, uint frame_region, IntPtr offset);
		internal delegate void glBindVideoCaptureStreamTextureNV(uint video_capture_slot, uint stream, uint frame_region, uint target, uint texture);
		internal delegate void glBinormal3bEXT(sbyte bx, sbyte by, sbyte bz);
		internal unsafe delegate void glBinormal3bvEXT(sbyte* v);
		internal delegate void glBinormal3dEXT(double bx, double by, double bz);
		internal unsafe delegate void glBinormal3dvEXT(double* v);
		internal delegate void glBinormal3fEXT(float bx, float by, float bz);
		internal unsafe delegate void glBinormal3fvEXT(float* v);
		internal delegate void glBinormal3iEXT(int bx, int by, int bz);
		internal unsafe delegate void glBinormal3ivEXT(int* v);
		internal delegate void glBinormal3sEXT(short bx, short by, short bz);
		internal unsafe delegate void glBinormal3svEXT(short* v);
		internal delegate void glBinormalPointerEXT(BinormalPointerTypeEXT type, int stride, IntPtr pointer);
		internal unsafe delegate void glBitmap(int width, int height, float xorig, float yorig, float xmove, float ymove, byte* bitmap);
		internal unsafe delegate void glBitmapxOES(int width, int height, int xorig, int yorig, int xmove, int ymove, byte* bitmap);
		internal delegate void glBlendBarrier();
		internal delegate void glBlendBarrierKHR();
		internal delegate void glBlendBarrierNV();
		internal delegate void glBlendColor(float red, float green, float blue, float alpha);
		internal delegate void glBlendColorEXT(float red, float green, float blue, float alpha);
		internal delegate void glBlendColorxOES(int red, int green, int blue, int alpha);
		internal delegate void glBlendEquation(BlendEquationModeEXT mode);
		internal delegate void glBlendEquationEXT(BlendEquationModeEXT mode);
		internal delegate void glBlendEquationi(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationiARB(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationiEXT(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationIndexedAMD(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationiOES(uint buf, BlendEquationModeEXT mode);
		internal delegate void glBlendEquationOES(BlendEquationModeEXT mode);
		internal delegate void glBlendEquationSeparate(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateEXT(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparatei(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateiARB(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateiEXT(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateIndexedAMD(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateiOES(uint buf, BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendEquationSeparateOES(BlendEquationModeEXT modeRGB, BlendEquationModeEXT modeAlpha);
		internal delegate void glBlendFunc(BlendingFactor sfactor, BlendingFactor dfactor);
		internal delegate void glBlendFunci(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFunciARB(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFunciEXT(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFuncIndexedAMD(uint buf, uint src, uint dst);
		internal delegate void glBlendFunciOES(uint buf, BlendingFactor src, BlendingFactor dst);
		internal delegate void glBlendFuncSeparate(BlendingFactor sfactorRGB, BlendingFactor dfactorRGB, BlendingFactor sfactorAlpha, BlendingFactor dfactorAlpha);
		internal delegate void glBlendFuncSeparateEXT(BlendingFactor sfactorRGB, BlendingFactor dfactorRGB, BlendingFactor sfactorAlpha, BlendingFactor dfactorAlpha);
		internal delegate void glBlendFuncSeparatei(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateiARB(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateiEXT(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateIndexedAMD(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateINGR(BlendingFactor sfactorRGB, BlendingFactor dfactorRGB, BlendingFactor sfactorAlpha, BlendingFactor dfactorAlpha);
		internal delegate void glBlendFuncSeparateiOES(uint buf, BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendFuncSeparateOES(BlendingFactor srcRGB, BlendingFactor dstRGB, BlendingFactor srcAlpha, BlendingFactor dstAlpha);
		internal delegate void glBlendParameteriNV(uint pname, int value);
		internal delegate void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferANGLE(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferEXT(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, BlitFramebufferFilter filter);
		internal delegate void glBlitFramebufferNV(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, BlitFramebufferFilter filter);
		internal delegate void glBlitNamedFramebuffer(uint readFramebuffer, uint drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, BlitFramebufferFilter filter);
		internal delegate void glBufferAddressRangeNV(uint pname, uint index, ulong address, int length);
		internal delegate void glBufferAttachMemoryNV(BufferTargetARB target, uint memory, ulong offset);
		internal delegate void glBufferData(BufferTargetARB target, int size, IntPtr data, BufferUsageARB usage);
		internal delegate void glBufferDataARB(BufferTargetARB target, int size, IntPtr data, BufferUsageARB usage);
		internal delegate void glBufferPageCommitmentARB(uint target, IntPtr offset, int size, bool commit);
		internal delegate void glBufferParameteriAPPLE(uint target, uint pname, int param);
		internal delegate void glBufferStorage(BufferStorageTarget target, int size, IntPtr data, uint flags);
		internal delegate void glBufferStorageEXT(BufferStorageTarget target, int size, IntPtr data, uint flags);
		internal delegate void glBufferStorageExternalEXT(uint target, IntPtr offset, int size, IntPtr clientBuffer, uint flags);
		internal delegate void glBufferStorageMemEXT(BufferTargetARB target, int size, uint memory, ulong offset);
		internal delegate void glBufferSubData(BufferTargetARB target, IntPtr offset, int size, IntPtr data);
		internal delegate void glBufferSubDataARB(BufferTargetARB target, IntPtr offset, int size, IntPtr data);
		#endregion

		#region C:

		internal delegate void glCallCommandListNV(uint list);
		internal delegate void glCallList(uint list);
		internal delegate void glCallLists(int n, ListNameType type, IntPtr lists);
		internal delegate uint glCheckFramebufferStatus(FramebufferTarget target);
		internal delegate uint glCheckFramebufferStatusEXT(FramebufferTarget target);
		internal delegate uint glCheckFramebufferStatusOES(FramebufferTarget target);
		internal delegate uint glCheckNamedFramebufferStatus(uint framebuffer, FramebufferTarget target);
		internal delegate uint glCheckNamedFramebufferStatusEXT(uint framebuffer, FramebufferTarget target);
		internal delegate void glClampColor(ClampColorTargetARB target, ClampColorModeARB clamp);
		internal delegate void glClampColorARB(ClampColorTargetARB target, ClampColorModeARB clamp);
		internal delegate void glClear(uint mask);
		internal delegate void glClearAccum(float red, float green, float blue, float alpha);
		internal delegate void glClearAccumxOES(int red, int green, int blue, int alpha);
		internal delegate void glClearBufferData(BufferStorageTarget target, InternalFormat internalformat, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearBufferfi(Buffer buffer, int drawbuffer, float depth, int stencil);
		internal unsafe delegate void glClearBufferfv(Buffer buffer, int drawbuffer, float* value);
		internal unsafe delegate void glClearBufferiv(Buffer buffer, int drawbuffer, int* value);
		internal delegate void glClearBufferSubData(BufferTargetARB target, InternalFormat internalformat, IntPtr offset, int size, PixelFormat format, PixelType type, IntPtr data);
		internal unsafe delegate void glClearBufferuiv(Buffer buffer, int drawbuffer, uint* value);
		internal delegate void glClearColor(float red, float green, float blue, float alpha);
		internal delegate void glClearColorIiEXT(int red, int green, int blue, int alpha);
		internal delegate void glClearColorIuiEXT(uint red, uint green, uint blue, uint alpha);
		internal delegate void glClearColorx(int red, int green, int blue, int alpha);
		internal delegate void glClearColorxOES(int red, int green, int blue, int alpha);
		internal delegate void glClearDepth(double depth);
		internal delegate void glClearDepthdNV(double depth);
		internal delegate void glClearDepthf(float d);
		internal delegate void glClearDepthfOES(float depth);
		internal delegate void glClearDepthx(int depth);
		internal delegate void glClearDepthxOES(int depth);
		internal delegate void glClearIndex(float c);
		internal delegate void glClearNamedBufferData(uint buffer, InternalFormat internalformat, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearNamedBufferDataEXT(uint buffer, InternalFormat internalformat, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearNamedBufferSubData(uint buffer, InternalFormat internalformat, IntPtr offset, int size, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearNamedBufferSubDataEXT(uint buffer, uint internalformat, int offset, int size, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearNamedFramebufferfi(uint framebuffer, Buffer buffer, int drawbuffer, float depth, int stencil);
		internal unsafe delegate void glClearNamedFramebufferfv(uint framebuffer, Buffer buffer, int drawbuffer, float* value);
		internal unsafe delegate void glClearNamedFramebufferiv(uint framebuffer, Buffer buffer, int drawbuffer, int* value);
		internal unsafe delegate void glClearNamedFramebufferuiv(uint framebuffer, Buffer buffer, int drawbuffer, uint* value);
		internal unsafe delegate void glClearPixelLocalStorageuiEXT(int offset, int n, uint* values);
		internal delegate void glClearStencil(int s);
		internal delegate void glClearTexImage(uint texture, int level, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearTexImageEXT(uint texture, int level, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClearTexSubImageEXT(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glClientActiveTexture(TextureUnit texture);
		internal delegate void glClientActiveTextureARB(TextureUnit texture);
		internal delegate void glClientActiveVertexStreamATI(VertexStreamATI stream);
		internal delegate void glClientAttribDefaultEXT(uint mask);
		internal unsafe delegate void glClientWaitSemaphoreui64NVX(int fenceObjectCount, uint* semaphoreArray, ulong* fenceValueArray);
		internal delegate uint glClientWaitSync(IntPtr sync, uint flags, ulong timeout);
		internal delegate uint glClientWaitSyncAPPLE(IntPtr sync, uint flags, ulong timeout);
		internal delegate void glClipControl(ClipControlOrigin origin, ClipControlDepth depth);
		internal delegate void glClipControlEXT(uint origin, uint depth);
		internal unsafe delegate void glClipPlane(ClipPlaneName plane, double* equation);
		internal unsafe delegate void glClipPlanef(ClipPlaneName p, float* eqn);
		internal unsafe delegate void glClipPlanefIMG(ClipPlaneName p, float* eqn);
		internal unsafe delegate void glClipPlanefOES(ClipPlaneName plane, float* equation);
		internal unsafe delegate void glClipPlanex(ClipPlaneName plane, int* equation);
		internal unsafe delegate void glClipPlanexIMG(ClipPlaneName p, int* eqn);
		internal unsafe delegate void glClipPlanexOES(ClipPlaneName plane, int* equation);
		internal delegate void glColor3b(sbyte red, sbyte green, sbyte blue);
		internal unsafe delegate void glColor3bv(sbyte* v);
		internal delegate void glColor3d(double red, double green, double blue);
		internal unsafe delegate void glColor3dv(double* v);
		internal delegate void glColor3f(float red, float green, float blue);
		internal unsafe delegate void glColor3fv(float* v);
		internal delegate void glColor3fVertex3fSUN(float r, float g, float b, float x, float y, float z);
		internal unsafe delegate void glColor3fVertex3fvSUN(float* c, float* v);
		internal delegate void glColor3hNV(ushort red, ushort green, ushort blue);
		internal unsafe delegate void glColor3hvNV(ushort* v);
		internal delegate void glColor3i(int red, int green, int blue);
		internal unsafe delegate void glColor3iv(int* v);
		internal delegate void glColor3s(short red, short green, short blue);
		internal unsafe delegate void glColor3sv(short* v);
		internal delegate void glColor3ub(byte red, byte green, byte blue);
		internal unsafe delegate void glColor3ubv(byte* v);
		internal delegate void glColor3ui(uint red, uint green, uint blue);
		internal unsafe delegate void glColor3uiv(uint* v);
		internal delegate void glColor3us(ushort red, ushort green, ushort blue);
		internal unsafe delegate void glColor3usv(ushort* v);
		internal delegate void glColor3xOES(int red, int green, int blue);
		internal unsafe delegate void glColor3xvOES(int* components);
		internal delegate void glColor4b(sbyte red, sbyte green, sbyte blue, sbyte alpha);
		internal unsafe delegate void glColor4bv(sbyte* v);
		internal delegate void glColor4d(double red, double green, double blue, double alpha);
		internal unsafe delegate void glColor4dv(double* v);
		internal delegate void glColor4f(float red, float green, float blue, float alpha);
		internal delegate void glColor4fNormal3fVertex3fSUN(float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glColor4fNormal3fVertex3fvSUN(float* c, float* n, float* v);
		internal unsafe delegate void glColor4fv(float* v);
		internal delegate void glColor4hNV(ushort red, ushort green, ushort blue, ushort alpha);
		internal unsafe delegate void glColor4hvNV(ushort* v);
		internal delegate void glColor4i(int red, int green, int blue, int alpha);
		internal unsafe delegate void glColor4iv(int* v);
		internal delegate void glColor4s(short red, short green, short blue, short alpha);
		internal unsafe delegate void glColor4sv(short* v);
		internal delegate void glColor4ub(byte red, byte green, byte blue, byte alpha);
		internal unsafe delegate void glColor4ubv(byte* v);
		internal delegate void glColor4ubVertex2fSUN(byte r, byte g, byte b, byte a, float x, float y);
		internal unsafe delegate void glColor4ubVertex2fvSUN(byte* c, float* v);
		internal delegate void glColor4ubVertex3fSUN(byte r, byte g, byte b, byte a, float x, float y, float z);
		internal unsafe delegate void glColor4ubVertex3fvSUN(byte* c, float* v);
		internal delegate void glColor4ui(uint red, uint green, uint blue, uint alpha);
		internal unsafe delegate void glColor4uiv(uint* v);
		internal delegate void glColor4us(ushort red, ushort green, ushort blue, ushort alpha);
		internal unsafe delegate void glColor4usv(ushort* v);
		internal delegate void glColor4x(int red, int green, int blue, int alpha);
		internal delegate void glColor4xOES(int red, int green, int blue, int alpha);
		internal unsafe delegate void glColor4xvOES(int* components);
		internal delegate void glColorFormatNV(int size, uint type, int stride);
		internal delegate void glColorFragmentOp1ATI(FragmentOpATI op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod);
		internal delegate void glColorFragmentOp2ATI(FragmentOpATI op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod);
		internal delegate void glColorFragmentOp3ATI(FragmentOpATI op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod, uint arg3, uint arg3Rep, uint arg3Mod);
		internal delegate void glColorMask(bool red, bool green, bool blue, bool alpha);
		internal delegate void glColorMaski(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorMaskiEXT(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorMaskIndexedEXT(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorMaskiOES(uint index, bool r, bool g, bool b, bool a);
		internal delegate void glColorMaterial(MaterialFace face, ColorMaterialParameter mode);
		internal delegate void glColorP3ui(ColorPointerType type, uint color);
		internal unsafe delegate void glColorP3uiv(ColorPointerType type, uint* color);
		internal delegate void glColorP4ui(ColorPointerType type, uint color);
		internal unsafe delegate void glColorP4uiv(ColorPointerType type, uint* color);
		internal delegate void glColorPointer(int size, ColorPointerType type, int stride, IntPtr pointer);
		internal delegate void glColorPointerEXT(int size, ColorPointerType type, int stride, int count, IntPtr pointer);
		internal delegate void glColorPointerListIBM(int size, ColorPointerType type, int stride, IntPtr pointer, int ptrstride);
		internal delegate void glColorPointervINTEL(int size, VertexPointerType type, IntPtr pointer);
		internal delegate void glColorSubTable(ColorTableTarget target, int start, int count, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glColorSubTableEXT(ColorTableTarget target, int start, int count, PixelFormat format, PixelType type, IntPtr data);
		internal delegate void glColorTable(ColorTableTarget target, InternalFormat internalformat, int width, PixelFormat format, PixelType type, IntPtr table);
		internal delegate void glColorTableEXT(ColorTableTarget target, InternalFormat internalFormat, int width, PixelFormat format, PixelType type, IntPtr table);
		internal unsafe delegate void glColorTableParameterfv(ColorTableTarget target, ColorTableParameterPNameSGI pname, float* @params);
		internal unsafe delegate void glColorTableParameterfvSGI(ColorTableTargetSGI target, ColorTableParameterPNameSGI pname, float* @params);
		internal unsafe delegate void glColorTableParameteriv(ColorTableTarget target, ColorTableParameterPNameSGI pname, int* @params);
		internal unsafe delegate void glColorTableParameterivSGI(ColorTableTargetSGI target, ColorTableParameterPNameSGI pname, int* @params);
		internal delegate void glColorTableSGI(ColorTableTargetSGI target, InternalFormat internalformat, int width, PixelFormat format, PixelType type, IntPtr table);
		internal delegate void glCombinerInputNV(CombinerStageNV stage, CombinerPortionNV portion, CombinerVariableNV variable, CombinerRegisterNV input, CombinerMappingNV mapping, CombinerComponentUsageNV componentUsage);
		internal delegate void glCombinerOutputNV(CombinerStageNV stage, CombinerPortionNV portion, CombinerRegisterNV abOutput, CombinerRegisterNV cdOutput, CombinerRegisterNV sumOutput, CombinerScaleNV scale, CombinerBiasNV bias, bool abDotProduct, bool cdDotProduct, bool muxSum);
		internal delegate void glCombinerParameterfNV(CombinerParameterNV pname, float param);
		internal unsafe delegate void glCombinerParameterfvNV(CombinerParameterNV pname, float* @params);
		internal delegate void glCombinerParameteriNV(CombinerParameterNV pname, int param);
		internal unsafe delegate void glCombinerParameterivNV(CombinerParameterNV pname, int* @params);
		internal unsafe delegate void glCombinerStageParameterfvNV(CombinerStageNV stage, CombinerParameterNV pname, float* @params);
		internal delegate void glCommandListSegmentsNV(uint list, uint segments);
		internal delegate void glCompileCommandListNV(uint list);
		internal delegate void glCompileShader(uint shader);
		internal delegate void glCompileShaderARB(uint shaderObj);
		internal unsafe delegate void glCompileShaderIncludeARB(uint shader, int count, sbyte* path, int* length);
		internal delegate void glCompressedMultiTexImage1DEXT(TextureUnit texunit, TextureTarget target, int level, InternalFormat internalformat, int width, int border, int imageSize, IntPtr bits);
		internal delegate void glCompressedMultiTexImage2DEXT(TextureUnit texunit, TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr bits);
		internal delegate void glCompressedMultiTexImage3DEXT(TextureUnit texunit, TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr bits);
		internal delegate void glCompressedMultiTexSubImage1DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr bits);
		internal delegate void glCompressedMultiTexSubImage2DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr bits);
		internal delegate void glCompressedMultiTexSubImage3DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr bits);
		internal delegate void glCompressedTexImage1D(TextureTarget target, int level, InternalFormat internalformat, int width, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage1DARB(TextureTarget target, int level, InternalFormat internalformat, int width, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage2DARB(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage3D(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage3DARB(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexImage3DOES(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage1D(TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage1DARB(TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage2DARB(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage3DARB(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTexSubImage3DOES(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTextureImage1DEXT(uint texture, TextureTarget target, int level, InternalFormat internalformat, int width, int border, int imageSize, IntPtr bits);
		internal delegate void glCompressedTextureImage2DEXT(uint texture, TextureTarget target, int level, InternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr bits);
		internal delegate void glCompressedTextureImage3DEXT(uint texture, TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr bits);
		internal delegate void glCompressedTextureSubImage1D(uint texture, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTextureSubImage1DEXT(uint texture, TextureTarget target, int level, int xoffset, int width, PixelFormat format, int imageSize, IntPtr bits);
		internal delegate void glCompressedTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTextureSubImage2DEXT(uint texture, TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, int imageSize, IntPtr bits);
		internal delegate void glCompressedTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr data);
		internal delegate void glCompressedTextureSubImage3DEXT(uint texture, TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, int imageSize, IntPtr bits);
		internal delegate void glConservativeRasterParameterfNV(uint pname, float value);
		internal delegate void glConservativeRasterParameteriNV(uint pname, int param);
		internal delegate void glConvolutionFilter1D(ConvolutionTarget target, InternalFormat internalformat, int width, PixelFormat format, PixelType type, IntPtr image);
		internal delegate void glConvolutionFilter1DEXT(ConvolutionTargetEXT target, InternalFormat internalformat, int width, PixelFormat format, PixelType type, IntPtr image);
		internal delegate void glConvolutionFilter2D(ConvolutionTarget target, InternalFormat internalformat, int width, int height, PixelFormat format, PixelType type, IntPtr image);
		internal delegate void glConvolutionFilter2DEXT(ConvolutionTargetEXT target, InternalFormat internalformat, int width, int height, PixelFormat format, PixelType type, IntPtr image);
		internal delegate void glConvolutionParameterf(ConvolutionTarget target, ConvolutionParameterEXT pname, float @params);
		internal delegate void glConvolutionParameterfEXT(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, float @params);
		internal unsafe delegate void glConvolutionParameterfv(ConvolutionTarget target, ConvolutionParameterEXT pname, float* @params);
		internal unsafe delegate void glConvolutionParameterfvEXT(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, float* @params);
		internal delegate void glConvolutionParameteri(ConvolutionTarget target, ConvolutionParameterEXT pname, int @params);
		internal delegate void glConvolutionParameteriEXT(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, int @params);
		internal unsafe delegate void glConvolutionParameteriv(ConvolutionTarget target, ConvolutionParameterEXT pname, int* @params);
		internal unsafe delegate void glConvolutionParameterivEXT(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, int* @params);
		internal delegate void glConvolutionParameterxOES(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, int param);
		internal unsafe delegate void glConvolutionParameterxvOES(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, int* @params);
		internal delegate void glCopyBufferSubData(CopyBufferSubDataTarget readTarget, CopyBufferSubDataTarget writeTarget, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glCopyBufferSubDataNV(CopyBufferSubDataTarget readTarget, CopyBufferSubDataTarget writeTarget, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glCopyColorSubTable(ColorTableTarget target, int start, int x, int y, int width);
		internal delegate void glCopyColorSubTableEXT(ColorTableTarget target, int start, int x, int y, int width);
		internal delegate void glCopyColorTable(ColorTableTarget target, InternalFormat internalformat, int x, int y, int width);
		internal delegate void glCopyColorTableSGI(ColorTableTargetSGI target, InternalFormat internalformat, int x, int y, int width);
		internal delegate void glCopyConvolutionFilter1D(ConvolutionTarget target, InternalFormat internalformat, int x, int y, int width);
		internal delegate void glCopyConvolutionFilter1DEXT(ConvolutionTargetEXT target, InternalFormat internalformat, int x, int y, int width);
		internal delegate void glCopyConvolutionFilter2D(ConvolutionTarget target, InternalFormat internalformat, int x, int y, int width, int height);
		internal delegate void glCopyConvolutionFilter2DEXT(ConvolutionTargetEXT target, InternalFormat internalformat, int x, int y, int width, int height);
		internal delegate void glCopyImageSubData(uint srcName, CopyImageSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyImageSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal delegate void glCopyImageSubDataEXT(uint srcName, CopyBufferSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyBufferSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal delegate void glCopyImageSubDataNV(uint srcName, CopyBufferSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyBufferSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int width, int height, int depth);
		internal delegate void glCopyImageSubDataOES(uint srcName, CopyBufferSubDataTarget srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, CopyBufferSubDataTarget dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal delegate void glCopyMultiTexImage1DEXT(TextureUnit texunit, TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int border);
		internal delegate void glCopyMultiTexImage2DEXT(TextureUnit texunit, TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
		internal delegate void glCopyMultiTexSubImage1DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int x, int y, int width);
		internal delegate void glCopyMultiTexSubImage2DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		internal delegate void glCopyMultiTexSubImage3DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyNamedBufferSubData(uint readBuffer, uint writeBuffer, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glCopyPathNV(uint resultPath, uint srcPath);
		internal delegate void glCopyPixels(int x, int y, int width, int height, PixelCopyType type);
		internal delegate void glCopyTexImage1D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int border);
		internal delegate void glCopyTexImage1DEXT(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int border);
		internal delegate void glCopyTexImage2D(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
		internal delegate void glCopyTexImage2DEXT(TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
		internal delegate void glCopyTexSubImage1D(TextureTarget target, int level, int xoffset, int x, int y, int width);
		internal delegate void glCopyTexSubImage1DEXT(TextureTarget target, int level, int xoffset, int x, int y, int width);
		internal delegate void glCopyTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		internal delegate void glCopyTexSubImage2DEXT(TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		internal delegate void glCopyTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyTexSubImage3DEXT(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyTexSubImage3DOES(uint target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyTextureImage1DEXT(uint texture, TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int border);
		internal delegate void glCopyTextureImage2DEXT(uint texture, TextureTarget target, int level, InternalFormat internalformat, int x, int y, int width, int height, int border);
		internal delegate void glCopyTextureLevelsAPPLE(uint destinationTexture, uint sourceTexture, int sourceBaseLevel, int sourceLevelCount);
		internal delegate void glCopyTextureSubImage1D(uint texture, int level, int xoffset, int x, int y, int width);
		internal delegate void glCopyTextureSubImage1DEXT(uint texture, TextureTarget target, int level, int xoffset, int x, int y, int width);
		internal delegate void glCopyTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		internal delegate void glCopyTextureSubImage2DEXT(uint texture, TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
		internal delegate void glCopyTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCopyTextureSubImage3DEXT(uint texture, TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
		internal delegate void glCoverageMaskNV(bool mask);
		internal delegate void glCoverageModulationNV(uint components);
		internal unsafe delegate void glCoverageModulationTableNV(int n, float* v);
		internal delegate void glCoverageOperationNV(uint operation);
		internal unsafe delegate void glCoverFillPathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, PathCoverMode coverMode, PathTransformType transformType, float* transformValues);
		internal delegate void glCoverFillPathNV(uint path, PathCoverMode coverMode);
		internal unsafe delegate void glCoverStrokePathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, PathCoverMode coverMode, PathTransformType transformType, float* transformValues);
		internal delegate void glCoverStrokePathNV(uint path, PathCoverMode coverMode);
		internal unsafe delegate void glCreateBuffers(int n, uint* buffers);
		internal unsafe delegate void glCreateCommandListsNV(int n, uint* lists);
		internal unsafe delegate void glCreateFramebuffers(int n, uint* framebuffers);
		internal unsafe delegate void glCreateMemoryObjectsEXT(int n, uint* memoryObjects);
		internal unsafe delegate void glCreatePerfQueryINTEL(uint queryId, uint* queryHandle);
		internal delegate uint glCreateProgram();
		internal delegate uint glCreateProgramObjectARB();
		internal unsafe delegate void glCreateProgramPipelines(int n, uint* pipelines);
		internal delegate uint glCreateProgressFenceNVX();
		internal unsafe delegate void glCreateQueries(QueryTarget target, int n, uint* ids);
		internal unsafe delegate void glCreateRenderbuffers(int n, uint* renderbuffers);
		internal unsafe delegate void glCreateSamplers(int n, uint* samplers);
		internal delegate uint glCreateShader(ShaderType type);
		internal delegate uint glCreateShaderObjectARB(ShaderType shaderType);
		internal unsafe delegate uint glCreateShaderProgramEXT(ShaderType type, sbyte* @string);
		internal unsafe delegate uint glCreateShaderProgramv(ShaderType type, int count, sbyte* strings);
		internal unsafe delegate uint glCreateShaderProgramvEXT(ShaderType type, int count, sbyte* strings);
		internal unsafe delegate void glCreateStatesNV(int n, uint* states);
		internal unsafe delegate IntPtr glCreateSyncFromCLeventARB(IntPtr* context, IntPtr* @event, uint flags);
		internal unsafe delegate void glCreateTextures(TextureTarget target, int n, uint* textures);
		internal unsafe delegate void glCreateTransformFeedbacks(int n, uint* ids);
		internal unsafe delegate void glCreateVertexArrays(int n, uint* arrays);
		internal delegate void glCullFace(CullFaceMode mode);
		internal unsafe delegate void glCullParameterdvEXT(CullParameterEXT pname, double* @params);
		internal unsafe delegate void glCullParameterfvEXT(CullParameterEXT pname, float* @params);
		internal delegate void glCurrentPaletteMatrixARB(int index);
		internal delegate void glCurrentPaletteMatrixOES(uint matrixpaletteindex);
		#endregion

		#region D:

		internal delegate void glDebugMessageCallback(Delegate callback, IntPtr userParam);
		internal delegate void glDebugMessageCallbackAMD(Delegate callback, IntPtr userParam);
		internal delegate void glDebugMessageCallbackARB(Delegate callback, IntPtr userParam);
		internal delegate void glDebugMessageCallbackKHR(Delegate callback, IntPtr userParam);
		internal unsafe delegate void glDebugMessageControl(DebugSource source, DebugType type, DebugSeverity severity, int count, uint* ids, bool enabled);
		internal unsafe delegate void glDebugMessageControlARB(DebugSource source, DebugType type, DebugSeverity severity, int count, uint* ids, bool enabled);
		internal unsafe delegate void glDebugMessageControlKHR(DebugSource source, DebugType type, DebugSeverity severity, int count, uint* ids, bool enabled);
		internal unsafe delegate void glDebugMessageEnableAMD(uint category, DebugSeverity severity, int count, uint* ids, bool enabled);
		internal unsafe delegate void glDebugMessageInsert(DebugSource source, DebugType type, uint id, DebugSeverity severity, int length, sbyte* buf);
		internal unsafe delegate void glDebugMessageInsertAMD(uint category, DebugSeverity severity, uint id, int length, sbyte* buf);
		internal unsafe delegate void glDebugMessageInsertARB(DebugSource source, DebugType type, uint id, DebugSeverity severity, int length, sbyte* buf);
		internal unsafe delegate void glDebugMessageInsertKHR(DebugSource source, DebugType type, uint id, DebugSeverity severity, int length, sbyte* buf);
		internal unsafe delegate void glDeformationMap3dSGIX(FfdTargetSGIX target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, double* points);
		internal unsafe delegate void glDeformationMap3fSGIX(FfdTargetSGIX target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, float* points);
		internal delegate void glDeformSGIX(uint mask);
		internal delegate void glDeleteAsyncMarkersSGIX(uint marker, int range);
		internal unsafe delegate void glDeleteBuffers(int n, uint* buffers);
		internal unsafe delegate void glDeleteBuffersARB(int n, uint* buffers);
		internal unsafe delegate void glDeleteCommandListsNV(int n, uint* lists);
		internal unsafe delegate void glDeleteFencesAPPLE(int n, uint* fences);
		internal unsafe delegate void glDeleteFencesNV(int n, uint* fences);
		internal delegate void glDeleteFragmentShaderATI(uint id);
		internal unsafe delegate void glDeleteFramebuffers(int n, uint* framebuffers);
		internal unsafe delegate void glDeleteFramebuffersEXT(int n, uint* framebuffers);
		internal unsafe delegate void glDeleteFramebuffersOES(int n, uint* framebuffers);
		internal delegate void glDeleteLists(uint list, int range);
		internal unsafe delegate void glDeleteMemoryObjectsEXT(int n, uint* memoryObjects);
		internal unsafe delegate void glDeleteNamedStringARB(int namelen, sbyte* name);
		internal unsafe delegate void glDeleteNamesAMD(uint identifier, uint num, uint* names);
		internal delegate void glDeleteObjectARB(uint obj);
		internal unsafe delegate void glDeleteOcclusionQueriesNV(int n, uint* ids);
		internal delegate void glDeletePathsNV(uint path, int range);
		internal unsafe delegate void glDeletePerfMonitorsAMD(int n, uint* monitors);
		internal delegate void glDeletePerfQueryINTEL(uint queryHandle);
		internal delegate void glDeleteProgram(uint program);
		internal unsafe delegate void glDeleteProgramPipelines(int n, uint* pipelines);
		internal unsafe delegate void glDeleteProgramPipelinesEXT(int n, uint* pipelines);
		internal unsafe delegate void glDeleteProgramsARB(int n, uint* programs);
		internal unsafe delegate void glDeleteProgramsNV(int n, uint* programs);
		internal unsafe delegate void glDeleteQueries(int n, uint* ids);
		internal unsafe delegate void glDeleteQueriesARB(int n, uint* ids);
		internal unsafe delegate void glDeleteQueriesEXT(int n, uint* ids);
		internal unsafe delegate void glDeleteQueryResourceTagNV(int n, int* tagIds);
		internal unsafe delegate void glDeleteRenderbuffers(int n, uint* renderbuffers);
		internal unsafe delegate void glDeleteRenderbuffersEXT(int n, uint* renderbuffers);
		internal unsafe delegate void glDeleteRenderbuffersOES(int n, uint* renderbuffers);
		internal unsafe delegate void glDeleteSamplers(int count, uint* samplers);
		internal unsafe delegate void glDeleteSemaphoresEXT(int n, uint* semaphores);
		internal delegate void glDeleteShader(uint shader);
		internal unsafe delegate void glDeleteStatesNV(int n, uint* states);
		internal delegate void glDeleteSync(IntPtr sync);
		internal delegate void glDeleteSyncAPPLE(IntPtr sync);
		internal unsafe delegate void glDeleteTextures(int n, uint* textures);
		internal unsafe delegate void glDeleteTexturesEXT(int n, uint* textures);
		internal unsafe delegate void glDeleteTransformFeedbacks(int n, uint* ids);
		internal unsafe delegate void glDeleteTransformFeedbacksNV(int n, uint* ids);
		internal unsafe delegate void glDeleteVertexArrays(int n, uint* arrays);
		internal unsafe delegate void glDeleteVertexArraysAPPLE(int n, uint* arrays);
		internal unsafe delegate void glDeleteVertexArraysOES(int n, uint* arrays);
		internal delegate void glDeleteVertexShaderEXT(uint id);
		internal delegate void glDepthBoundsdNV(double zmin, double zmax);
		internal delegate void glDepthBoundsEXT(double zmin, double zmax);
		internal delegate void glDepthFunc(DepthFunction func);
		internal delegate void glDepthMask(bool flag);
		internal delegate void glDepthRange(double n, double f);
		internal unsafe delegate void glDepthRangeArraydvNV(uint first, int count, double* v);
		internal unsafe delegate void glDepthRangeArrayfvNV(uint first, int count, float* v);
		internal unsafe delegate void glDepthRangeArrayfvOES(uint first, int count, float* v);
		internal unsafe delegate void glDepthRangeArrayv(uint first, int count, double* v);
		internal delegate void glDepthRangedNV(double zNear, double zFar);
		internal delegate void glDepthRangef(float n, float f);
		internal delegate void glDepthRangefOES(float n, float f);
		internal delegate void glDepthRangeIndexed(uint index, double n, double f);
		internal delegate void glDepthRangeIndexeddNV(uint index, double n, double f);
		internal delegate void glDepthRangeIndexedfNV(uint index, float n, float f);
		internal delegate void glDepthRangeIndexedfOES(uint index, float n, float f);
		internal delegate void glDepthRangex(int n, int f);
		internal delegate void glDepthRangexOES(int n, int f);
		internal delegate void glDetachObjectARB(uint containerObj, uint attachedObj);
		internal delegate void glDetachShader(uint program, uint shader);
		internal unsafe delegate void glDetailTexFuncSGIS(TextureTarget target, int n, float* points);
		internal delegate void glDisable(EnableCap cap);
		internal delegate void glDisableClientState(EnableCap array);
		internal delegate void glDisableClientStateiEXT(EnableCap array, uint index);
		internal delegate void glDisableClientStateIndexedEXT(EnableCap array, uint index);
		internal delegate void glDisableDriverControlQCOM(uint driverControl);
		internal delegate void glDisablei(EnableCap target, uint index);
		internal delegate void glDisableiEXT(EnableCap target, uint index);
		internal delegate void glDisableIndexedEXT(EnableCap target, uint index);
		internal delegate void glDisableiNV(EnableCap target, uint index);
		internal delegate void glDisableiOES(EnableCap target, uint index);
		internal delegate void glDisableVariantClientStateEXT(uint id);
		internal delegate void glDisableVertexArrayAttrib(uint vaobj, uint index);
		internal delegate void glDisableVertexArrayAttribEXT(uint vaobj, uint index);
		internal delegate void glDisableVertexArrayEXT(uint vaobj, EnableCap array);
		internal delegate void glDisableVertexAttribAPPLE(uint index, uint pname);
		internal delegate void glDisableVertexAttribArray(uint index);
		internal delegate void glDisableVertexAttribArrayARB(uint index);
		internal unsafe delegate void glDiscardFramebufferEXT(FramebufferTarget target, int numAttachments, InvalidateFramebufferAttachment* attachments);
		internal delegate void glDispatchCompute(uint num_groups_x, uint num_groups_y, uint num_groups_z);
		internal delegate void glDispatchComputeGroupSizeARB(uint num_groups_x, uint num_groups_y, uint num_groups_z, uint group_size_x, uint group_size_y, uint group_size_z);
		internal delegate void glDispatchComputeIndirect(IntPtr indirect);
		internal delegate void glDrawArrays(PrimitiveType mode, int first, int count);
		internal delegate void glDrawArraysEXT(PrimitiveType mode, int first, int count);
		internal delegate void glDrawArraysIndirect(PrimitiveType mode, IntPtr indirect);
		internal delegate void glDrawArraysInstanced(PrimitiveType mode, int first, int count, int instancecount);
		internal delegate void glDrawArraysInstancedANGLE(PrimitiveType mode, int first, int count, int primcount);
		internal delegate void glDrawArraysInstancedARB(PrimitiveType mode, int first, int count, int primcount);
		internal delegate void glDrawArraysInstancedBaseInstance(PrimitiveType mode, int first, int count, int instancecount, uint baseinstance);
		internal delegate void glDrawArraysInstancedBaseInstanceEXT(PrimitiveType mode, int first, int count, int instancecount, uint baseinstance);
		internal delegate void glDrawArraysInstancedEXT(PrimitiveType mode, int start, int count, int primcount);
		internal delegate void glDrawArraysInstancedNV(PrimitiveType mode, int first, int count, int primcount);
		internal delegate void glDrawBuffer(DrawBufferMode buf);
		internal unsafe delegate void glDrawBuffers(int n, DrawBufferMode* bufs);
		internal unsafe delegate void glDrawBuffersARB(int n, DrawBufferMode* bufs);
		internal unsafe delegate void glDrawBuffersATI(int n, DrawBufferMode* bufs);
		internal unsafe delegate void glDrawBuffersEXT(int n, uint* bufs);
		internal unsafe delegate void glDrawBuffersIndexedEXT(int n, uint* location, int* indices);
		internal unsafe delegate void glDrawBuffersNV(int n, uint* bufs);
		internal unsafe delegate void glDrawCommandsAddressNV(uint primitiveMode, ulong* indirects, int* sizes, uint count);
		internal unsafe delegate void glDrawCommandsNV(uint primitiveMode, uint buffer, IntPtr* indirects, int* sizes, uint count);
		internal unsafe delegate void glDrawCommandsStatesAddressNV(ulong* indirects, int* sizes, uint* states, uint* fbos, uint count);
		internal unsafe delegate void glDrawCommandsStatesNV(uint buffer, IntPtr* indirects, int* sizes, uint* states, uint* fbos, uint count);
		internal delegate void glDrawElementArrayAPPLE(PrimitiveType mode, int first, int count);
		internal delegate void glDrawElementArrayATI(PrimitiveType mode, int count);
		internal delegate void glDrawElements(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices);
		internal delegate void glDrawElementsBaseVertex(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawElementsBaseVertexEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawElementsBaseVertexOES(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawElementsIndirect(PrimitiveType mode, DrawElementsType type, IntPtr indirect);
		internal delegate void glDrawElementsInstanced(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount);
		internal delegate void glDrawElementsInstancedANGLE(PrimitiveType mode, int count, PrimitiveType type, IntPtr indices, int primcount);
		internal delegate void glDrawElementsInstancedARB(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glDrawElementsInstancedBaseInstance(PrimitiveType mode, int count, PrimitiveType type, IntPtr indices, int instancecount, uint baseinstance);
		internal delegate void glDrawElementsInstancedBaseInstanceEXT(PrimitiveType mode, int count, PrimitiveType type, IntPtr indices, int instancecount, uint baseinstance);
		internal delegate void glDrawElementsInstancedBaseVertex(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
		internal delegate void glDrawElementsInstancedBaseVertexBaseInstance(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex, uint baseinstance);
		internal delegate void glDrawElementsInstancedBaseVertexBaseInstanceEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex, uint baseinstance);
		internal delegate void glDrawElementsInstancedBaseVertexEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
		internal delegate void glDrawElementsInstancedBaseVertexOES(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int instancecount, int basevertex);
		internal delegate void glDrawElementsInstancedEXT(PrimitiveType mode, int count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glDrawElementsInstancedNV(PrimitiveType mode, int count, PrimitiveType type, IntPtr indices, int primcount);
		internal delegate void glDrawMeshArraysSUN(PrimitiveType mode, int first, int count, int width);
		internal delegate void glDrawMeshTasksIndirectNV(IntPtr indirect);
		internal delegate void glDrawMeshTasksNV(uint first, uint count);
		internal delegate void glDrawPixels(int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glDrawRangeElementArrayAPPLE(PrimitiveType mode, uint start, uint end, int first, int count);
		internal delegate void glDrawRangeElementArrayATI(PrimitiveType mode, uint start, uint end, int count);
		internal delegate void glDrawRangeElements(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices);
		internal delegate void glDrawRangeElementsBaseVertex(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawRangeElementsBaseVertexEXT(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawRangeElementsBaseVertexOES(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices, int basevertex);
		internal delegate void glDrawRangeElementsEXT(PrimitiveType mode, uint start, uint end, int count, DrawElementsType type, IntPtr indices);
		internal delegate void glDrawTexfOES(float x, float y, float z, float width, float height);
		internal unsafe delegate void glDrawTexfvOES(float* coords);
		internal delegate void glDrawTexiOES(int x, int y, int z, int width, int height);
		internal unsafe delegate void glDrawTexivOES(int* coords);
		internal delegate void glDrawTexsOES(short x, short y, short z, short width, short height);
		internal unsafe delegate void glDrawTexsvOES(short* coords);
		internal delegate void glDrawTextureNV(uint texture, uint sampler, float x0, float y0, float x1, float y1, float z, float s0, float t0, float s1, float t1);
		internal delegate void glDrawTexxOES(int x, int y, int z, int width, int height);
		internal unsafe delegate void glDrawTexxvOES(int* coords);
		internal delegate void glDrawTransformFeedback(PrimitiveType mode, uint id);
		internal delegate void glDrawTransformFeedbackEXT(PrimitiveType mode, uint id);
		internal delegate void glDrawTransformFeedbackInstanced(PrimitiveType mode, uint id, int instancecount);
		internal delegate void glDrawTransformFeedbackInstancedEXT(PrimitiveType mode, uint id, int instancecount);
		internal delegate void glDrawTransformFeedbackNV(PrimitiveType mode, uint id);
		internal delegate void glDrawTransformFeedbackStream(PrimitiveType mode, uint id, uint stream);
		internal delegate void glDrawTransformFeedbackStreamInstanced(PrimitiveType mode, uint id, uint stream, int instancecount);
		internal delegate void glDrawVkImageNV(ulong vkImage, uint sampler, float x0, float y0, float x1, float y1, float z, float s0, float t0, float s1, float t1);
		#endregion

		#region E:

		internal delegate void glEdgeFlag(bool flag);
		internal delegate void glEdgeFlagFormatNV(int stride);
		internal delegate void glEdgeFlagPointer(int stride, IntPtr pointer);
		internal unsafe delegate void glEdgeFlagPointerEXT(int stride, int count, bool* pointer);
		internal unsafe delegate void glEdgeFlagPointerListIBM(int stride, bool* pointer, int ptrstride);
		internal unsafe delegate void glEdgeFlagv(bool* flag);
		internal delegate void glEGLImageTargetRenderbufferStorageOES(uint target, IntPtr image);
		internal unsafe delegate void glEGLImageTargetTexStorageEXT(uint target, IntPtr image, int* attrib_list);
		internal delegate void glEGLImageTargetTexture2DOES(uint target, IntPtr image);
		internal unsafe delegate void glEGLImageTargetTextureStorageEXT(uint texture, IntPtr image, int* attrib_list);
		internal delegate void glElementPointerAPPLE(ElementPointerTypeATI type, IntPtr pointer);
		internal delegate void glElementPointerATI(ElementPointerTypeATI type, IntPtr pointer);
		internal delegate void glEnable(EnableCap cap);
		internal delegate void glEnableClientState(EnableCap array);
		internal delegate void glEnableClientStateiEXT(EnableCap array, uint index);
		internal delegate void glEnableClientStateIndexedEXT(EnableCap array, uint index);
		internal delegate void glEnableDriverControlQCOM(uint driverControl);
		internal delegate void glEnablei(EnableCap target, uint index);
		internal delegate void glEnableiEXT(EnableCap target, uint index);
		internal delegate void glEnableIndexedEXT(EnableCap target, uint index);
		internal delegate void glEnableiNV(EnableCap target, uint index);
		internal delegate void glEnableiOES(EnableCap target, uint index);
		internal delegate void glEnableVariantClientStateEXT(uint id);
		internal delegate void glEnableVertexArrayAttrib(uint vaobj, uint index);
		internal delegate void glEnableVertexArrayAttribEXT(uint vaobj, uint index);
		internal delegate void glEnableVertexArrayEXT(uint vaobj, EnableCap array);
		internal delegate void glEnableVertexAttribAPPLE(uint index, uint pname);
		internal delegate void glEnableVertexAttribArray(uint index);
		internal delegate void glEnableVertexAttribArrayARB(uint index);
		internal delegate void glEnd();
		internal delegate void glEndConditionalRender();
		internal delegate void glEndConditionalRenderNV();
		internal delegate void glEndConditionalRenderNVX();
		internal delegate void glEndFragmentShaderATI();
		internal delegate void glEndList();
		internal delegate void glEndOcclusionQueryNV();
		internal delegate void glEndPerfMonitorAMD(uint monitor);
		internal delegate void glEndPerfQueryINTEL(uint queryHandle);
		internal delegate void glEndQuery(QueryTarget target);
		internal delegate void glEndQueryARB(QueryTarget target);
		internal delegate void glEndQueryEXT(QueryTarget target);
		internal delegate void glEndQueryIndexed(QueryTarget target, uint index);
		internal delegate void glEndTilingQCOM(uint preserveMask);
		internal delegate void glEndTransformFeedback();
		internal delegate void glEndTransformFeedbackEXT();
		internal delegate void glEndTransformFeedbackNV();
		internal delegate void glEndVertexShaderEXT();
		internal delegate void glEndVideoCaptureNV(uint video_capture_slot);
		internal delegate void glEvalCoord1d(double u);
		internal unsafe delegate void glEvalCoord1dv(double* u);
		internal delegate void glEvalCoord1f(float u);
		internal unsafe delegate void glEvalCoord1fv(float* u);
		internal delegate void glEvalCoord1xOES(int u);
		internal unsafe delegate void glEvalCoord1xvOES(int* coords);
		internal delegate void glEvalCoord2d(double u, double v);
		internal unsafe delegate void glEvalCoord2dv(double* u);
		internal delegate void glEvalCoord2f(float u, float v);
		internal unsafe delegate void glEvalCoord2fv(float* u);
		internal delegate void glEvalCoord2xOES(int u, int v);
		internal unsafe delegate void glEvalCoord2xvOES(int* coords);
		internal delegate void glEvalMapsNV(EvalTargetNV target, EvalMapsModeNV mode);
		internal delegate void glEvalMesh1(MeshMode1 mode, int i1, int i2);
		internal delegate void glEvalMesh2(MeshMode2 mode, int i1, int i2, int j1, int j2);
		internal delegate void glEvalPoint1(int i);
		internal delegate void glEvalPoint2(int i, int j);
		internal delegate void glEvaluateDepthValuesARB();
		internal unsafe delegate void glExecuteProgramNV(VertexAttribEnumNV target, uint id, float* @params);
		internal delegate void glExtGetBufferPointervQCOM(uint target, IntPtr @params);
		internal unsafe delegate void glExtGetBuffersQCOM(uint* buffers, int maxBuffers, int* numBuffers);
		internal unsafe delegate void glExtGetFramebuffersQCOM(uint* framebuffers, int maxFramebuffers, int* numFramebuffers);
		internal unsafe delegate void glExtGetProgramBinarySourceQCOM(uint program, ShaderType shadertype, sbyte* source, int* length);
		internal unsafe delegate void glExtGetProgramsQCOM(uint* programs, int maxPrograms, int* numPrograms);
		internal unsafe delegate void glExtGetRenderbuffersQCOM(uint* renderbuffers, int maxRenderbuffers, int* numRenderbuffers);
		internal unsafe delegate void glExtGetShadersQCOM(uint* shaders, int maxShaders, int* numShaders);
		internal unsafe delegate void glExtGetTexLevelParameterivQCOM(uint texture, uint face, int level, uint pname, int* @params);
		internal delegate void glExtGetTexSubImageQCOM(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr texels);
		internal unsafe delegate void glExtGetTexturesQCOM(uint* textures, int maxTextures, int* numTextures);
		internal delegate bool glExtIsProgramBinaryQCOM(uint program);
		internal delegate void glExtractComponentEXT(uint res, uint src, uint num);
		internal delegate void glExtTexObjectStateOverrideiQCOM(uint target, uint pname, int param);
		#endregion

		#region F:

		internal unsafe delegate void glFeedbackBuffer(int size, FeedbackType type, float* buffer);
		internal unsafe delegate void glFeedbackBufferxOES(int n, uint type, int* buffer);
		internal delegate IntPtr glFenceSync(SyncCondition condition, uint flags);
		internal delegate IntPtr glFenceSyncAPPLE(SyncCondition condition, uint flags);
		internal delegate void glFinalCombinerInputNV(CombinerVariableNV variable, CombinerRegisterNV input, CombinerMappingNV mapping, CombinerComponentUsageNV componentUsage);
		internal delegate void glFinish();
		internal unsafe delegate int glFinishAsyncSGIX(uint* markerp);
		internal delegate void glFinishFenceAPPLE(uint fence);
		internal delegate void glFinishFenceNV(uint fence);
		internal delegate void glFinishObjectAPPLE(ObjectTypeAPPLE @object, int name);
		internal delegate void glFinishTextureSUNX();
		internal delegate void glFlush();
		internal delegate void glFlushMappedBufferRange(BufferTargetARB target, IntPtr offset, int length);
		internal delegate void glFlushMappedBufferRangeAPPLE(BufferTargetARB target, IntPtr offset, int size);
		internal delegate void glFlushMappedBufferRangeEXT(BufferTargetARB target, IntPtr offset, int length);
		internal delegate void glFlushMappedNamedBufferRange(uint buffer, IntPtr offset, int length);
		internal delegate void glFlushMappedNamedBufferRangeEXT(uint buffer, IntPtr offset, int length);
		internal delegate void glFlushPixelDataRangeNV(PixelDataRangeTargetNV target);
		internal delegate void glFlushRasterSGIX();
		internal delegate void glFlushStaticDataIBM(uint target);
		internal delegate void glFlushVertexArrayRangeAPPLE(int length, IntPtr pointer);
		internal delegate void glFlushVertexArrayRangeNV();
		internal delegate void glFogCoordd(double coord);
		internal delegate void glFogCoorddEXT(double coord);
		internal unsafe delegate void glFogCoorddv(double* coord);
		internal unsafe delegate void glFogCoorddvEXT(double* coord);
		internal delegate void glFogCoordf(float coord);
		internal delegate void glFogCoordfEXT(float coord);
		internal delegate void glFogCoordFormatNV(uint type, int stride);
		internal unsafe delegate void glFogCoordfv(float* coord);
		internal unsafe delegate void glFogCoordfvEXT(float* coord);
		internal delegate void glFogCoordhNV(ushort fog);
		internal unsafe delegate void glFogCoordhvNV(ushort* fog);
		internal delegate void glFogCoordPointer(FogPointerTypeEXT type, int stride, IntPtr pointer);
		internal delegate void glFogCoordPointerEXT(FogPointerTypeEXT type, int stride, IntPtr pointer);
		internal delegate void glFogCoordPointerListIBM(FogPointerTypeIBM type, int stride, IntPtr pointer, int ptrstride);
		internal delegate void glFogf(FogParameter pname, float param);
		internal unsafe delegate void glFogFuncSGIS(int n, float* points);
		internal unsafe delegate void glFogfv(FogParameter pname, float* @params);
		internal delegate void glFogi(FogParameter pname, int param);
		internal unsafe delegate void glFogiv(FogParameter pname, int* @params);
		internal delegate void glFogx(FogPName pname, int param);
		internal delegate void glFogxOES(FogPName pname, int param);
		internal unsafe delegate void glFogxv(FogPName pname, int* param);
		internal unsafe delegate void glFogxvOES(FogPName pname, int* param);
		internal delegate void glFragmentColorMaterialSGIX(MaterialFace face, MaterialParameter mode);
		internal delegate void glFragmentCoverageColorNV(uint color);
		internal delegate void glFragmentLightfSGIX(FragmentLightNameSGIX light, FragmentLightParameterSGIX pname, float param);
		internal unsafe delegate void glFragmentLightfvSGIX(FragmentLightNameSGIX light, FragmentLightParameterSGIX pname, float* @params);
		internal delegate void glFragmentLightiSGIX(FragmentLightNameSGIX light, FragmentLightParameterSGIX pname, int param);
		internal unsafe delegate void glFragmentLightivSGIX(FragmentLightNameSGIX light, FragmentLightParameterSGIX pname, int* @params);
		internal delegate void glFragmentLightModelfSGIX(FragmentLightModelParameterSGIX pname, float param);
		internal unsafe delegate void glFragmentLightModelfvSGIX(FragmentLightModelParameterSGIX pname, float* @params);
		internal delegate void glFragmentLightModeliSGIX(FragmentLightModelParameterSGIX pname, int param);
		internal unsafe delegate void glFragmentLightModelivSGIX(FragmentLightModelParameterSGIX pname, int* @params);
		internal delegate void glFragmentMaterialfSGIX(MaterialFace face, MaterialParameter pname, float param);
		internal unsafe delegate void glFragmentMaterialfvSGIX(MaterialFace face, MaterialParameter pname, float* @params);
		internal delegate void glFragmentMaterialiSGIX(MaterialFace face, MaterialParameter pname, int param);
		internal unsafe delegate void glFragmentMaterialivSGIX(MaterialFace face, MaterialParameter pname, int* @params);
		internal delegate void glFramebufferDrawBufferEXT(uint framebuffer, DrawBufferMode mode);
		internal unsafe delegate void glFramebufferDrawBuffersEXT(uint framebuffer, int n, DrawBufferMode* bufs);
		internal delegate void glFramebufferFetchBarrierEXT();
		internal delegate void glFramebufferFetchBarrierQCOM();
		internal unsafe delegate void glFramebufferFoveationConfigQCOM(uint framebuffer, uint numLayers, uint focalPointsPerLayer, uint requestedFeatures, uint* providedFeatures);
		internal delegate void glFramebufferFoveationParametersQCOM(uint framebuffer, uint layer, uint focalPoint, float focalX, float focalY, float gainX, float gainY, float foveaArea);
		internal delegate void glFramebufferParameteri(FramebufferTarget target, FramebufferParameterName pname, int param);
		internal delegate void glFramebufferParameteriMESA(FramebufferTarget target, FramebufferParameterName pname, int param);
		internal delegate void glFramebufferPixelLocalStorageSizeEXT(uint target, int size);
		internal delegate void glFramebufferReadBufferEXT(uint framebuffer, ReadBufferMode mode);
		internal delegate void glFramebufferRenderbuffer(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal delegate void glFramebufferRenderbufferEXT(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal delegate void glFramebufferRenderbufferOES(FramebufferTarget target, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal unsafe delegate void glFramebufferSampleLocationsfvARB(FramebufferTarget target, uint start, int count, float* v);
		internal unsafe delegate void glFramebufferSampleLocationsfvNV(FramebufferTarget target, uint start, int count, float* v);
		internal unsafe delegate void glFramebufferSamplePositionsfvAMD(FramebufferTarget target, uint numsamples, uint pixelindex, float* values);
		internal delegate void glFramebufferTexture(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFramebufferTexture1D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture1DEXT(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture2D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture2DDownsampleIMG(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int xscale, int yscale);
		internal delegate void glFramebufferTexture2DEXT(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture2DMultisampleEXT(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int samples);
		internal delegate void glFramebufferTexture2DMultisampleIMG(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int samples);
		internal delegate void glFramebufferTexture2DOES(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glFramebufferTexture3D(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int zoffset);
		internal delegate void glFramebufferTexture3DEXT(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int zoffset);
		internal delegate void glFramebufferTexture3DOES(FramebufferTarget target, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int zoffset);
		internal delegate void glFramebufferTextureARB(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFramebufferTextureEXT(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFramebufferTextureFaceARB(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, TextureTarget face);
		internal delegate void glFramebufferTextureFaceEXT(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, TextureTarget face);
		internal delegate void glFramebufferTextureLayer(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer);
		internal delegate void glFramebufferTextureLayerARB(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer);
		internal delegate void glFramebufferTextureLayerDownsampleIMG(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer, int xscale, int yscale);
		internal delegate void glFramebufferTextureLayerEXT(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int layer);
		internal delegate void glFramebufferTextureMultisampleMultiviewOVR(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int samples, int baseViewIndex, int numViews);
		internal delegate void glFramebufferTextureMultiviewOVR(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews);
		internal delegate void glFramebufferTextureOES(FramebufferTarget target, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glFrameTerminatorGREMEDY();
		internal delegate void glFrameZoomSGIX(int factor);
		internal delegate void glFreeObjectBufferATI(uint buffer);
		internal delegate void glFrontFace(FrontFaceDirection mode);
		internal delegate void glFrustum(double left, double right, double bottom, double top, double zNear, double zFar);
		internal delegate void glFrustumf(float l, float r, float b, float t, float n, float f);
		internal delegate void glFrustumfOES(float l, float r, float b, float t, float n, float f);
		internal delegate void glFrustumx(int l, int r, int b, int t, int n, int f);
		internal delegate void glFrustumxOES(int l, int r, int b, int t, int n, int f);
		#endregion

		#region G:

		internal delegate uint glGenAsyncMarkersSGIX(int range);
		internal unsafe delegate void glGenBuffers(int n, uint* buffers);
		internal unsafe delegate void glGenBuffersARB(int n, uint* buffers);
		internal delegate void glGenerateMipmap(TextureTarget target);
		internal delegate void glGenerateMipmapEXT(TextureTarget target);
		internal delegate void glGenerateMipmapOES(TextureTarget target);
		internal delegate void glGenerateMultiTexMipmapEXT(TextureUnit texunit, TextureTarget target);
		internal delegate void glGenerateTextureMipmap(uint texture);
		internal delegate void glGenerateTextureMipmapEXT(uint texture, TextureTarget target);
		internal unsafe delegate void glGenFencesAPPLE(int n, uint* fences);
		internal unsafe delegate void glGenFencesNV(int n, uint* fences);
		internal delegate uint glGenFragmentShadersATI(uint range);
		internal unsafe delegate void glGenFramebuffers(int n, uint* framebuffers);
		internal unsafe delegate void glGenFramebuffersEXT(int n, uint* framebuffers);
		internal unsafe delegate void glGenFramebuffersOES(int n, uint* framebuffers);
		internal delegate uint glGenLists(int range);
		internal unsafe delegate void glGenNamesAMD(uint identifier, uint num, uint* names);
		internal unsafe delegate void glGenOcclusionQueriesNV(int n, uint* ids);
		internal delegate uint glGenPathsNV(int range);
		internal unsafe delegate void glGenPerfMonitorsAMD(int n, uint* monitors);
		internal unsafe delegate void glGenProgramPipelines(int n, uint* pipelines);
		internal unsafe delegate void glGenProgramPipelinesEXT(int n, uint* pipelines);
		internal unsafe delegate void glGenProgramsARB(int n, uint* programs);
		internal unsafe delegate void glGenProgramsNV(int n, uint* programs);
		internal unsafe delegate void glGenQueries(int n, uint* ids);
		internal unsafe delegate void glGenQueriesARB(int n, uint* ids);
		internal unsafe delegate void glGenQueriesEXT(int n, uint* ids);
		internal unsafe delegate void glGenQueryResourceTagNV(int n, int* tagIds);
		internal unsafe delegate void glGenRenderbuffers(int n, uint* renderbuffers);
		internal unsafe delegate void glGenRenderbuffersEXT(int n, uint* renderbuffers);
		internal unsafe delegate void glGenRenderbuffersOES(int n, uint* renderbuffers);
		internal unsafe delegate void glGenSamplers(int count, uint* samplers);
		internal unsafe delegate void glGenSemaphoresEXT(int n, uint* semaphores);
		internal delegate uint glGenSymbolsEXT(DataTypeEXT datatype, VertexShaderStorageTypeEXT storagetype, ParameterRangeEXT range, uint components);
		internal unsafe delegate void glGenTextures(int n, uint* textures);
		internal unsafe delegate void glGenTexturesEXT(int n, uint* textures);
		internal unsafe delegate void glGenTransformFeedbacks(int n, uint* ids);
		internal unsafe delegate void glGenTransformFeedbacksNV(int n, uint* ids);
		internal unsafe delegate void glGenVertexArrays(int n, uint* arrays);
		internal unsafe delegate void glGenVertexArraysAPPLE(int n, uint* arrays);
		internal unsafe delegate void glGenVertexArraysOES(int n, uint* arrays);
		internal delegate uint glGenVertexShadersEXT(uint range);
		internal unsafe delegate void glGetActiveAtomicCounterBufferiv(uint program, uint bufferIndex, AtomicCounterBufferPName pname, int* @params);
		internal unsafe delegate void glGetActiveAttrib(uint program, uint index, int bufSize, int* length, int* size, AttributeType* type, sbyte* name);
		internal unsafe delegate void glGetActiveAttribARB(uint programObj, uint index, int maxLength, int* length, int* size, AttributeType* type, sbyte* name);
		internal unsafe delegate void glGetActiveSubroutineName(uint program, ShaderType shadertype, uint index, int bufSize, int* length, sbyte* name);
		internal unsafe delegate void glGetActiveSubroutineUniformiv(uint program, ShaderType shadertype, uint index, SubroutineParameterName pname, int* values);
		internal unsafe delegate void glGetActiveSubroutineUniformName(uint program, ShaderType shadertype, uint index, int bufSize, int* length, sbyte* name);
		internal unsafe delegate void glGetActiveUniform(uint program, uint index, int bufSize, int* length, int* size, UniformType* type, sbyte* name);
		internal unsafe delegate void glGetActiveUniformARB(uint programObj, uint index, int maxLength, int* length, int* size, UniformType* type, sbyte* name);
		internal unsafe delegate void glGetActiveUniformBlockiv(uint program, uint uniformBlockIndex, UniformBlockPName pname, int* @params);
		internal unsafe delegate void glGetActiveUniformBlockName(uint program, uint uniformBlockIndex, int bufSize, int* length, sbyte* uniformBlockName);
		internal unsafe delegate void glGetActiveUniformName(uint program, uint uniformIndex, int bufSize, int* length, sbyte* uniformName);
		internal unsafe delegate void glGetActiveUniformsiv(uint program, int uniformCount, uint* uniformIndices, UniformPName pname, int* @params);
		internal unsafe delegate void glGetActiveVaryingNV(uint program, uint index, int bufSize, int* length, int* size, uint* type, sbyte* name);
		internal unsafe delegate void glGetArrayObjectfvATI(EnableCap array, ArrayObjectPNameATI pname, float* @params);
		internal unsafe delegate void glGetArrayObjectivATI(EnableCap array, ArrayObjectPNameATI pname, int* @params);
		internal unsafe delegate void glGetAttachedObjectsARB(uint containerObj, int maxCount, int* count, uint* obj);
		internal unsafe delegate void glGetAttachedShaders(uint program, int maxCount, int* count, uint* shaders);
		internal unsafe delegate int glGetAttribLocation(uint program, sbyte* name);
		internal unsafe delegate int glGetAttribLocationARB(uint programObj, sbyte* name);
		internal unsafe delegate void glGetBooleani_v(BufferTargetARB target, uint index, bool* data);
		internal unsafe delegate void glGetBooleanIndexedvEXT(BufferTargetARB target, uint index, bool* data);
		internal unsafe delegate void glGetBooleanv(GetPName pname, bool* data);
		internal unsafe delegate void glGetBufferParameteri64v(BufferTargetARB target, BufferPNameARB pname, long* @params);
		internal unsafe delegate void glGetBufferParameteriv(BufferTargetARB target, BufferPNameARB pname, int* @params);
		internal unsafe delegate void glGetBufferParameterivARB(BufferTargetARB target, BufferPNameARB pname, int* @params);
		internal unsafe delegate void glGetBufferParameterui64vNV(BufferTargetARB target, uint pname, ulong* @params);
		internal delegate void glGetBufferPointerv(BufferTargetARB target, BufferPointerNameARB pname, IntPtr @params);
		internal delegate void glGetBufferPointervARB(BufferTargetARB target, BufferPointerNameARB pname, IntPtr @params);
		internal delegate void glGetBufferPointervOES(BufferTargetARB target, BufferPointerNameARB pname, IntPtr @params);
		internal delegate void glGetBufferSubData(BufferTargetARB target, IntPtr offset, int size, IntPtr data);
		internal delegate void glGetBufferSubDataARB(BufferTargetARB target, IntPtr offset, int size, IntPtr data);
		internal unsafe delegate void glGetClipPlane(ClipPlaneName plane, double* equation);
		internal unsafe delegate void glGetClipPlanef(ClipPlaneName plane, float* equation);
		internal unsafe delegate void glGetClipPlanefOES(ClipPlaneName plane, float* equation);
		internal unsafe delegate void glGetClipPlanex(ClipPlaneName plane, int* equation);
		internal unsafe delegate void glGetClipPlanexOES(ClipPlaneName plane, int* equation);
		internal delegate void glGetColorTable(ColorTableTarget target, PixelFormat format, PixelType type, IntPtr table);
		internal delegate void glGetColorTableEXT(ColorTableTarget target, PixelFormat format, PixelType type, IntPtr data);
		internal unsafe delegate void glGetColorTableParameterfv(ColorTableTarget target, GetColorTableParameterPNameSGI pname, float* @params);
		internal unsafe delegate void glGetColorTableParameterfvEXT(ColorTableTarget target, GetColorTableParameterPNameSGI pname, float* @params);
		internal unsafe delegate void glGetColorTableParameterfvSGI(ColorTableTargetSGI target, GetColorTableParameterPNameSGI pname, float* @params);
		internal unsafe delegate void glGetColorTableParameteriv(ColorTableTarget target, GetColorTableParameterPNameSGI pname, int* @params);
		internal unsafe delegate void glGetColorTableParameterivEXT(ColorTableTarget target, GetColorTableParameterPNameSGI pname, int* @params);
		internal unsafe delegate void glGetColorTableParameterivSGI(ColorTableTargetSGI target, GetColorTableParameterPNameSGI pname, int* @params);
		internal delegate void glGetColorTableSGI(ColorTableTargetSGI target, PixelFormat format, PixelType type, IntPtr table);
		internal unsafe delegate void glGetCombinerInputParameterfvNV(CombinerStageNV stage, CombinerPortionNV portion, CombinerVariableNV variable, CombinerParameterNV pname, float* @params);
		internal unsafe delegate void glGetCombinerInputParameterivNV(CombinerStageNV stage, CombinerPortionNV portion, CombinerVariableNV variable, CombinerParameterNV pname, int* @params);
		internal unsafe delegate void glGetCombinerOutputParameterfvNV(CombinerStageNV stage, CombinerPortionNV portion, CombinerParameterNV pname, float* @params);
		internal unsafe delegate void glGetCombinerOutputParameterivNV(CombinerStageNV stage, CombinerPortionNV portion, CombinerParameterNV pname, int* @params);
		internal unsafe delegate void glGetCombinerStageParameterfvNV(CombinerStageNV stage, CombinerParameterNV pname, float* @params);
		internal delegate uint glGetCommandHeaderNV(uint tokenID, uint size);
		internal delegate void glGetCompressedMultiTexImageEXT(TextureUnit texunit, TextureTarget target, int lod, IntPtr img);
		internal delegate void glGetCompressedTexImage(TextureTarget target, int level, IntPtr img);
		internal delegate void glGetCompressedTexImageARB(TextureTarget target, int level, IntPtr img);
		internal delegate void glGetCompressedTextureImage(uint texture, int level, int bufSize, IntPtr pixels);
		internal delegate void glGetCompressedTextureImageEXT(uint texture, TextureTarget target, int lod, IntPtr img);
		internal delegate void glGetCompressedTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, IntPtr pixels);
		internal delegate void glGetConvolutionFilter(ConvolutionTarget target, PixelFormat format, PixelType type, IntPtr image);
		internal delegate void glGetConvolutionFilterEXT(ConvolutionTargetEXT target, PixelFormat format, PixelType type, IntPtr image);
		internal unsafe delegate void glGetConvolutionParameterfv(ConvolutionTarget target, ConvolutionParameterEXT pname, float* @params);
		internal unsafe delegate void glGetConvolutionParameterfvEXT(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, float* @params);
		internal unsafe delegate void glGetConvolutionParameteriv(ConvolutionTarget target, ConvolutionParameterEXT pname, int* @params);
		internal unsafe delegate void glGetConvolutionParameterivEXT(ConvolutionTargetEXT target, ConvolutionParameterEXT pname, int* @params);
		internal unsafe delegate void glGetConvolutionParameterxvOES(uint target, uint pname, int* @params);
		internal unsafe delegate void glGetCoverageModulationTableNV(int bufSize, float* v);
		internal unsafe delegate uint glGetDebugMessageLog(uint count, int bufSize, DebugSource* sources, DebugType* types, uint* ids, DebugSeverity* severities, int* lengths, sbyte* messageLog);
		internal unsafe delegate uint glGetDebugMessageLogAMD(uint count, int bufSize, uint* categories, uint* severities, uint* ids, int* lengths, sbyte* message);
		internal unsafe delegate uint glGetDebugMessageLogARB(uint count, int bufSize, DebugSource* sources, DebugType* types, uint* ids, DebugSeverity* severities, int* lengths, sbyte* messageLog);
		internal unsafe delegate uint glGetDebugMessageLogKHR(uint count, int bufSize, DebugSource* sources, DebugType* types, uint* ids, DebugSeverity* severities, int* lengths, sbyte* messageLog);
		internal unsafe delegate void glGetDetailTexFuncSGIS(TextureTarget target, float* points);
		internal unsafe delegate void glGetDoublei_v(uint target, uint index, double* data);
		internal unsafe delegate void glGetDoublei_vEXT(uint pname, uint index, double* @params);
		internal unsafe delegate void glGetDoubleIndexedvEXT(uint target, uint index, double* data);
		internal unsafe delegate void glGetDoublev(GetPName pname, double* data);
		internal unsafe delegate void glGetDriverControlsQCOM(int* num, int size, uint* driverControls);
		internal unsafe delegate void glGetDriverControlStringQCOM(uint driverControl, int bufSize, int* length, sbyte* driverControlString);
		internal delegate uint glGetError();
		internal unsafe delegate void glGetFenceivNV(uint fence, FenceParameterNameNV pname, int* @params);
		internal unsafe delegate void glGetFinalCombinerInputParameterfvNV(CombinerVariableNV variable, CombinerParameterNV pname, float* @params);
		internal unsafe delegate void glGetFinalCombinerInputParameterivNV(CombinerVariableNV variable, CombinerParameterNV pname, int* @params);
		internal unsafe delegate void glGetFirstPerfQueryIdINTEL(uint* queryId);
		internal unsafe delegate void glGetFixedv(GetPName pname, int* @params);
		internal unsafe delegate void glGetFixedvOES(GetPName pname, int* @params);
		internal unsafe delegate void glGetFloati_v(uint target, uint index, float* data);
		internal unsafe delegate void glGetFloati_vEXT(uint pname, uint index, float* @params);
		internal unsafe delegate void glGetFloati_vNV(uint target, uint index, float* data);
		internal unsafe delegate void glGetFloati_vOES(uint target, uint index, float* data);
		internal unsafe delegate void glGetFloatIndexedvEXT(uint target, uint index, float* data);
		internal unsafe delegate void glGetFloatv(GetPName pname, float* data);
		internal unsafe delegate void glGetFogFuncSGIS(float* points);
		internal unsafe delegate int glGetFragDataIndex(uint program, sbyte* name);
		internal unsafe delegate int glGetFragDataIndexEXT(uint program, sbyte* name);
		internal unsafe delegate int glGetFragDataLocation(uint program, sbyte* name);
		internal unsafe delegate int glGetFragDataLocationEXT(uint program, sbyte* name);
		internal unsafe delegate void glGetFragmentLightfvSGIX(FragmentLightNameSGIX light, FragmentLightParameterSGIX pname, float* @params);
		internal unsafe delegate void glGetFragmentLightivSGIX(FragmentLightNameSGIX light, FragmentLightParameterSGIX pname, int* @params);
		internal unsafe delegate void glGetFragmentMaterialfvSGIX(MaterialFace face, MaterialParameter pname, float* @params);
		internal unsafe delegate void glGetFragmentMaterialivSGIX(MaterialFace face, MaterialParameter pname, int* @params);
		internal unsafe delegate void glGetFramebufferAttachmentParameteriv(FramebufferTarget target, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferAttachmentParameterivEXT(FramebufferTarget target, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferAttachmentParameterivOES(FramebufferTarget target, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferParameterfvAMD(FramebufferTarget target, FramebufferAttachmentParameterName pname, uint numsamples, uint pixelindex, int size, float* values);
		internal unsafe delegate void glGetFramebufferParameteriv(FramebufferTarget target, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetFramebufferParameterivEXT(uint framebuffer, GetFramebufferParameter pname, int* @params);
		internal unsafe delegate void glGetFramebufferParameterivMESA(FramebufferTarget target, FramebufferAttachmentParameterName pname, int* @params);
		internal delegate int glGetFramebufferPixelLocalStorageSizeEXT(uint target);
		internal delegate uint glGetGraphicsResetStatus();
		internal delegate uint glGetGraphicsResetStatusARB();
		internal delegate uint glGetGraphicsResetStatusEXT();
		internal delegate uint glGetGraphicsResetStatusKHR();
		internal delegate uint glGetHandleARB(uint pname);
		internal delegate void glGetHistogram(HistogramTargetEXT target, bool reset, PixelFormat format, PixelType type, IntPtr values);
		internal delegate void glGetHistogramEXT(HistogramTargetEXT target, bool reset, PixelFormat format, PixelType type, IntPtr values);
		internal unsafe delegate void glGetHistogramParameterfv(HistogramTargetEXT target, GetHistogramParameterPNameEXT pname, float* @params);
		internal unsafe delegate void glGetHistogramParameterfvEXT(HistogramTargetEXT target, GetHistogramParameterPNameEXT pname, float* @params);
		internal unsafe delegate void glGetHistogramParameteriv(HistogramTargetEXT target, GetHistogramParameterPNameEXT pname, int* @params);
		internal unsafe delegate void glGetHistogramParameterivEXT(HistogramTargetEXT target, GetHistogramParameterPNameEXT pname, int* @params);
		internal unsafe delegate void glGetHistogramParameterxvOES(HistogramTargetEXT target, GetHistogramParameterPNameEXT pname, int* @params);
		internal delegate ulong glGetImageHandleARB(uint texture, int level, bool layered, int layer, PixelFormat format);
		internal delegate ulong glGetImageHandleNV(uint texture, int level, bool layered, int layer, PixelFormat format);
		internal unsafe delegate void glGetImageTransformParameterfvHP(ImageTransformTargetHP target, ImageTransformPNameHP pname, float* @params);
		internal unsafe delegate void glGetImageTransformParameterivHP(ImageTransformTargetHP target, ImageTransformPNameHP pname, int* @params);
		internal unsafe delegate void glGetInfoLogARB(uint obj, int maxLength, int* length, sbyte* infoLog);
		internal delegate int glGetInstrumentsSGIX();
		internal unsafe delegate void glGetInteger64i_v(uint target, uint index, long* data);
		internal unsafe delegate void glGetInteger64v(GetPName pname, long* data);
		internal unsafe delegate void glGetInteger64vAPPLE(GetPName pname, long* @params);
		internal unsafe delegate void glGetInteger64vEXT(GetPName pname, long* data);
		internal unsafe delegate void glGetIntegeri_v(uint target, uint index, int* data);
		internal unsafe delegate void glGetIntegeri_vEXT(uint target, uint index, int* data);
		internal unsafe delegate void glGetIntegerIndexedvEXT(uint target, uint index, int* data);
		internal unsafe delegate void glGetIntegerui64i_vNV(uint value, uint index, ulong* result);
		internal unsafe delegate void glGetIntegerui64vNV(uint value, ulong* result);
		internal unsafe delegate void glGetIntegerv(GetPName pname, int* data);
		internal unsafe delegate void glGetInternalformati64v(TextureTarget target, InternalFormat internalformat, InternalFormatPName pname, int count, long* @params);
		internal unsafe delegate void glGetInternalformativ(TextureTarget target, InternalFormat internalformat, InternalFormatPName pname, int count, int* @params);
		internal unsafe delegate void glGetInternalformatSampleivNV(TextureTarget target, InternalFormat internalformat, int samples, InternalFormatPName pname, int count, int* @params);
		internal unsafe delegate void glGetInvariantBooleanvEXT(uint id, GetVariantValueEXT value, bool* data);
		internal unsafe delegate void glGetInvariantFloatvEXT(uint id, GetVariantValueEXT value, float* data);
		internal unsafe delegate void glGetInvariantIntegervEXT(uint id, GetVariantValueEXT value, int* data);
		internal unsafe delegate void glGetLightfv(LightName light, LightParameter pname, float* @params);
		internal unsafe delegate void glGetLightiv(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetLightxOES(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetLightxv(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetLightxvOES(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glGetListParameterfvSGIX(uint list, ListParameterName pname, float* @params);
		internal unsafe delegate void glGetListParameterivSGIX(uint list, ListParameterName pname, int* @params);
		internal unsafe delegate void glGetLocalConstantBooleanvEXT(uint id, GetVariantValueEXT value, bool* data);
		internal unsafe delegate void glGetLocalConstantFloatvEXT(uint id, GetVariantValueEXT value, float* data);
		internal unsafe delegate void glGetLocalConstantIntegervEXT(uint id, GetVariantValueEXT value, int* data);
		internal unsafe delegate void glGetMapAttribParameterfvNV(EvalTargetNV target, uint index, MapAttribParameterNV pname, float* @params);
		internal unsafe delegate void glGetMapAttribParameterivNV(EvalTargetNV target, uint index, MapAttribParameterNV pname, int* @params);
		internal delegate void glGetMapControlPointsNV(EvalTargetNV target, uint index, MapTypeNV type, int ustride, int vstride, bool packed, IntPtr points);
		internal unsafe delegate void glGetMapdv(MapTarget target, GetMapQuery query, double* v);
		internal unsafe delegate void glGetMapfv(MapTarget target, GetMapQuery query, float* v);
		internal unsafe delegate void glGetMapiv(MapTarget target, GetMapQuery query, int* v);
		internal unsafe delegate void glGetMapParameterfvNV(EvalTargetNV target, MapParameterNV pname, float* @params);
		internal unsafe delegate void glGetMapParameterivNV(EvalTargetNV target, MapParameterNV pname, int* @params);
		internal unsafe delegate void glGetMapxvOES(MapTarget target, GetMapQuery query, int* v);
		internal unsafe delegate void glGetMaterialfv(MaterialFace face, MaterialParameter pname, float* @params);
		internal unsafe delegate void glGetMaterialiv(MaterialFace face, MaterialParameter pname, int* @params);
		internal delegate void glGetMaterialxOES(MaterialFace face, MaterialParameter pname, int param);
		internal unsafe delegate void glGetMaterialxv(MaterialFace face, MaterialParameter pname, int* @params);
		internal unsafe delegate void glGetMaterialxvOES(MaterialFace face, MaterialParameter pname, int* @params);
		internal unsafe delegate void glGetMemoryObjectDetachedResourcesuivNV(uint memory, uint pname, int first, int count, uint* @params);
		internal unsafe delegate void glGetMemoryObjectParameterivEXT(uint memoryObject, MemoryObjectParameterName pname, int* @params);
		internal delegate void glGetMinmax(MinmaxTargetEXT target, bool reset, PixelFormat format, PixelType type, IntPtr values);
		internal delegate void glGetMinmaxEXT(MinmaxTargetEXT target, bool reset, PixelFormat format, PixelType type, IntPtr values);
		internal unsafe delegate void glGetMinmaxParameterfv(MinmaxTargetEXT target, GetMinmaxParameterPNameEXT pname, float* @params);
		internal unsafe delegate void glGetMinmaxParameterfvEXT(MinmaxTargetEXT target, GetMinmaxParameterPNameEXT pname, float* @params);
		internal unsafe delegate void glGetMinmaxParameteriv(MinmaxTargetEXT target, GetMinmaxParameterPNameEXT pname, int* @params);
		internal unsafe delegate void glGetMinmaxParameterivEXT(MinmaxTargetEXT target, GetMinmaxParameterPNameEXT pname, int* @params);
		internal unsafe delegate void glGetMultisamplefv(GetMultisamplePNameNV pname, uint index, float* val);
		internal unsafe delegate void glGetMultisamplefvNV(GetMultisamplePNameNV pname, uint index, float* val);
		internal unsafe delegate void glGetMultiTexEnvfvEXT(TextureUnit texunit, TextureEnvTarget target, TextureEnvParameter pname, float* @params);
		internal unsafe delegate void glGetMultiTexEnvivEXT(TextureUnit texunit, TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetMultiTexGendvEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, double* @params);
		internal unsafe delegate void glGetMultiTexGenfvEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal unsafe delegate void glGetMultiTexGenivEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glGetMultiTexImageEXT(TextureUnit texunit, TextureTarget target, int level, PixelFormat format, PixelType type, IntPtr pixels);
		internal unsafe delegate void glGetMultiTexLevelParameterfvEXT(TextureUnit texunit, TextureTarget target, int level, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetMultiTexLevelParameterivEXT(TextureUnit texunit, TextureTarget target, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetMultiTexParameterfvEXT(TextureUnit texunit, TextureTarget target, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetMultiTexParameterIivEXT(TextureUnit texunit, TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetMultiTexParameterIuivEXT(TextureUnit texunit, TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetMultiTexParameterivEXT(TextureUnit texunit, TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetNamedBufferParameteri64v(uint buffer, BufferPNameARB pname, long* @params);
		internal unsafe delegate void glGetNamedBufferParameteriv(uint buffer, BufferPNameARB pname, int* @params);
		internal unsafe delegate void glGetNamedBufferParameterivEXT(uint buffer, BufferPNameARB pname, int* @params);
		internal unsafe delegate void glGetNamedBufferParameterui64vNV(uint buffer, BufferPNameARB pname, ulong* @params);
		internal delegate void glGetNamedBufferPointerv(uint buffer, BufferPointerNameARB pname, IntPtr @params);
		internal delegate void glGetNamedBufferPointervEXT(uint buffer, BufferPointerNameARB pname, IntPtr @params);
		internal delegate void glGetNamedBufferSubData(uint buffer, IntPtr offset, int size, IntPtr data);
		internal delegate void glGetNamedBufferSubDataEXT(uint buffer, IntPtr offset, int size, IntPtr data);
		internal unsafe delegate void glGetNamedFramebufferAttachmentParameteriv(uint framebuffer, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetNamedFramebufferAttachmentParameterivEXT(uint framebuffer, FramebufferAttachment attachment, FramebufferAttachmentParameterName pname, int* @params);
		internal unsafe delegate void glGetNamedFramebufferParameterfvAMD(uint framebuffer, uint pname, uint numsamples, uint pixelindex, int size, float* values);
		internal unsafe delegate void glGetNamedFramebufferParameteriv(uint framebuffer, GetFramebufferParameter pname, int* param);
		internal unsafe delegate void glGetNamedFramebufferParameterivEXT(uint framebuffer, GetFramebufferParameter pname, int* @params);
		internal unsafe delegate void glGetNamedProgramivEXT(uint program, ProgramTarget target, ProgramPropertyARB pname, int* @params);
		internal unsafe delegate void glGetNamedProgramLocalParameterdvEXT(uint program, ProgramTarget target, uint index, double* @params);
		internal unsafe delegate void glGetNamedProgramLocalParameterfvEXT(uint program, ProgramTarget target, uint index, float* @params);
		internal unsafe delegate void glGetNamedProgramLocalParameterIivEXT(uint program, ProgramTarget target, uint index, int* @params);
		internal unsafe delegate void glGetNamedProgramLocalParameterIuivEXT(uint program, ProgramTarget target, uint index, uint* @params);
		internal delegate void glGetNamedProgramStringEXT(uint program, ProgramTarget target, ProgramStringProperty pname, IntPtr @string);
		internal unsafe delegate void glGetNamedRenderbufferParameteriv(uint renderbuffer, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetNamedRenderbufferParameterivEXT(uint renderbuffer, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetNamedStringARB(int namelen, sbyte* name, int bufSize, int* stringlen, sbyte* @string);
		internal unsafe delegate void glGetNamedStringivARB(int namelen, sbyte* name, uint pname, int* @params);
		internal delegate void glGetnColorTable(ColorTableTarget target, PixelFormat format, PixelType type, int bufSize, IntPtr table);
		internal delegate void glGetnColorTableARB(ColorTableTarget target, PixelFormat format, PixelType type, int bufSize, IntPtr table);
		internal delegate void glGetnCompressedTexImage(TextureTarget target, int lod, int bufSize, IntPtr pixels);
		internal delegate void glGetnCompressedTexImageARB(TextureTarget target, int lod, int bufSize, IntPtr img);
		internal delegate void glGetnConvolutionFilter(ConvolutionTarget target, PixelFormat format, PixelType type, int bufSize, IntPtr image);
		internal delegate void glGetnConvolutionFilterARB(ConvolutionTarget target, PixelFormat format, PixelType type, int bufSize, IntPtr image);
		internal unsafe delegate void glGetNextPerfQueryIdINTEL(uint queryId, uint* nextQueryId);
		internal delegate void glGetnHistogram(HistogramTargetEXT target, bool reset, PixelFormat format, PixelType type, int bufSize, IntPtr values);
		internal delegate void glGetnHistogramARB(HistogramTargetEXT target, bool reset, PixelFormat format, PixelType type, int bufSize, IntPtr values);
		internal unsafe delegate void glGetnMapdv(MapTarget target, MapQuery query, int bufSize, double* v);
		internal unsafe delegate void glGetnMapdvARB(MapTarget target, MapQuery query, int bufSize, double* v);
		internal unsafe delegate void glGetnMapfv(MapTarget target, MapQuery query, int bufSize, float* v);
		internal unsafe delegate void glGetnMapfvARB(MapTarget target, MapQuery query, int bufSize, float* v);
		internal unsafe delegate void glGetnMapiv(MapTarget target, MapQuery query, int bufSize, int* v);
		internal unsafe delegate void glGetnMapivARB(MapTarget target, MapQuery query, int bufSize, int* v);
		internal delegate void glGetnMinmax(MinmaxTargetEXT target, bool reset, PixelFormat format, PixelType type, int bufSize, IntPtr values);
		internal delegate void glGetnMinmaxARB(MinmaxTargetEXT target, bool reset, PixelFormat format, PixelType type, int bufSize, IntPtr values);
		internal unsafe delegate void glGetnPixelMapfv(PixelMap map, int bufSize, float* values);
		internal unsafe delegate void glGetnPixelMapfvARB(PixelMap map, int bufSize, float* values);
		internal unsafe delegate void glGetnPixelMapuiv(PixelMap map, int bufSize, uint* values);
		internal unsafe delegate void glGetnPixelMapuivARB(PixelMap map, int bufSize, uint* values);
		internal unsafe delegate void glGetnPixelMapusv(PixelMap map, int bufSize, ushort* values);
		internal unsafe delegate void glGetnPixelMapusvARB(PixelMap map, int bufSize, ushort* values);
		internal unsafe delegate void glGetnPolygonStipple(int bufSize, byte* pattern);
		internal unsafe delegate void glGetnPolygonStippleARB(int bufSize, byte* pattern);
		internal delegate void glGetnSeparableFilter(SeparableTargetEXT target, PixelFormat format, PixelType type, int rowBufSize, IntPtr row, int columnBufSize, IntPtr column, IntPtr span);
		internal delegate void glGetnSeparableFilterARB(SeparableTargetEXT target, PixelFormat format, PixelType type, int rowBufSize, IntPtr row, int columnBufSize, IntPtr column, IntPtr span);
		internal delegate void glGetnTexImage(TextureTarget target, int level, PixelFormat format, PixelType type, int bufSize, IntPtr pixels);
		internal delegate void glGetnTexImageARB(TextureTarget target, int level, PixelFormat format, PixelType type, int bufSize, IntPtr img);
		internal unsafe delegate void glGetnUniformdv(uint program, int location, int bufSize, double* @params);
		internal unsafe delegate void glGetnUniformdvARB(uint program, int location, int bufSize, double* @params);
		internal unsafe delegate void glGetnUniformfv(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformfvARB(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformfvEXT(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformfvKHR(uint program, int location, int bufSize, float* @params);
		internal unsafe delegate void glGetnUniformi64vARB(uint program, int location, int bufSize, long* @params);
		internal unsafe delegate void glGetnUniformiv(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformivARB(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformivEXT(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformivKHR(uint program, int location, int bufSize, int* @params);
		internal unsafe delegate void glGetnUniformui64vARB(uint program, int location, int bufSize, ulong* @params);
		internal unsafe delegate void glGetnUniformuiv(uint program, int location, int bufSize, uint* @params);
		internal unsafe delegate void glGetnUniformuivARB(uint program, int location, int bufSize, uint* @params);
		internal unsafe delegate void glGetnUniformuivKHR(uint program, int location, int bufSize, uint* @params);
		internal unsafe delegate void glGetObjectBufferfvATI(uint buffer, ArrayObjectPNameATI pname, float* @params);
		internal unsafe delegate void glGetObjectBufferivATI(uint buffer, ArrayObjectPNameATI pname, int* @params);
		internal unsafe delegate void glGetObjectLabel(ObjectIdentifier identifier, uint name, int bufSize, int* length, sbyte* label);
		internal unsafe delegate void glGetObjectLabelEXT(uint type, uint @object, int bufSize, int* length, sbyte* label);
		internal unsafe delegate void glGetObjectLabelKHR(uint identifier, uint name, int bufSize, int* length, sbyte* label);
		internal unsafe delegate void glGetObjectParameterfvARB(uint obj, uint pname, float* @params);
		internal unsafe delegate void glGetObjectParameterivAPPLE(uint objectType, uint name, uint pname, int* @params);
		internal unsafe delegate void glGetObjectParameterivARB(uint obj, uint pname, int* @params);
		internal unsafe delegate void glGetObjectPtrLabel(IntPtr ptr, int bufSize, int* length, sbyte* label);
		internal unsafe delegate void glGetObjectPtrLabelKHR(IntPtr ptr, int bufSize, int* length, sbyte* label);
		internal unsafe delegate void glGetOcclusionQueryivNV(uint id, OcclusionQueryParameterNameNV pname, int* @params);
		internal unsafe delegate void glGetOcclusionQueryuivNV(uint id, OcclusionQueryParameterNameNV pname, uint* @params);
		internal unsafe delegate void glGetPathColorGenfvNV(PathColor color, PathGenMode pname, float* value);
		internal unsafe delegate void glGetPathColorGenivNV(PathColor color, PathGenMode pname, int* value);
		internal unsafe delegate void glGetPathCommandsNV(uint path, byte* commands);
		internal unsafe delegate void glGetPathCoordsNV(uint path, float* coords);
		internal unsafe delegate void glGetPathDashArrayNV(uint path, float* dashArray);
		internal delegate float glGetPathLengthNV(uint path, int startSegment, int numSegments);
		internal unsafe delegate void glGetPathMetricRangeNV(uint metricQueryMask, uint firstPathName, int numPaths, int stride, float* metrics);
		internal unsafe delegate void glGetPathMetricsNV(uint metricQueryMask, int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, int stride, float* metrics);
		internal unsafe delegate void glGetPathParameterfvNV(uint path, PathParameter pname, float* value);
		internal unsafe delegate void glGetPathParameterivNV(uint path, PathParameter pname, int* value);
		internal unsafe delegate void glGetPathSpacingNV(PathListMode pathListMode, int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, float advanceScale, float kerningScale, PathTransformType transformType, float* returnedSpacing);
		internal unsafe delegate void glGetPathTexGenfvNV(TextureUnit texCoordSet, PathGenMode pname, float* value);
		internal unsafe delegate void glGetPathTexGenivNV(TextureUnit texCoordSet, PathGenMode pname, int* value);
		internal unsafe delegate void glGetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, sbyte* counterName, uint counterDescLength, sbyte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue);
		internal unsafe delegate void glGetPerfMonitorCounterDataAMD(uint monitor, uint pname, int dataSize, uint* data, int* bytesWritten);
		internal delegate void glGetPerfMonitorCounterInfoAMD(uint group, uint counter, uint pname, IntPtr data);
		internal unsafe delegate void glGetPerfMonitorCountersAMD(uint group, int* numCounters, int* maxActiveCounters, int counterSize, uint* counters);
		internal unsafe delegate void glGetPerfMonitorCounterStringAMD(uint group, uint counter, int bufSize, int* length, sbyte* counterString);
		internal unsafe delegate void glGetPerfMonitorGroupsAMD(int* numGroups, int groupsSize, uint* groups);
		internal unsafe delegate void glGetPerfMonitorGroupStringAMD(uint group, int bufSize, int* length, sbyte* groupString);
		internal unsafe delegate void glGetPerfQueryDataINTEL(uint queryHandle, uint flags, int dataSize, IntPtr data, uint* bytesWritten);
		internal unsafe delegate void glGetPerfQueryIdByNameINTEL(sbyte* queryName, uint* queryId);
		internal unsafe delegate void glGetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, sbyte* queryName, uint* dataSize, uint* noCounters, uint* noInstances, uint* capsMask);
		internal unsafe delegate void glGetPixelMapfv(PixelMap map, float* values);
		internal unsafe delegate void glGetPixelMapuiv(PixelMap map, uint* values);
		internal unsafe delegate void glGetPixelMapusv(PixelMap map, ushort* values);
		internal unsafe delegate void glGetPixelMapxv(PixelMap map, int size, int* values);
		internal unsafe delegate void glGetPixelTexGenParameterfvSGIS(PixelTexGenParameterNameSGIS pname, float* @params);
		internal unsafe delegate void glGetPixelTexGenParameterivSGIS(PixelTexGenParameterNameSGIS pname, int* @params);
		internal unsafe delegate void glGetPixelTransformParameterfvEXT(uint target, uint pname, float* @params);
		internal unsafe delegate void glGetPixelTransformParameterivEXT(uint target, uint pname, int* @params);
		internal delegate void glGetPointeri_vEXT(uint pname, uint index, IntPtr @params);
		internal delegate void glGetPointerIndexedvEXT(uint target, uint index, IntPtr data);
		internal delegate void glGetPointerv(GetPointervPName pname, IntPtr @params);
		internal delegate void glGetPointervEXT(GetPointervPName pname, IntPtr @params);
		internal delegate void glGetPointervKHR(uint pname, IntPtr @params);
		internal unsafe delegate void glGetPolygonStipple(byte* mask);
		internal unsafe delegate void glGetProgramBinary(uint program, int bufSize, int* length, uint* binaryFormat, IntPtr binary);
		internal unsafe delegate void glGetProgramBinaryOES(uint program, int bufSize, int* length, uint* binaryFormat, IntPtr binary);
		internal unsafe delegate void glGetProgramEnvParameterdvARB(ProgramTarget target, uint index, double* @params);
		internal unsafe delegate void glGetProgramEnvParameterfvARB(ProgramTarget target, uint index, float* @params);
		internal unsafe delegate void glGetProgramEnvParameterIivNV(ProgramTarget target, uint index, int* @params);
		internal unsafe delegate void glGetProgramEnvParameterIuivNV(ProgramTarget target, uint index, uint* @params);
		internal unsafe delegate void glGetProgramInfoLog(uint program, int bufSize, int* length, sbyte* infoLog);
		internal unsafe delegate void glGetProgramInterfaceiv(uint program, ProgramInterface programInterface, ProgramInterfacePName pname, int* @params);
		internal unsafe delegate void glGetProgramiv(uint program, ProgramPropertyARB pname, int* @params);
		internal unsafe delegate void glGetProgramivARB(ProgramTarget target, ProgramPropertyARB pname, int* @params);
		internal unsafe delegate void glGetProgramivNV(uint id, VertexAttribEnumNV pname, int* @params);
		internal unsafe delegate void glGetProgramLocalParameterdvARB(ProgramTarget target, uint index, double* @params);
		internal unsafe delegate void glGetProgramLocalParameterfvARB(ProgramTarget target, uint index, float* @params);
		internal unsafe delegate void glGetProgramLocalParameterIivNV(ProgramTarget target, uint index, int* @params);
		internal unsafe delegate void glGetProgramLocalParameterIuivNV(ProgramTarget target, uint index, uint* @params);
		internal unsafe delegate void glGetProgramNamedParameterdvNV(uint id, int len, byte* name, double* @params);
		internal unsafe delegate void glGetProgramNamedParameterfvNV(uint id, int len, byte* name, float* @params);
		internal unsafe delegate void glGetProgramParameterdvNV(VertexAttribEnumNV target, uint index, VertexAttribEnumNV pname, double* @params);
		internal unsafe delegate void glGetProgramParameterfvNV(VertexAttribEnumNV target, uint index, VertexAttribEnumNV pname, float* @params);
		internal unsafe delegate void glGetProgramPipelineInfoLog(uint pipeline, int bufSize, int* length, sbyte* infoLog);
		internal unsafe delegate void glGetProgramPipelineInfoLogEXT(uint pipeline, int bufSize, int* length, sbyte* infoLog);
		internal unsafe delegate void glGetProgramPipelineiv(uint pipeline, PipelineParameterName pname, int* @params);
		internal unsafe delegate void glGetProgramPipelineivEXT(uint pipeline, PipelineParameterName pname, int* @params);
		internal unsafe delegate void glGetProgramResourcefvNV(uint program, ProgramInterface programInterface, uint index, int propCount, uint* props, int count, int* length, float* @params);
		internal unsafe delegate uint glGetProgramResourceIndex(uint program, ProgramInterface programInterface, sbyte* name);
		internal unsafe delegate void glGetProgramResourceiv(uint program, ProgramInterface programInterface, uint index, int propCount, ProgramResourceProperty* props, int count, int* length, int* @params);
		internal unsafe delegate int glGetProgramResourceLocation(uint program, ProgramInterface programInterface, sbyte* name);
		internal unsafe delegate int glGetProgramResourceLocationIndex(uint program, ProgramInterface programInterface, sbyte* name);
		internal unsafe delegate int glGetProgramResourceLocationIndexEXT(uint program, ProgramInterface programInterface, sbyte* name);
		internal unsafe delegate void glGetProgramResourceName(uint program, ProgramInterface programInterface, uint index, int bufSize, int* length, sbyte* name);
		internal unsafe delegate void glGetProgramStageiv(uint program, ShaderType shadertype, ProgramStagePName pname, int* values);
		internal delegate void glGetProgramStringARB(ProgramTarget target, ProgramStringProperty pname, IntPtr @string);
		internal unsafe delegate void glGetProgramStringNV(uint id, VertexAttribEnumNV pname, byte* program);
		internal unsafe delegate void glGetProgramSubroutineParameteruivNV(uint target, uint index, uint* param);
		internal delegate void glGetQueryBufferObjecti64v(uint id, uint buffer, QueryObjectParameterName pname, IntPtr offset);
		internal delegate void glGetQueryBufferObjectiv(uint id, uint buffer, QueryObjectParameterName pname, IntPtr offset);
		internal delegate void glGetQueryBufferObjectui64v(uint id, uint buffer, QueryObjectParameterName pname, IntPtr offset);
		internal delegate void glGetQueryBufferObjectuiv(uint id, uint buffer, QueryObjectParameterName pname, IntPtr offset);
		internal unsafe delegate void glGetQueryIndexediv(QueryTarget target, uint index, QueryParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryiv(QueryTarget target, QueryParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryivARB(QueryTarget target, QueryParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryivEXT(QueryTarget target, QueryParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryObjecti64v(uint id, QueryObjectParameterName pname, long* @params);
		internal unsafe delegate void glGetQueryObjecti64vEXT(uint id, QueryObjectParameterName pname, long* @params);
		internal unsafe delegate void glGetQueryObjectiv(uint id, QueryObjectParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryObjectivARB(uint id, QueryObjectParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryObjectivEXT(uint id, QueryObjectParameterName pname, int* @params);
		internal unsafe delegate void glGetQueryObjectui64v(uint id, QueryObjectParameterName pname, ulong* @params);
		internal unsafe delegate void glGetQueryObjectui64vEXT(uint id, QueryObjectParameterName pname, ulong* @params);
		internal unsafe delegate void glGetQueryObjectuiv(uint id, QueryObjectParameterName pname, uint* @params);
		internal unsafe delegate void glGetQueryObjectuivARB(uint id, QueryObjectParameterName pname, uint* @params);
		internal unsafe delegate void glGetQueryObjectuivEXT(uint id, QueryObjectParameterName pname, uint* @params);
		internal unsafe delegate void glGetRenderbufferParameteriv(RenderbufferTarget target, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetRenderbufferParameterivEXT(RenderbufferTarget target, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetRenderbufferParameterivOES(RenderbufferTarget target, RenderbufferParameterName pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterfv(uint sampler, SamplerParameterF pname, float* @params);
		internal unsafe delegate void glGetSamplerParameterIiv(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterIivEXT(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterIivOES(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSamplerParameterIuiv(uint sampler, SamplerParameterI pname, uint* @params);
		internal unsafe delegate void glGetSamplerParameterIuivEXT(uint sampler, SamplerParameterI pname, uint* @params);
		internal unsafe delegate void glGetSamplerParameterIuivOES(uint sampler, SamplerParameterI pname, uint* @params);
		internal unsafe delegate void glGetSamplerParameteriv(uint sampler, SamplerParameterI pname, int* @params);
		internal unsafe delegate void glGetSemaphoreParameterui64vEXT(uint semaphore, SemaphoreParameterName pname, ulong* @params);
		internal delegate void glGetSeparableFilter(SeparableTargetEXT target, PixelFormat format, PixelType type, IntPtr row, IntPtr column, IntPtr span);
		internal delegate void glGetSeparableFilterEXT(SeparableTargetEXT target, PixelFormat format, PixelType type, IntPtr row, IntPtr column, IntPtr span);
		internal unsafe delegate void glGetShaderInfoLog(uint shader, int bufSize, int* length, sbyte* infoLog);
		internal unsafe delegate void glGetShaderiv(uint shader, ShaderParameterName pname, int* @params);
		internal unsafe delegate void glGetShaderPrecisionFormat(ShaderType shadertype, PrecisionType precisiontype, int* range, int* precision);
		internal unsafe delegate void glGetShaderSource(uint shader, int bufSize, int* length, sbyte* source);
		internal unsafe delegate void glGetShaderSourceARB(uint obj, int maxLength, int* length, sbyte* source);
		internal unsafe delegate void glGetShadingRateImagePaletteNV(uint viewport, uint entry, uint* rate);
		internal unsafe delegate void glGetShadingRateSampleLocationivNV(uint rate, uint samples, uint index, int* location);
		internal unsafe delegate void glGetSharpenTexFuncSGIS(TextureTarget target, float* points);
		internal delegate ushort glGetStageIndexNV(ShaderType shadertype);
		internal delegate byte glGetString(StringName name);
		internal delegate byte glGetStringi(StringName name, uint index);
		internal unsafe delegate uint glGetSubroutineIndex(uint program, ShaderType shadertype, sbyte* name);
		internal unsafe delegate int glGetSubroutineUniformLocation(uint program, ShaderType shadertype, sbyte* name);
		internal unsafe delegate void glGetSynciv(IntPtr sync, SyncParameterName pname, int count, int* length, int* values);
		internal unsafe delegate void glGetSyncivAPPLE(IntPtr sync, SyncParameterName pname, int count, int* length, int* values);
		internal unsafe delegate void glGetTexBumpParameterfvATI(GetTexBumpParameterATI pname, float* param);
		internal unsafe delegate void glGetTexBumpParameterivATI(GetTexBumpParameterATI pname, int* param);
		internal unsafe delegate void glGetTexEnvfv(TextureEnvTarget target, TextureEnvParameter pname, float* @params);
		internal unsafe delegate void glGetTexEnviv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetTexEnvxv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetTexEnvxvOES(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glGetTexFilterFuncSGIS(TextureTarget target, TextureFilterSGIS filter, float* weights);
		internal unsafe delegate void glGetTexGendv(TextureCoordName coord, TextureGenParameter pname, double* @params);
		internal unsafe delegate void glGetTexGenfv(TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal unsafe delegate void glGetTexGenfvOES(TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal unsafe delegate void glGetTexGeniv(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal unsafe delegate void glGetTexGenivOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal unsafe delegate void glGetTexGenxvOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glGetTexImage(TextureTarget target, int level, PixelFormat format, PixelType type, IntPtr pixels);
		internal unsafe delegate void glGetTexLevelParameterfv(TextureTarget target, int level, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTexLevelParameteriv(TextureTarget target, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexLevelParameterxvOES(TextureTarget target, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterfv(TextureTarget target, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTexParameterIiv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterIivEXT(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterIivOES(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterIuiv(TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTexParameterIuivEXT(TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTexParameterIuivOES(TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTexParameteriv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal delegate void glGetTexParameterPointervAPPLE(uint target, uint pname, IntPtr @params);
		internal unsafe delegate void glGetTexParameterxv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTexParameterxvOES(TextureTarget target, GetTextureParameter pname, int* @params);
		internal delegate ulong glGetTextureHandleARB(uint texture);
		internal delegate ulong glGetTextureHandleIMG(uint texture);
		internal delegate ulong glGetTextureHandleNV(uint texture);
		internal delegate void glGetTextureImage(uint texture, int level, PixelFormat format, PixelType type, int bufSize, IntPtr pixels);
		internal delegate void glGetTextureImageEXT(uint texture, TextureTarget target, int level, PixelFormat format, PixelType type, IntPtr pixels);
		internal unsafe delegate void glGetTextureLevelParameterfv(uint texture, int level, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTextureLevelParameterfvEXT(uint texture, TextureTarget target, int level, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTextureLevelParameteriv(uint texture, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTextureLevelParameterivEXT(uint texture, TextureTarget target, int level, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTextureParameterfv(uint texture, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTextureParameterfvEXT(uint texture, TextureTarget target, GetTextureParameter pname, float* @params);
		internal unsafe delegate void glGetTextureParameterIiv(uint texture, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTextureParameterIivEXT(uint texture, TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTextureParameterIuiv(uint texture, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTextureParameterIuivEXT(uint texture, TextureTarget target, GetTextureParameter pname, uint* @params);
		internal unsafe delegate void glGetTextureParameteriv(uint texture, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glGetTextureParameterivEXT(uint texture, TextureTarget target, GetTextureParameter pname, int* @params);
		internal delegate ulong glGetTextureSamplerHandleARB(uint texture, uint sampler);
		internal delegate ulong glGetTextureSamplerHandleIMG(uint texture, uint sampler);
		internal delegate ulong glGetTextureSamplerHandleNV(uint texture, uint sampler);
		internal delegate void glGetTextureSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, int bufSize, IntPtr pixels);
		internal unsafe delegate void glGetTrackMatrixivNV(VertexAttribEnumNV target, uint address, VertexAttribEnumNV pname, int* @params);
		internal unsafe delegate void glGetTransformFeedbacki_v(uint xfb, TransformFeedbackPName pname, uint index, int* param);
		internal unsafe delegate void glGetTransformFeedbacki64_v(uint xfb, TransformFeedbackPName pname, uint index, long* param);
		internal unsafe delegate void glGetTransformFeedbackiv(uint xfb, TransformFeedbackPName pname, int* param);
		internal unsafe delegate void glGetTransformFeedbackVarying(uint program, uint index, int bufSize, int* length, int* size, AttributeType* type, sbyte* name);
		internal unsafe delegate void glGetTransformFeedbackVaryingEXT(uint program, uint index, int bufSize, int* length, int* size, AttributeType* type, sbyte* name);
		internal unsafe delegate void glGetTransformFeedbackVaryingNV(uint program, uint index, int* location);
		internal unsafe delegate void glGetTranslatedShaderSourceANGLE(uint shader, int bufSize, int* length, sbyte* source);
		internal unsafe delegate uint glGetUniformBlockIndex(uint program, sbyte* uniformBlockName);
		internal delegate int glGetUniformBufferSizeEXT(uint program, int location);
		internal unsafe delegate void glGetUniformdv(uint program, int location, double* @params);
		internal unsafe delegate void glGetUniformfv(uint program, int location, float* @params);
		internal unsafe delegate void glGetUniformfvARB(uint programObj, int location, float* @params);
		internal unsafe delegate void glGetUniformi64vARB(uint program, int location, long* @params);
		internal unsafe delegate void glGetUniformi64vNV(uint program, int location, long* @params);
		internal unsafe delegate void glGetUniformIndices(uint program, int uniformCount, sbyte* uniformNames, uint* uniformIndices);
		internal unsafe delegate void glGetUniformiv(uint program, int location, int* @params);
		internal unsafe delegate void glGetUniformivARB(uint programObj, int location, int* @params);
		internal unsafe delegate int glGetUniformLocation(uint program, sbyte* name);
		internal unsafe delegate int glGetUniformLocationARB(uint programObj, sbyte* name);
		internal delegate IntPtr glGetUniformOffsetEXT(uint program, int location);
		internal unsafe delegate void glGetUniformSubroutineuiv(ShaderType shadertype, int location, uint* @params);
		internal unsafe delegate void glGetUniformui64vARB(uint program, int location, ulong* @params);
		internal unsafe delegate void glGetUniformui64vNV(uint program, int location, ulong* @params);
		internal unsafe delegate void glGetUniformuiv(uint program, int location, uint* @params);
		internal unsafe delegate void glGetUniformuivEXT(uint program, int location, uint* @params);
		internal unsafe delegate void glGetUnsignedBytei_vEXT(uint target, uint index, byte* data);
		internal unsafe delegate void glGetUnsignedBytevEXT(GetPName pname, byte* data);
		internal unsafe delegate void glGetVariantArrayObjectfvATI(uint id, ArrayObjectPNameATI pname, float* @params);
		internal unsafe delegate void glGetVariantArrayObjectivATI(uint id, ArrayObjectPNameATI pname, int* @params);
		internal unsafe delegate void glGetVariantBooleanvEXT(uint id, GetVariantValueEXT value, bool* data);
		internal unsafe delegate void glGetVariantFloatvEXT(uint id, GetVariantValueEXT value, float* data);
		internal unsafe delegate void glGetVariantIntegervEXT(uint id, GetVariantValueEXT value, int* data);
		internal delegate void glGetVariantPointervEXT(uint id, GetVariantValueEXT value, IntPtr data);
		internal unsafe delegate int glGetVaryingLocationNV(uint program, sbyte* name);
		internal unsafe delegate void glGetVertexArrayIndexed64iv(uint vaobj, uint index, VertexArrayPName pname, long* param);
		internal unsafe delegate void glGetVertexArrayIndexediv(uint vaobj, uint index, VertexArrayPName pname, int* param);
		internal unsafe delegate void glGetVertexArrayIntegeri_vEXT(uint vaobj, uint index, VertexArrayPName pname, int* param);
		internal unsafe delegate void glGetVertexArrayIntegervEXT(uint vaobj, VertexArrayPName pname, int* param);
		internal unsafe delegate void glGetVertexArrayiv(uint vaobj, VertexArrayPName pname, int* param);
		internal delegate void glGetVertexArrayPointeri_vEXT(uint vaobj, uint index, VertexArrayPName pname, IntPtr param);
		internal delegate void glGetVertexArrayPointervEXT(uint vaobj, VertexArrayPName pname, IntPtr param);
		internal unsafe delegate void glGetVertexAttribArrayObjectfvATI(uint index, ArrayObjectPNameATI pname, float* @params);
		internal unsafe delegate void glGetVertexAttribArrayObjectivATI(uint index, ArrayObjectPNameATI pname, int* @params);
		internal unsafe delegate void glGetVertexAttribdv(uint index, VertexAttribPropertyARB pname, double* @params);
		internal unsafe delegate void glGetVertexAttribdvARB(uint index, VertexAttribPropertyARB pname, double* @params);
		internal unsafe delegate void glGetVertexAttribdvNV(uint index, VertexAttribEnumNV pname, double* @params);
		internal unsafe delegate void glGetVertexAttribfv(uint index, VertexAttribPropertyARB pname, float* @params);
		internal unsafe delegate void glGetVertexAttribfvARB(uint index, VertexAttribPropertyARB pname, float* @params);
		internal unsafe delegate void glGetVertexAttribfvNV(uint index, VertexAttribEnumNV pname, float* @params);
		internal unsafe delegate void glGetVertexAttribIiv(uint index, VertexAttribEnum pname, int* @params);
		internal unsafe delegate void glGetVertexAttribIivEXT(uint index, VertexAttribEnum pname, int* @params);
		internal unsafe delegate void glGetVertexAttribIuiv(uint index, VertexAttribEnum pname, uint* @params);
		internal unsafe delegate void glGetVertexAttribIuivEXT(uint index, VertexAttribEnum pname, uint* @params);
		internal unsafe delegate void glGetVertexAttribiv(uint index, VertexAttribPropertyARB pname, int* @params);
		internal unsafe delegate void glGetVertexAttribivARB(uint index, VertexAttribPropertyARB pname, int* @params);
		internal unsafe delegate void glGetVertexAttribivNV(uint index, VertexAttribEnumNV pname, int* @params);
		internal unsafe delegate void glGetVertexAttribLdv(uint index, VertexAttribEnum pname, double* @params);
		internal unsafe delegate void glGetVertexAttribLdvEXT(uint index, VertexAttribEnum pname, double* @params);
		internal unsafe delegate void glGetVertexAttribLi64vNV(uint index, VertexAttribEnum pname, long* @params);
		internal unsafe delegate void glGetVertexAttribLui64vARB(uint index, VertexAttribEnum pname, ulong* @params);
		internal unsafe delegate void glGetVertexAttribLui64vNV(uint index, VertexAttribEnum pname, ulong* @params);
		internal delegate void glGetVertexAttribPointerv(uint index, VertexAttribPointerPropertyARB pname, IntPtr pointer);
		internal delegate void glGetVertexAttribPointervARB(uint index, VertexAttribPointerPropertyARB pname, IntPtr pointer);
		internal delegate void glGetVertexAttribPointervNV(uint index, VertexAttribEnumNV pname, IntPtr pointer);
		internal unsafe delegate void glGetVideoCaptureivNV(uint video_capture_slot, uint pname, int* @params);
		internal unsafe delegate void glGetVideoCaptureStreamdvNV(uint video_capture_slot, uint stream, uint pname, double* @params);
		internal unsafe delegate void glGetVideoCaptureStreamfvNV(uint video_capture_slot, uint stream, uint pname, float* @params);
		internal unsafe delegate void glGetVideoCaptureStreamivNV(uint video_capture_slot, uint stream, uint pname, int* @params);
		internal unsafe delegate void glGetVideoi64vNV(uint video_slot, uint pname, long* @params);
		internal unsafe delegate void glGetVideoivNV(uint video_slot, uint pname, int* @params);
		internal unsafe delegate void glGetVideoui64vNV(uint video_slot, uint pname, ulong* @params);
		internal unsafe delegate void glGetVideouivNV(uint video_slot, uint pname, uint* @params);
		internal unsafe delegate Delegate glGetVkProcAddrNV(sbyte* name);
		internal delegate void glGlobalAlphaFactorbSUN(sbyte factor);
		internal delegate void glGlobalAlphaFactordSUN(double factor);
		internal delegate void glGlobalAlphaFactorfSUN(float factor);
		internal delegate void glGlobalAlphaFactoriSUN(int factor);
		internal delegate void glGlobalAlphaFactorsSUN(short factor);
		internal delegate void glGlobalAlphaFactorubSUN(byte factor);
		internal delegate void glGlobalAlphaFactoruiSUN(uint factor);
		internal delegate void glGlobalAlphaFactorusSUN(ushort factor);
		#endregion

		#region H:

		internal delegate void glHint(HintTarget target, HintMode mode);
		internal delegate void glHintPGI(HintTargetPGI target, int mode);
		internal delegate void glHistogram(HistogramTargetEXT target, int width, InternalFormat internalformat, bool sink);
		internal delegate void glHistogramEXT(HistogramTargetEXT target, int width, InternalFormat internalformat, bool sink);
		#endregion

		#region I:

		internal delegate void glIglooInterfaceSGIX(uint pname, IntPtr @params);
		internal delegate void glImageTransformParameterfHP(ImageTransformTargetHP target, ImageTransformPNameHP pname, float param);
		internal unsafe delegate void glImageTransformParameterfvHP(ImageTransformTargetHP target, ImageTransformPNameHP pname, float* @params);
		internal delegate void glImageTransformParameteriHP(ImageTransformTargetHP target, ImageTransformPNameHP pname, int param);
		internal unsafe delegate void glImageTransformParameterivHP(ImageTransformTargetHP target, ImageTransformPNameHP pname, int* @params);
		internal delegate void glImportMemoryFdEXT(uint memory, ulong size, ExternalHandleType handleType, int fd);
		internal delegate void glImportMemoryWin32HandleEXT(uint memory, ulong size, ExternalHandleType handleType, IntPtr handle);
		internal delegate void glImportMemoryWin32NameEXT(uint memory, ulong size, ExternalHandleType handleType, IntPtr name);
		internal delegate void glImportSemaphoreFdEXT(uint semaphore, ExternalHandleType handleType, int fd);
		internal delegate void glImportSemaphoreWin32HandleEXT(uint semaphore, ExternalHandleType handleType, IntPtr handle);
		internal delegate void glImportSemaphoreWin32NameEXT(uint semaphore, ExternalHandleType handleType, IntPtr name);
		internal delegate IntPtr glImportSyncEXT(uint external_sync_type, IntPtr external_sync, uint flags);
		internal delegate void glIndexd(double c);
		internal unsafe delegate void glIndexdv(double* c);
		internal delegate void glIndexf(float c);
		internal delegate void glIndexFormatNV(uint type, int stride);
		internal delegate void glIndexFuncEXT(IndexFunctionEXT func, float @ref);
		internal unsafe delegate void glIndexfv(float* c);
		internal delegate void glIndexi(int c);
		internal unsafe delegate void glIndexiv(int* c);
		internal delegate void glIndexMask(uint mask);
		internal delegate void glIndexMaterialEXT(MaterialFace face, IndexMaterialParameterEXT mode);
		internal delegate void glIndexPointer(IndexPointerType type, int stride, IntPtr pointer);
		internal delegate void glIndexPointerEXT(IndexPointerType type, int stride, int count, IntPtr pointer);
		internal delegate void glIndexPointerListIBM(IndexPointerType type, int stride, IntPtr pointer, int ptrstride);
		internal delegate void glIndexs(short c);
		internal unsafe delegate void glIndexsv(short* c);
		internal delegate void glIndexub(byte c);
		internal unsafe delegate void glIndexubv(byte* c);
		internal delegate void glIndexxOES(int component);
		internal unsafe delegate void glIndexxvOES(int* component);
		internal delegate void glInitNames();
		internal delegate void glInsertComponentEXT(uint res, uint src, uint num);
		internal unsafe delegate void glInsertEventMarkerEXT(int length, sbyte* marker);
		internal unsafe delegate void glInstrumentsBufferSGIX(int size, int* buffer);
		internal delegate void glInterleavedArrays(InterleavedArrayFormat format, int stride, IntPtr pointer);
		internal delegate void glInterpolatePathsNV(uint resultPath, uint pathA, uint pathB, float weight);
		internal delegate void glInvalidateBufferData(uint buffer);
		internal delegate void glInvalidateBufferSubData(uint buffer, IntPtr offset, int length);
		internal unsafe delegate void glInvalidateFramebuffer(FramebufferTarget target, int numAttachments, InvalidateFramebufferAttachment* attachments);
		internal unsafe delegate void glInvalidateNamedFramebufferData(uint framebuffer, int numAttachments, FramebufferAttachment* attachments);
		internal unsafe delegate void glInvalidateNamedFramebufferSubData(uint framebuffer, int numAttachments, FramebufferAttachment* attachments, int x, int y, int width, int height);
		internal unsafe delegate void glInvalidateSubFramebuffer(FramebufferTarget target, int numAttachments, InvalidateFramebufferAttachment* attachments, int x, int y, int width, int height);
		internal delegate void glInvalidateTexImage(uint texture, int level);
		internal delegate void glInvalidateTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
		internal delegate bool glIsAsyncMarkerSGIX(uint marker);
		internal delegate bool glIsBuffer(uint buffer);
		internal delegate bool glIsBufferARB(uint buffer);
		internal delegate bool glIsBufferResidentNV(uint target);
		internal delegate bool glIsCommandListNV(uint list);
		internal delegate bool glIsEnabled(EnableCap cap);
		internal delegate bool glIsEnabledi(EnableCap target, uint index);
		internal delegate bool glIsEnablediEXT(EnableCap target, uint index);
		internal delegate bool glIsEnabledIndexedEXT(EnableCap target, uint index);
		internal delegate bool glIsEnablediNV(EnableCap target, uint index);
		internal delegate bool glIsEnablediOES(EnableCap target, uint index);
		internal delegate bool glIsFenceAPPLE(uint fence);
		internal delegate bool glIsFenceNV(uint fence);
		internal delegate bool glIsFramebuffer(uint framebuffer);
		internal delegate bool glIsFramebufferEXT(uint framebuffer);
		internal delegate bool glIsFramebufferOES(uint framebuffer);
		internal delegate bool glIsImageHandleResidentARB(ulong handle);
		internal delegate bool glIsImageHandleResidentNV(ulong handle);
		internal delegate bool glIsList(uint list);
		internal delegate bool glIsMemoryObjectEXT(uint memoryObject);
		internal delegate bool glIsNameAMD(uint identifier, uint name);
		internal delegate bool glIsNamedBufferResidentNV(uint buffer);
		internal unsafe delegate bool glIsNamedStringARB(int namelen, sbyte* name);
		internal delegate bool glIsObjectBufferATI(uint buffer);
		internal delegate bool glIsOcclusionQueryNV(uint id);
		internal delegate bool glIsPathNV(uint path);
		internal delegate bool glIsPointInFillPathNV(uint path, uint mask, float x, float y);
		internal delegate bool glIsPointInStrokePathNV(uint path, float x, float y);
		internal delegate bool glIsProgram(uint program);
		internal delegate bool glIsProgramARB(uint program);
		internal delegate bool glIsProgramNV(uint id);
		internal delegate bool glIsProgramPipeline(uint pipeline);
		internal delegate bool glIsProgramPipelineEXT(uint pipeline);
		internal delegate bool glIsQuery(uint id);
		internal delegate bool glIsQueryARB(uint id);
		internal delegate bool glIsQueryEXT(uint id);
		internal delegate bool glIsRenderbuffer(uint renderbuffer);
		internal delegate bool glIsRenderbufferEXT(uint renderbuffer);
		internal delegate bool glIsRenderbufferOES(uint renderbuffer);
		internal delegate bool glIsSampler(uint sampler);
		internal delegate bool glIsSemaphoreEXT(uint semaphore);
		internal delegate bool glIsShader(uint shader);
		internal delegate bool glIsStateNV(uint state);
		internal delegate bool glIsSync(IntPtr sync);
		internal delegate bool glIsSyncAPPLE(IntPtr sync);
		internal delegate bool glIsTexture(uint texture);
		internal delegate bool glIsTextureEXT(uint texture);
		internal delegate bool glIsTextureHandleResidentARB(ulong handle);
		internal delegate bool glIsTextureHandleResidentNV(ulong handle);
		internal delegate bool glIsTransformFeedback(uint id);
		internal delegate bool glIsTransformFeedbackNV(uint id);
		internal delegate bool glIsVariantEnabledEXT(uint id, VariantCapEXT cap);
		internal delegate bool glIsVertexArray(uint array);
		internal delegate bool glIsVertexArrayAPPLE(uint array);
		internal delegate bool glIsVertexArrayOES(uint array);
		internal delegate bool glIsVertexAttribEnabledAPPLE(uint index, uint pname);
		#endregion

		#region L:

		internal unsafe delegate void glLabelObjectEXT(uint type, uint @object, int length, sbyte* label);
		internal delegate void glLGPUCopyImageSubDataNVX(uint sourceGpu, uint destinationGpuMask, uint srcName, uint srcTarget, int srcLevel, int srcX, int srxY, int srcZ, uint dstName, uint dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int width, int height, int depth);
		internal delegate void glLGPUInterlockNVX();
		internal delegate void glLGPUNamedBufferSubDataNVX(uint gpuMask, uint buffer, IntPtr offset, int size, IntPtr data);
		internal delegate void glLightEnviSGIX(LightEnvParameterSGIX pname, int param);
		internal delegate void glLightf(LightName light, LightParameter pname, float param);
		internal unsafe delegate void glLightfv(LightName light, LightParameter pname, float* @params);
		internal delegate void glLighti(LightName light, LightParameter pname, int param);
		internal unsafe delegate void glLightiv(LightName light, LightParameter pname, int* @params);
		internal delegate void glLightModelf(LightModelParameter pname, float param);
		internal unsafe delegate void glLightModelfv(LightModelParameter pname, float* @params);
		internal delegate void glLightModeli(LightModelParameter pname, int param);
		internal unsafe delegate void glLightModeliv(LightModelParameter pname, int* @params);
		internal delegate void glLightModelx(LightModelParameter pname, int param);
		internal delegate void glLightModelxOES(LightModelParameter pname, int param);
		internal unsafe delegate void glLightModelxv(LightModelParameter pname, int* param);
		internal unsafe delegate void glLightModelxvOES(LightModelParameter pname, int* param);
		internal delegate void glLightx(LightName light, LightParameter pname, int param);
		internal delegate void glLightxOES(LightName light, LightParameter pname, int param);
		internal unsafe delegate void glLightxv(LightName light, LightParameter pname, int* @params);
		internal unsafe delegate void glLightxvOES(LightName light, LightParameter pname, int* @params);
		internal delegate void glLineStipple(int factor, ushort pattern);
		internal delegate void glLineWidth(float width);
		internal delegate void glLineWidthx(int width);
		internal delegate void glLineWidthxOES(int width);
		internal delegate void glLinkProgram(uint program);
		internal delegate void glLinkProgramARB(uint programObj);
		internal delegate void glListBase(uint @base);
		internal unsafe delegate void glListDrawCommandsStatesClientNV(uint list, uint segment, IntPtr indirects, int* sizes, uint* states, uint* fbos, uint count);
		internal delegate void glListParameterfSGIX(uint list, ListParameterName pname, float param);
		internal unsafe delegate void glListParameterfvSGIX(uint list, ListParameterName pname, float* @params);
		internal delegate void glListParameteriSGIX(uint list, ListParameterName pname, int param);
		internal unsafe delegate void glListParameterivSGIX(uint list, ListParameterName pname, int* @params);
		internal delegate void glLoadIdentity();
		internal delegate void glLoadIdentityDeformationMapSGIX(uint mask);
		internal unsafe delegate void glLoadMatrixd(double* m);
		internal unsafe delegate void glLoadMatrixf(float* m);
		internal unsafe delegate void glLoadMatrixx(int* m);
		internal unsafe delegate void glLoadMatrixxOES(int* m);
		internal delegate void glLoadName(uint name);
		internal delegate void glLoadPaletteFromModelViewMatrixOES();
		internal unsafe delegate void glLoadProgramNV(VertexAttribEnumNV target, uint id, int len, byte* program);
		internal unsafe delegate void glLoadTransposeMatrixd(double* m);
		internal unsafe delegate void glLoadTransposeMatrixdARB(double* m);
		internal unsafe delegate void glLoadTransposeMatrixf(float* m);
		internal unsafe delegate void glLoadTransposeMatrixfARB(float* m);
		internal unsafe delegate void glLoadTransposeMatrixxOES(int* m);
		internal delegate void glLockArraysEXT(int first, int count);
		internal delegate void glLogicOp(LogicOp opcode);
		#endregion

		#region M:

		internal delegate void glMakeBufferNonResidentNV(uint target);
		internal delegate void glMakeBufferResidentNV(uint target, uint access);
		internal delegate void glMakeImageHandleNonResidentARB(ulong handle);
		internal delegate void glMakeImageHandleNonResidentNV(ulong handle);
		internal delegate void glMakeImageHandleResidentARB(ulong handle, uint access);
		internal delegate void glMakeImageHandleResidentNV(ulong handle, uint access);
		internal delegate void glMakeNamedBufferNonResidentNV(uint buffer);
		internal delegate void glMakeNamedBufferResidentNV(uint buffer, uint access);
		internal delegate void glMakeTextureHandleNonResidentARB(ulong handle);
		internal delegate void glMakeTextureHandleNonResidentNV(ulong handle);
		internal delegate void glMakeTextureHandleResidentARB(ulong handle);
		internal delegate void glMakeTextureHandleResidentNV(ulong handle);
		internal unsafe delegate void glMap1d(MapTarget target, double u1, double u2, int stride, int order, double* points);
		internal unsafe delegate void glMap1f(MapTarget target, float u1, float u2, int stride, int order, float* points);
		internal delegate void glMap1xOES(MapTarget target, int u1, int u2, int stride, int order, int points);
		internal unsafe delegate void glMap2d(MapTarget target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double* points);
		internal unsafe delegate void glMap2f(MapTarget target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float* points);
		internal delegate void glMap2xOES(MapTarget target, int u1, int u2, int ustride, int uorder, int v1, int v2, int vstride, int vorder, int points);
		internal delegate IntPtr glMapBuffer(BufferTargetARB target, BufferAccessARB access);
		internal delegate IntPtr glMapBufferARB(BufferTargetARB target, BufferAccessARB access);
		internal delegate IntPtr glMapBufferOES(BufferTargetARB target, BufferAccessARB access);
		internal delegate IntPtr glMapBufferRange(BufferTargetARB target, IntPtr offset, int length, uint access);
		internal delegate IntPtr glMapBufferRangeEXT(BufferTargetARB target, IntPtr offset, int length, uint access);
		internal delegate void glMapControlPointsNV(EvalTargetNV target, uint index, MapTypeNV type, int ustride, int vstride, int uorder, int vorder, bool packed, IntPtr points);
		internal delegate void glMapGrid1d(int un, double u1, double u2);
		internal delegate void glMapGrid1f(int un, float u1, float u2);
		internal delegate void glMapGrid1xOES(int n, int u1, int u2);
		internal delegate void glMapGrid2d(int un, double u1, double u2, int vn, double v1, double v2);
		internal delegate void glMapGrid2f(int un, float u1, float u2, int vn, float v1, float v2);
		internal delegate void glMapGrid2xOES(int n, int u1, int u2, int v1, int v2);
		internal delegate IntPtr glMapNamedBuffer(uint buffer, BufferAccessARB access);
		internal delegate IntPtr glMapNamedBufferEXT(uint buffer, BufferAccessARB access);
		internal delegate IntPtr glMapNamedBufferRange(uint buffer, IntPtr offset, int length, uint access);
		internal delegate IntPtr glMapNamedBufferRangeEXT(uint buffer, IntPtr offset, int length, uint access);
		internal delegate IntPtr glMapObjectBufferATI(uint buffer);
		internal unsafe delegate void glMapParameterfvNV(EvalTargetNV target, MapParameterNV pname, float* @params);
		internal unsafe delegate void glMapParameterivNV(EvalTargetNV target, MapParameterNV pname, int* @params);
		internal unsafe delegate IntPtr glMapTexture2DINTEL(uint texture, int level, uint access, int* stride, uint* layout);
		internal unsafe delegate void glMapVertexAttrib1dAPPLE(uint index, uint size, double u1, double u2, int stride, int order, double* points);
		internal unsafe delegate void glMapVertexAttrib1fAPPLE(uint index, uint size, float u1, float u2, int stride, int order, float* points);
		internal unsafe delegate void glMapVertexAttrib2dAPPLE(uint index, uint size, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double* points);
		internal unsafe delegate void glMapVertexAttrib2fAPPLE(uint index, uint size, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float* points);
		internal delegate void glMaterialf(MaterialFace face, MaterialParameter pname, float param);
		internal unsafe delegate void glMaterialfv(MaterialFace face, MaterialParameter pname, float* @params);
		internal delegate void glMateriali(MaterialFace face, MaterialParameter pname, int param);
		internal unsafe delegate void glMaterialiv(MaterialFace face, MaterialParameter pname, int* @params);
		internal delegate void glMaterialx(MaterialFace face, MaterialParameter pname, int param);
		internal delegate void glMaterialxOES(MaterialFace face, MaterialParameter pname, int param);
		internal unsafe delegate void glMaterialxv(MaterialFace face, MaterialParameter pname, int* param);
		internal unsafe delegate void glMaterialxvOES(MaterialFace face, MaterialParameter pname, int* param);
		internal delegate void glMatrixFrustumEXT(MatrixMode mode, double left, double right, double bottom, double top, double zNear, double zFar);
		internal delegate void glMatrixIndexPointerARB(int size, MatrixIndexPointerTypeARB type, int stride, IntPtr pointer);
		internal delegate void glMatrixIndexPointerOES(int size, MatrixIndexPointerTypeARB type, int stride, IntPtr pointer);
		internal unsafe delegate void glMatrixIndexubvARB(int size, byte* indices);
		internal unsafe delegate void glMatrixIndexuivARB(int size, uint* indices);
		internal unsafe delegate void glMatrixIndexusvARB(int size, ushort* indices);
		internal unsafe delegate void glMatrixLoad3x2fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixLoad3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixLoaddEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixLoadfEXT(MatrixMode mode, float* m);
		internal delegate void glMatrixLoadIdentityEXT(MatrixMode mode);
		internal unsafe delegate void glMatrixLoadTranspose3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixLoadTransposedEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixLoadTransposefEXT(MatrixMode mode, float* m);
		internal delegate void glMatrixMode(MatrixMode mode);
		internal unsafe delegate void glMatrixMult3x2fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixMult3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixMultdEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixMultfEXT(MatrixMode mode, float* m);
		internal unsafe delegate void glMatrixMultTranspose3x3fNV(uint matrixMode, float* m);
		internal unsafe delegate void glMatrixMultTransposedEXT(MatrixMode mode, double* m);
		internal unsafe delegate void glMatrixMultTransposefEXT(MatrixMode mode, float* m);
		internal delegate void glMatrixOrthoEXT(MatrixMode mode, double left, double right, double bottom, double top, double zNear, double zFar);
		internal delegate void glMatrixPopEXT(MatrixMode mode);
		internal delegate void glMatrixPushEXT(MatrixMode mode);
		internal delegate void glMatrixRotatedEXT(MatrixMode mode, double angle, double x, double y, double z);
		internal delegate void glMatrixRotatefEXT(MatrixMode mode, float angle, float x, float y, float z);
		internal delegate void glMatrixScaledEXT(MatrixMode mode, double x, double y, double z);
		internal delegate void glMatrixScalefEXT(MatrixMode mode, float x, float y, float z);
		internal delegate void glMatrixTranslatedEXT(MatrixMode mode, double x, double y, double z);
		internal delegate void glMatrixTranslatefEXT(MatrixMode mode, float x, float y, float z);
		internal delegate void glMaxShaderCompilerThreadsARB(uint count);
		internal delegate void glMaxShaderCompilerThreadsKHR(uint count);
		internal delegate void glMemoryBarrier(uint barriers);
		internal delegate void glMemoryBarrierByRegion(uint barriers);
		internal delegate void glMemoryBarrierEXT(uint barriers);
		internal unsafe delegate void glMemoryObjectParameterivEXT(uint memoryObject, MemoryObjectParameterName pname, int* @params);
		internal delegate void glMinmax(MinmaxTargetEXT target, InternalFormat internalformat, bool sink);
		internal delegate void glMinmaxEXT(MinmaxTargetEXT target, InternalFormat internalformat, bool sink);
		internal delegate void glMinSampleShading(float value);
		internal delegate void glMinSampleShadingARB(float value);
		internal delegate void glMinSampleShadingOES(float value);
		internal delegate void glMulticastBarrierNV();
		internal delegate void glMulticastBlitFramebufferNV(uint srcGpu, uint dstGpu, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
		internal delegate void glMulticastBufferSubDataNV(uint gpuMask, uint buffer, IntPtr offset, int size, IntPtr data);
		internal delegate void glMulticastCopyBufferSubDataNV(uint readGpu, uint writeGpuMask, uint readBuffer, uint writeBuffer, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glMulticastCopyImageSubDataNV(uint srcGpu, uint dstGpuMask, uint srcName, uint srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, uint dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
		internal unsafe delegate void glMulticastFramebufferSampleLocationsfvNV(uint gpu, uint framebuffer, uint start, int count, float* v);
		internal unsafe delegate void glMulticastGetQueryObjecti64vNV(uint gpu, uint id, uint pname, long* @params);
		internal unsafe delegate void glMulticastGetQueryObjectivNV(uint gpu, uint id, uint pname, int* @params);
		internal unsafe delegate void glMulticastGetQueryObjectui64vNV(uint gpu, uint id, uint pname, ulong* @params);
		internal unsafe delegate void glMulticastGetQueryObjectuivNV(uint gpu, uint id, uint pname, uint* @params);
		internal unsafe delegate void glMulticastScissorArrayvNVX(uint gpu, uint first, int count, int* v);
		internal unsafe delegate void glMulticastViewportArrayvNVX(uint gpu, uint first, int count, float* v);
		internal delegate void glMulticastViewportPositionWScaleNVX(uint gpu, uint index, float xcoeff, float ycoeff);
		internal delegate void glMulticastWaitSyncNV(uint signalGpu, uint waitGpuMask);
		internal unsafe delegate void glMultiDrawArrays(PrimitiveType mode, int* first, int* count, int drawcount);
		internal unsafe delegate void glMultiDrawArraysEXT(PrimitiveType mode, int* first, int* count, int primcount);
		internal delegate void glMultiDrawArraysIndirect(PrimitiveType mode, IntPtr indirect, int drawcount, int stride);
		internal delegate void glMultiDrawArraysIndirectAMD(PrimitiveType mode, IntPtr indirect, int primcount, int stride);
		internal delegate void glMultiDrawArraysIndirectBindlessCountNV(PrimitiveType mode, IntPtr indirect, int drawCount, int maxDrawCount, int stride, int vertexBufferCount);
		internal delegate void glMultiDrawArraysIndirectBindlessNV(PrimitiveType mode, IntPtr indirect, int drawCount, int stride, int vertexBufferCount);
		internal delegate void glMultiDrawArraysIndirectCount(PrimitiveType mode, IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
		internal delegate void glMultiDrawArraysIndirectCountARB(PrimitiveType mode, IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
		internal delegate void glMultiDrawArraysIndirectEXT(PrimitiveType mode, IntPtr indirect, int drawcount, int stride);
		internal unsafe delegate void glMultiDrawElementArrayAPPLE(PrimitiveType mode, int* first, int* count, int primcount);
		internal unsafe delegate void glMultiDrawElements(PrimitiveType mode, int* count, DrawElementsType type, IntPtr indices, int drawcount);
		internal unsafe delegate void glMultiDrawElementsBaseVertex(PrimitiveType mode, int* count, DrawElementsType type, IntPtr indices, int drawcount, int* basevertex);
		internal unsafe delegate void glMultiDrawElementsBaseVertexEXT(PrimitiveType mode, int* count, DrawElementsType type, IntPtr indices, int primcount, int* basevertex);
		internal unsafe delegate void glMultiDrawElementsEXT(PrimitiveType mode, int* count, DrawElementsType type, IntPtr indices, int primcount);
		internal delegate void glMultiDrawElementsIndirect(PrimitiveType mode, DrawElementsType type, IntPtr indirect, int drawcount, int stride);
		internal delegate void glMultiDrawElementsIndirectAMD(PrimitiveType mode, DrawElementsType type, IntPtr indirect, int primcount, int stride);
		internal delegate void glMultiDrawElementsIndirectBindlessCountNV(PrimitiveType mode, DrawElementsType type, IntPtr indirect, int drawCount, int maxDrawCount, int stride, int vertexBufferCount);
		internal delegate void glMultiDrawElementsIndirectBindlessNV(PrimitiveType mode, DrawElementsType type, IntPtr indirect, int drawCount, int stride, int vertexBufferCount);
		internal delegate void glMultiDrawElementsIndirectCount(PrimitiveType mode, DrawElementsType type, IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
		internal delegate void glMultiDrawElementsIndirectCountARB(PrimitiveType mode, DrawElementsType type, IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
		internal delegate void glMultiDrawElementsIndirectEXT(PrimitiveType mode, DrawElementsType type, IntPtr indirect, int drawcount, int stride);
		internal delegate void glMultiDrawMeshTasksIndirectCountNV(IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
		internal delegate void glMultiDrawMeshTasksIndirectNV(IntPtr indirect, int drawcount, int stride);
		internal unsafe delegate void glMultiDrawRangeElementArrayAPPLE(PrimitiveType mode, uint start, uint end, int* first, int* count, int primcount);
		internal unsafe delegate void glMultiModeDrawArraysIBM(PrimitiveType* mode, int* first, int* count, int primcount, int modestride);
		internal unsafe delegate void glMultiModeDrawElementsIBM(PrimitiveType* mode, int* count, DrawElementsType type, IntPtr indices, int primcount, int modestride);
		internal delegate void glMultiTexBufferEXT(TextureUnit texunit, TextureTarget target, uint internalformat, uint buffer);
		internal delegate void glMultiTexCoord1bOES(TextureUnit texture, sbyte s);
		internal unsafe delegate void glMultiTexCoord1bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord1d(TextureUnit target, double s);
		internal delegate void glMultiTexCoord1dARB(TextureUnit target, double s);
		internal unsafe delegate void glMultiTexCoord1dv(TextureUnit target, double* v);
		internal unsafe delegate void glMultiTexCoord1dvARB(TextureUnit target, double* v);
		internal delegate void glMultiTexCoord1f(TextureUnit target, float s);
		internal delegate void glMultiTexCoord1fARB(TextureUnit target, float s);
		internal unsafe delegate void glMultiTexCoord1fv(TextureUnit target, float* v);
		internal unsafe delegate void glMultiTexCoord1fvARB(TextureUnit target, float* v);
		internal delegate void glMultiTexCoord1hNV(TextureUnit target, ushort s);
		internal unsafe delegate void glMultiTexCoord1hvNV(TextureUnit target, ushort* v);
		internal delegate void glMultiTexCoord1i(TextureUnit target, int s);
		internal delegate void glMultiTexCoord1iARB(TextureUnit target, int s);
		internal unsafe delegate void glMultiTexCoord1iv(TextureUnit target, int* v);
		internal unsafe delegate void glMultiTexCoord1ivARB(TextureUnit target, int* v);
		internal delegate void glMultiTexCoord1s(TextureUnit target, short s);
		internal delegate void glMultiTexCoord1sARB(TextureUnit target, short s);
		internal unsafe delegate void glMultiTexCoord1sv(TextureUnit target, short* v);
		internal unsafe delegate void glMultiTexCoord1svARB(TextureUnit target, short* v);
		internal delegate void glMultiTexCoord1xOES(TextureUnit texture, int s);
		internal unsafe delegate void glMultiTexCoord1xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoord2bOES(TextureUnit texture, sbyte s, sbyte t);
		internal unsafe delegate void glMultiTexCoord2bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord2d(TextureUnit target, double s, double t);
		internal delegate void glMultiTexCoord2dARB(TextureUnit target, double s, double t);
		internal unsafe delegate void glMultiTexCoord2dv(TextureUnit target, double* v);
		internal unsafe delegate void glMultiTexCoord2dvARB(TextureUnit target, double* v);
		internal delegate void glMultiTexCoord2f(TextureUnit target, float s, float t);
		internal delegate void glMultiTexCoord2fARB(TextureUnit target, float s, float t);
		internal unsafe delegate void glMultiTexCoord2fv(TextureUnit target, float* v);
		internal unsafe delegate void glMultiTexCoord2fvARB(TextureUnit target, float* v);
		internal delegate void glMultiTexCoord2hNV(TextureUnit target, ushort s, ushort t);
		internal unsafe delegate void glMultiTexCoord2hvNV(TextureUnit target, ushort* v);
		internal delegate void glMultiTexCoord2i(TextureUnit target, int s, int t);
		internal delegate void glMultiTexCoord2iARB(TextureUnit target, int s, int t);
		internal unsafe delegate void glMultiTexCoord2iv(TextureUnit target, int* v);
		internal unsafe delegate void glMultiTexCoord2ivARB(TextureUnit target, int* v);
		internal delegate void glMultiTexCoord2s(TextureUnit target, short s, short t);
		internal delegate void glMultiTexCoord2sARB(TextureUnit target, short s, short t);
		internal unsafe delegate void glMultiTexCoord2sv(TextureUnit target, short* v);
		internal unsafe delegate void glMultiTexCoord2svARB(TextureUnit target, short* v);
		internal delegate void glMultiTexCoord2xOES(TextureUnit texture, int s, int t);
		internal unsafe delegate void glMultiTexCoord2xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoord3bOES(TextureUnit texture, sbyte s, sbyte t, sbyte r);
		internal unsafe delegate void glMultiTexCoord3bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord3d(TextureUnit target, double s, double t, double r);
		internal delegate void glMultiTexCoord3dARB(TextureUnit target, double s, double t, double r);
		internal unsafe delegate void glMultiTexCoord3dv(TextureUnit target, double* v);
		internal unsafe delegate void glMultiTexCoord3dvARB(TextureUnit target, double* v);
		internal delegate void glMultiTexCoord3f(TextureUnit target, float s, float t, float r);
		internal delegate void glMultiTexCoord3fARB(TextureUnit target, float s, float t, float r);
		internal unsafe delegate void glMultiTexCoord3fv(TextureUnit target, float* v);
		internal unsafe delegate void glMultiTexCoord3fvARB(TextureUnit target, float* v);
		internal delegate void glMultiTexCoord3hNV(TextureUnit target, ushort s, ushort t, ushort r);
		internal unsafe delegate void glMultiTexCoord3hvNV(TextureUnit target, ushort* v);
		internal delegate void glMultiTexCoord3i(TextureUnit target, int s, int t, int r);
		internal delegate void glMultiTexCoord3iARB(TextureUnit target, int s, int t, int r);
		internal unsafe delegate void glMultiTexCoord3iv(TextureUnit target, int* v);
		internal unsafe delegate void glMultiTexCoord3ivARB(TextureUnit target, int* v);
		internal delegate void glMultiTexCoord3s(TextureUnit target, short s, short t, short r);
		internal delegate void glMultiTexCoord3sARB(TextureUnit target, short s, short t, short r);
		internal unsafe delegate void glMultiTexCoord3sv(TextureUnit target, short* v);
		internal unsafe delegate void glMultiTexCoord3svARB(TextureUnit target, short* v);
		internal delegate void glMultiTexCoord3xOES(TextureUnit texture, int s, int t, int r);
		internal unsafe delegate void glMultiTexCoord3xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoord4bOES(TextureUnit texture, sbyte s, sbyte t, sbyte r, sbyte q);
		internal unsafe delegate void glMultiTexCoord4bvOES(TextureUnit texture, sbyte* coords);
		internal delegate void glMultiTexCoord4d(TextureUnit target, double s, double t, double r, double q);
		internal delegate void glMultiTexCoord4dARB(TextureUnit target, double s, double t, double r, double q);
		internal unsafe delegate void glMultiTexCoord4dv(TextureUnit target, double* v);
		internal unsafe delegate void glMultiTexCoord4dvARB(TextureUnit target, double* v);
		internal delegate void glMultiTexCoord4f(TextureUnit target, float s, float t, float r, float q);
		internal delegate void glMultiTexCoord4fARB(TextureUnit target, float s, float t, float r, float q);
		internal unsafe delegate void glMultiTexCoord4fv(TextureUnit target, float* v);
		internal unsafe delegate void glMultiTexCoord4fvARB(TextureUnit target, float* v);
		internal delegate void glMultiTexCoord4hNV(TextureUnit target, ushort s, ushort t, ushort r, ushort q);
		internal unsafe delegate void glMultiTexCoord4hvNV(TextureUnit target, ushort* v);
		internal delegate void glMultiTexCoord4i(TextureUnit target, int s, int t, int r, int q);
		internal delegate void glMultiTexCoord4iARB(TextureUnit target, int s, int t, int r, int q);
		internal unsafe delegate void glMultiTexCoord4iv(TextureUnit target, int* v);
		internal unsafe delegate void glMultiTexCoord4ivARB(TextureUnit target, int* v);
		internal delegate void glMultiTexCoord4s(TextureUnit target, short s, short t, short r, short q);
		internal delegate void glMultiTexCoord4sARB(TextureUnit target, short s, short t, short r, short q);
		internal unsafe delegate void glMultiTexCoord4sv(TextureUnit target, short* v);
		internal unsafe delegate void glMultiTexCoord4svARB(TextureUnit target, short* v);
		internal delegate void glMultiTexCoord4x(TextureUnit texture, int s, int t, int r, int q);
		internal delegate void glMultiTexCoord4xOES(TextureUnit texture, int s, int t, int r, int q);
		internal unsafe delegate void glMultiTexCoord4xvOES(TextureUnit texture, int* coords);
		internal delegate void glMultiTexCoordP1ui(TextureUnit texture, TexCoordPointerType type, uint coords);
		internal unsafe delegate void glMultiTexCoordP1uiv(TextureUnit texture, TexCoordPointerType type, uint* coords);
		internal delegate void glMultiTexCoordP2ui(TextureUnit texture, TexCoordPointerType type, uint coords);
		internal unsafe delegate void glMultiTexCoordP2uiv(TextureUnit texture, TexCoordPointerType type, uint* coords);
		internal delegate void glMultiTexCoordP3ui(TextureUnit texture, TexCoordPointerType type, uint coords);
		internal unsafe delegate void glMultiTexCoordP3uiv(TextureUnit texture, TexCoordPointerType type, uint* coords);
		internal delegate void glMultiTexCoordP4ui(TextureUnit texture, TexCoordPointerType type, uint coords);
		internal unsafe delegate void glMultiTexCoordP4uiv(TextureUnit texture, TexCoordPointerType type, uint* coords);
		internal delegate void glMultiTexCoordPointerEXT(TextureUnit texunit, int size, TexCoordPointerType type, int stride, IntPtr pointer);
		internal delegate void glMultiTexEnvfEXT(TextureUnit texunit, TextureEnvTarget target, TextureEnvParameter pname, float param);
		internal unsafe delegate void glMultiTexEnvfvEXT(TextureUnit texunit, TextureEnvTarget target, TextureEnvParameter pname, float* @params);
		internal delegate void glMultiTexEnviEXT(TextureUnit texunit, TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal unsafe delegate void glMultiTexEnvivEXT(TextureUnit texunit, TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal delegate void glMultiTexGendEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, double param);
		internal unsafe delegate void glMultiTexGendvEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, double* @params);
		internal delegate void glMultiTexGenfEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, float param);
		internal unsafe delegate void glMultiTexGenfvEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal delegate void glMultiTexGeniEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, int param);
		internal unsafe delegate void glMultiTexGenivEXT(TextureUnit texunit, TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glMultiTexImage1DEXT(TextureUnit texunit, TextureTarget target, int level, int internalformat, int width, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glMultiTexImage2DEXT(TextureUnit texunit, TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glMultiTexImage3DEXT(TextureUnit texunit, TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glMultiTexParameterfEXT(TextureUnit texunit, TextureTarget target, TextureParameterName pname, float param);
		internal unsafe delegate void glMultiTexParameterfvEXT(TextureUnit texunit, TextureTarget target, TextureParameterName pname, float* @params);
		internal delegate void glMultiTexParameteriEXT(TextureUnit texunit, TextureTarget target, TextureParameterName pname, int param);
		internal unsafe delegate void glMultiTexParameterIivEXT(TextureUnit texunit, TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glMultiTexParameterIuivEXT(TextureUnit texunit, TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glMultiTexParameterivEXT(TextureUnit texunit, TextureTarget target, TextureParameterName pname, int* @params);
		internal delegate void glMultiTexRenderbufferEXT(TextureUnit texunit, TextureTarget target, uint renderbuffer);
		internal delegate void glMultiTexSubImage1DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glMultiTexSubImage2DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glMultiTexSubImage3DEXT(TextureUnit texunit, TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal unsafe delegate void glMultMatrixd(double* m);
		internal unsafe delegate void glMultMatrixf(float* m);
		internal unsafe delegate void glMultMatrixx(int* m);
		internal unsafe delegate void glMultMatrixxOES(int* m);
		internal unsafe delegate void glMultTransposeMatrixd(double* m);
		internal unsafe delegate void glMultTransposeMatrixdARB(double* m);
		internal unsafe delegate void glMultTransposeMatrixf(float* m);
		internal unsafe delegate void glMultTransposeMatrixfARB(float* m);
		internal unsafe delegate void glMultTransposeMatrixxOES(int* m);
		#endregion

		#region N:

		internal delegate void glNamedBufferAttachMemoryNV(uint buffer, uint memory, ulong offset);
		internal delegate void glNamedBufferData(uint buffer, int size, IntPtr data, VertexBufferObjectUsage usage);
		internal delegate void glNamedBufferDataEXT(uint buffer, int size, IntPtr data, VertexBufferObjectUsage usage);
		internal delegate void glNamedBufferPageCommitmentARB(uint buffer, IntPtr offset, int size, bool commit);
		internal delegate void glNamedBufferPageCommitmentEXT(uint buffer, IntPtr offset, int size, bool commit);
		internal delegate void glNamedBufferStorage(uint buffer, int size, IntPtr data, uint flags);
		internal delegate void glNamedBufferStorageEXT(uint buffer, int size, IntPtr data, uint flags);
		internal delegate void glNamedBufferStorageExternalEXT(uint buffer, IntPtr offset, int size, IntPtr clientBuffer, uint flags);
		internal delegate void glNamedBufferStorageMemEXT(uint buffer, int size, uint memory, ulong offset);
		internal delegate void glNamedBufferSubData(uint buffer, IntPtr offset, int size, IntPtr data);
		internal delegate void glNamedBufferSubDataEXT(uint buffer, IntPtr offset, int size, IntPtr data);
		internal delegate void glNamedCopyBufferSubDataEXT(uint readBuffer, uint writeBuffer, IntPtr readOffset, IntPtr writeOffset, int size);
		internal delegate void glNamedFramebufferDrawBuffer(uint framebuffer, ColorBuffer buf);
		internal unsafe delegate void glNamedFramebufferDrawBuffers(uint framebuffer, int n, ColorBuffer* bufs);
		internal delegate void glNamedFramebufferParameteri(uint framebuffer, FramebufferParameterName pname, int param);
		internal delegate void glNamedFramebufferParameteriEXT(uint framebuffer, FramebufferParameterName pname, int param);
		internal delegate void glNamedFramebufferReadBuffer(uint framebuffer, ColorBuffer src);
		internal delegate void glNamedFramebufferRenderbuffer(uint framebuffer, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal delegate void glNamedFramebufferRenderbufferEXT(uint framebuffer, FramebufferAttachment attachment, RenderbufferTarget renderbuffertarget, uint renderbuffer);
		internal unsafe delegate void glNamedFramebufferSampleLocationsfvARB(uint framebuffer, uint start, int count, float* v);
		internal unsafe delegate void glNamedFramebufferSampleLocationsfvNV(uint framebuffer, uint start, int count, float* v);
		internal unsafe delegate void glNamedFramebufferSamplePositionsfvAMD(uint framebuffer, uint numsamples, uint pixelindex, float* values);
		internal delegate void glNamedFramebufferTexture(uint framebuffer, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glNamedFramebufferTexture1DEXT(uint framebuffer, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glNamedFramebufferTexture2DEXT(uint framebuffer, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level);
		internal delegate void glNamedFramebufferTexture3DEXT(uint framebuffer, FramebufferAttachment attachment, TextureTarget textarget, uint texture, int level, int zoffset);
		internal delegate void glNamedFramebufferTextureEXT(uint framebuffer, FramebufferAttachment attachment, uint texture, int level);
		internal delegate void glNamedFramebufferTextureFaceEXT(uint framebuffer, FramebufferAttachment attachment, uint texture, int level, TextureTarget face);
		internal delegate void glNamedFramebufferTextureLayer(uint framebuffer, FramebufferAttachment attachment, uint texture, int level, int layer);
		internal delegate void glNamedFramebufferTextureLayerEXT(uint framebuffer, FramebufferAttachment attachment, uint texture, int level, int layer);
		internal delegate void glNamedProgramLocalParameter4dEXT(uint program, ProgramTarget target, uint index, double x, double y, double z, double w);
		internal unsafe delegate void glNamedProgramLocalParameter4dvEXT(uint program, ProgramTarget target, uint index, double* @params);
		internal delegate void glNamedProgramLocalParameter4fEXT(uint program, ProgramTarget target, uint index, float x, float y, float z, float w);
		internal unsafe delegate void glNamedProgramLocalParameter4fvEXT(uint program, ProgramTarget target, uint index, float* @params);
		internal delegate void glNamedProgramLocalParameterI4iEXT(uint program, ProgramTarget target, uint index, int x, int y, int z, int w);
		internal unsafe delegate void glNamedProgramLocalParameterI4ivEXT(uint program, ProgramTarget target, uint index, int* @params);
		internal delegate void glNamedProgramLocalParameterI4uiEXT(uint program, ProgramTarget target, uint index, uint x, uint y, uint z, uint w);
		internal unsafe delegate void glNamedProgramLocalParameterI4uivEXT(uint program, ProgramTarget target, uint index, uint* @params);
		internal unsafe delegate void glNamedProgramLocalParameters4fvEXT(uint program, ProgramTarget target, uint index, int count, float* @params);
		internal unsafe delegate void glNamedProgramLocalParametersI4ivEXT(uint program, ProgramTarget target, uint index, int count, int* @params);
		internal unsafe delegate void glNamedProgramLocalParametersI4uivEXT(uint program, ProgramTarget target, uint index, int count, uint* @params);
		internal delegate void glNamedProgramStringEXT(uint program, ProgramTarget target, ProgramFormat format, int len, IntPtr @string);
		internal delegate void glNamedRenderbufferStorage(uint renderbuffer, InternalFormat internalformat, int width, int height);
		internal delegate void glNamedRenderbufferStorageEXT(uint renderbuffer, InternalFormat internalformat, int width, int height);
		internal delegate void glNamedRenderbufferStorageMultisample(uint renderbuffer, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glNamedRenderbufferStorageMultisampleAdvancedAMD(uint renderbuffer, int samples, int storageSamples, InternalFormat internalformat, int width, int height);
		internal delegate void glNamedRenderbufferStorageMultisampleCoverageEXT(uint renderbuffer, int coverageSamples, int colorSamples, InternalFormat internalformat, int width, int height);
		internal delegate void glNamedRenderbufferStorageMultisampleEXT(uint renderbuffer, int samples, InternalFormat internalformat, int width, int height);
		internal unsafe delegate void glNamedStringARB(uint type, int namelen, sbyte* name, int stringlen, sbyte* @string);
		internal delegate void glNewList(uint list, ListMode mode);
		internal delegate uint glNewObjectBufferATI(int size, IntPtr pointer, ArrayObjectUsageATI usage);
		internal delegate void glNormal3b(sbyte nx, sbyte ny, sbyte nz);
		internal unsafe delegate void glNormal3bv(sbyte* v);
		internal delegate void glNormal3d(double nx, double ny, double nz);
		internal unsafe delegate void glNormal3dv(double* v);
		internal delegate void glNormal3f(float nx, float ny, float nz);
		internal unsafe delegate void glNormal3fv(float* v);
		internal delegate void glNormal3fVertex3fSUN(float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glNormal3fVertex3fvSUN(float* n, float* v);
		internal delegate void glNormal3hNV(ushort nx, ushort ny, ushort nz);
		internal unsafe delegate void glNormal3hvNV(ushort* v);
		internal delegate void glNormal3i(int nx, int ny, int nz);
		internal unsafe delegate void glNormal3iv(int* v);
		internal delegate void glNormal3s(short nx, short ny, short nz);
		internal unsafe delegate void glNormal3sv(short* v);
		internal delegate void glNormal3x(int nx, int ny, int nz);
		internal delegate void glNormal3xOES(int nx, int ny, int nz);
		internal unsafe delegate void glNormal3xvOES(int* coords);
		internal delegate void glNormalFormatNV(uint type, int stride);
		internal delegate void glNormalP3ui(NormalPointerType type, uint coords);
		internal unsafe delegate void glNormalP3uiv(NormalPointerType type, uint* coords);
		internal delegate void glNormalPointer(NormalPointerType type, int stride, IntPtr pointer);
		internal delegate void glNormalPointerEXT(NormalPointerType type, int stride, int count, IntPtr pointer);
		internal delegate void glNormalPointerListIBM(NormalPointerType type, int stride, IntPtr pointer, int ptrstride);
		internal delegate void glNormalPointervINTEL(NormalPointerType type, IntPtr pointer);
		internal delegate void glNormalStream3bATI(VertexStreamATI stream, sbyte nx, sbyte ny, sbyte nz);
		internal unsafe delegate void glNormalStream3bvATI(VertexStreamATI stream, sbyte* coords);
		internal delegate void glNormalStream3dATI(VertexStreamATI stream, double nx, double ny, double nz);
		internal unsafe delegate void glNormalStream3dvATI(VertexStreamATI stream, double* coords);
		internal delegate void glNormalStream3fATI(VertexStreamATI stream, float nx, float ny, float nz);
		internal unsafe delegate void glNormalStream3fvATI(VertexStreamATI stream, float* coords);
		internal delegate void glNormalStream3iATI(VertexStreamATI stream, int nx, int ny, int nz);
		internal unsafe delegate void glNormalStream3ivATI(VertexStreamATI stream, int* coords);
		internal delegate void glNormalStream3sATI(VertexStreamATI stream, short nx, short ny, short nz);
		internal unsafe delegate void glNormalStream3svATI(VertexStreamATI stream, short* coords);
		#endregion

		#region O:

		internal unsafe delegate void glObjectLabel(ObjectIdentifier identifier, uint name, int length, sbyte* label);
		internal unsafe delegate void glObjectLabelKHR(ObjectIdentifier identifier, uint name, int length, sbyte* label);
		internal unsafe delegate void glObjectPtrLabel(IntPtr ptr, int length, sbyte* label);
		internal unsafe delegate void glObjectPtrLabelKHR(IntPtr ptr, int length, sbyte* label);
		internal delegate uint glObjectPurgeableAPPLE(uint objectType, uint name, uint option);
		internal delegate uint glObjectUnpurgeableAPPLE(uint objectType, uint name, uint option);
		internal delegate void glOrtho(double left, double right, double bottom, double top, double zNear, double zFar);
		internal delegate void glOrthof(float l, float r, float b, float t, float n, float f);
		internal delegate void glOrthofOES(float l, float r, float b, float t, float n, float f);
		internal delegate void glOrthox(int l, int r, int b, int t, int n, int f);
		internal delegate void glOrthoxOES(int l, int r, int b, int t, int n, int f);
		#endregion

		#region P:

		internal delegate void glPassTexCoordATI(uint dst, uint coord, SwizzleOpATI swizzle);
		internal delegate void glPassThrough(float token);
		internal delegate void glPassThroughxOES(int token);
		internal unsafe delegate void glPatchParameterfv(PatchParameterName pname, float* values);
		internal delegate void glPatchParameteri(PatchParameterName pname, int value);
		internal delegate void glPatchParameteriEXT(PatchParameterName pname, int value);
		internal delegate void glPatchParameteriOES(PatchParameterName pname, int value);
		internal unsafe delegate void glPathColorGenNV(PathColor color, PathGenMode genMode, PathColorFormat colorFormat, float* coeffs);
		internal unsafe delegate void glPathCommandsNV(uint path, int numCommands, byte* commands, int numCoords, PathCoordType coordType, IntPtr coords);
		internal delegate void glPathCoordsNV(uint path, int numCoords, PathCoordType coordType, IntPtr coords);
		internal delegate void glPathCoverDepthFuncNV(DepthFunction func);
		internal unsafe delegate void glPathDashArrayNV(uint path, int dashCount, float* dashArray);
		internal delegate void glPathFogGenNV(PathGenMode genMode);
		internal delegate uint glPathGlyphIndexArrayNV(uint firstPathName, uint fontTarget, IntPtr fontName, uint fontStyle, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate uint glPathGlyphIndexRangeNV(uint fontTarget, IntPtr fontName, uint fontStyle, uint pathParameterTemplate, float emScale, uint baseAndCount);
		internal delegate void glPathGlyphRangeNV(uint firstPathName, PathFontTarget fontTarget, IntPtr fontName, uint fontStyle, uint firstGlyph, int numGlyphs, PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate void glPathGlyphsNV(uint firstPathName, PathFontTarget fontTarget, IntPtr fontName, uint fontStyle, int numGlyphs, PathElementType type, IntPtr charcodes, PathHandleMissingGlyphs handleMissingGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate uint glPathMemoryGlyphIndexArrayNV(uint firstPathName, uint fontTarget, int fontSize, IntPtr fontData, int faceIndex, uint firstGlyphIndex, int numGlyphs, uint pathParameterTemplate, float emScale);
		internal delegate void glPathParameterfNV(uint path, PathParameter pname, float value);
		internal unsafe delegate void glPathParameterfvNV(uint path, PathParameter pname, float* value);
		internal delegate void glPathParameteriNV(uint path, PathParameter pname, int value);
		internal unsafe delegate void glPathParameterivNV(uint path, PathParameter pname, int* value);
		internal delegate void glPathStencilDepthOffsetNV(float factor, float units);
		internal delegate void glPathStencilFuncNV(StencilFunction func, int @ref, uint mask);
		internal delegate void glPathStringNV(uint path, PathStringFormat format, int length, IntPtr pathString);
		internal unsafe delegate void glPathSubCommandsNV(uint path, int commandStart, int commandsToDelete, int numCommands, byte* commands, int numCoords, PathCoordType coordType, IntPtr coords);
		internal delegate void glPathSubCoordsNV(uint path, int coordStart, int numCoords, PathCoordType coordType, IntPtr coords);
		internal unsafe delegate void glPathTexGenNV(PathColor texCoordSet, PathGenMode genMode, int components, float* coeffs);
		internal delegate void glPauseTransformFeedback();
		internal delegate void glPauseTransformFeedbackNV();
		internal delegate void glPixelDataRangeNV(PixelDataRangeTargetNV target, int length, IntPtr pointer);
		internal unsafe delegate void glPixelMapfv(PixelMap map, int mapsize, float* values);
		internal unsafe delegate void glPixelMapuiv(PixelMap map, int mapsize, uint* values);
		internal unsafe delegate void glPixelMapusv(PixelMap map, int mapsize, ushort* values);
		internal unsafe delegate void glPixelMapx(PixelMap map, int size, int* values);
		internal delegate void glPixelStoref(PixelStoreParameter pname, float param);
		internal delegate void glPixelStorei(PixelStoreParameter pname, int param);
		internal delegate void glPixelStorex(PixelStoreParameter pname, int param);
		internal delegate void glPixelTexGenParameterfSGIS(PixelTexGenParameterNameSGIS pname, float param);
		internal unsafe delegate void glPixelTexGenParameterfvSGIS(PixelTexGenParameterNameSGIS pname, float* @params);
		internal delegate void glPixelTexGenParameteriSGIS(PixelTexGenParameterNameSGIS pname, int param);
		internal unsafe delegate void glPixelTexGenParameterivSGIS(PixelTexGenParameterNameSGIS pname, int* @params);
		internal delegate void glPixelTexGenSGIX(PixelTexGenModeSGIX mode);
		internal delegate void glPixelTransferf(PixelTransferParameter pname, float param);
		internal delegate void glPixelTransferi(PixelTransferParameter pname, int param);
		internal delegate void glPixelTransferxOES(PixelTransferParameter pname, int param);
		internal delegate void glPixelTransformParameterfEXT(PixelTransformTargetEXT target, PixelTransformPNameEXT pname, float param);
		internal unsafe delegate void glPixelTransformParameterfvEXT(PixelTransformTargetEXT target, PixelTransformPNameEXT pname, float* @params);
		internal delegate void glPixelTransformParameteriEXT(PixelTransformTargetEXT target, PixelTransformPNameEXT pname, int param);
		internal unsafe delegate void glPixelTransformParameterivEXT(PixelTransformTargetEXT target, PixelTransformPNameEXT pname, int* @params);
		internal delegate void glPixelZoom(float xfactor, float yfactor);
		internal delegate void glPixelZoomxOES(int xfactor, int yfactor);
		internal delegate void glPNTrianglesfATI(PNTrianglesPNameATI pname, float param);
		internal delegate void glPNTrianglesiATI(PNTrianglesPNameATI pname, int param);
		internal unsafe delegate bool glPointAlongPathNV(uint path, int startSegment, int numSegments, float distance, float* x, float* y, float* tangentX, float* tangentY);
		internal delegate void glPointParameterf(PointParameterNameARB pname, float param);
		internal delegate void glPointParameterfARB(PointParameterNameARB pname, float param);
		internal delegate void glPointParameterfEXT(PointParameterNameARB pname, float param);
		internal delegate void glPointParameterfSGIS(PointParameterNameARB pname, float param);
		internal unsafe delegate void glPointParameterfv(PointParameterNameARB pname, float* @params);
		internal unsafe delegate void glPointParameterfvARB(PointParameterNameARB pname, float* @params);
		internal unsafe delegate void glPointParameterfvEXT(PointParameterNameARB pname, float* @params);
		internal unsafe delegate void glPointParameterfvSGIS(PointParameterNameARB pname, float* @params);
		internal delegate void glPointParameteri(PointParameterNameARB pname, int param);
		internal delegate void glPointParameteriNV(PointParameterNameARB pname, int param);
		internal unsafe delegate void glPointParameteriv(PointParameterNameARB pname, int* @params);
		internal unsafe delegate void glPointParameterivNV(PointParameterNameARB pname, int* @params);
		internal delegate void glPointParameterx(PointParameterNameARB pname, int param);
		internal delegate void glPointParameterxOES(PointParameterNameARB pname, int param);
		internal unsafe delegate void glPointParameterxv(PointParameterNameARB pname, int* @params);
		internal unsafe delegate void glPointParameterxvOES(PointParameterNameARB pname, int* @params);
		internal delegate void glPointSize(float size);
		internal delegate void glPointSizePointerOES(uint type, int stride, IntPtr pointer);
		internal delegate void glPointSizex(int size);
		internal delegate void glPointSizexOES(int size);
		internal unsafe delegate int glPollAsyncSGIX(uint* markerp);
		internal unsafe delegate int glPollInstrumentsSGIX(int* marker_p);
		internal delegate void glPolygonMode(MaterialFace face, PolygonMode mode);
		internal delegate void glPolygonModeNV(MaterialFace face, PolygonMode mode);
		internal delegate void glPolygonOffset(float factor, float units);
		internal delegate void glPolygonOffsetClamp(float factor, float units, float clamp);
		internal delegate void glPolygonOffsetClampEXT(float factor, float units, float clamp);
		internal delegate void glPolygonOffsetEXT(float factor, float bias);
		internal delegate void glPolygonOffsetx(int factor, int units);
		internal delegate void glPolygonOffsetxOES(int factor, int units);
		internal unsafe delegate void glPolygonStipple(byte* mask);
		internal delegate void glPopAttrib();
		internal delegate void glPopClientAttrib();
		internal delegate void glPopDebugGroup();
		internal delegate void glPopDebugGroupKHR();
		internal delegate void glPopGroupMarkerEXT();
		internal delegate void glPopMatrix();
		internal delegate void glPopName();
		internal delegate void glPresentFrameDualFillNV(uint video_slot, ulong minPresentTime, uint beginPresentTimeId, uint presentDurationId, uint type, uint target0, uint fill0, uint target1, uint fill1, uint target2, uint fill2, uint target3, uint fill3);
		internal delegate void glPresentFrameKeyedNV(uint video_slot, ulong minPresentTime, uint beginPresentTimeId, uint presentDurationId, uint type, uint target0, uint fill0, uint key0, uint target1, uint fill1, uint key1);
		internal delegate void glPrimitiveBoundingBox(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal delegate void glPrimitiveBoundingBoxARB(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal delegate void glPrimitiveBoundingBoxEXT(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal delegate void glPrimitiveBoundingBoxOES(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
		internal delegate void glPrimitiveRestartIndex(uint index);
		internal delegate void glPrimitiveRestartIndexNV(uint index);
		internal delegate void glPrimitiveRestartNV();
		internal unsafe delegate void glPrioritizeTextures(int n, uint* textures, float* priorities);
		internal unsafe delegate void glPrioritizeTexturesEXT(int n, uint* textures, float* priorities);
		internal unsafe delegate void glPrioritizeTexturesxOES(int n, uint* textures, int* priorities);
		internal delegate void glProgramBinary(uint program, uint binaryFormat, IntPtr binary, int length);
		internal delegate void glProgramBinaryOES(uint program, uint binaryFormat, IntPtr binary, int length);
		internal unsafe delegate void glProgramBufferParametersfvNV(ProgramTarget target, uint bindingIndex, uint wordIndex, int count, float* @params);
		internal unsafe delegate void glProgramBufferParametersIivNV(ProgramTarget target, uint bindingIndex, uint wordIndex, int count, int* @params);
		internal unsafe delegate void glProgramBufferParametersIuivNV(ProgramTarget target, uint bindingIndex, uint wordIndex, int count, uint* @params);
		internal delegate void glProgramEnvParameter4dARB(ProgramTarget target, uint index, double x, double y, double z, double w);
		internal unsafe delegate void glProgramEnvParameter4dvARB(ProgramTarget target, uint index, double* @params);
		internal delegate void glProgramEnvParameter4fARB(ProgramTarget target, uint index, float x, float y, float z, float w);
		internal unsafe delegate void glProgramEnvParameter4fvARB(ProgramTarget target, uint index, float* @params);
		internal delegate void glProgramEnvParameterI4iNV(ProgramTarget target, uint index, int x, int y, int z, int w);
		internal unsafe delegate void glProgramEnvParameterI4ivNV(ProgramTarget target, uint index, int* @params);
		internal delegate void glProgramEnvParameterI4uiNV(ProgramTarget target, uint index, uint x, uint y, uint z, uint w);
		internal unsafe delegate void glProgramEnvParameterI4uivNV(ProgramTarget target, uint index, uint* @params);
		internal unsafe delegate void glProgramEnvParameters4fvEXT(ProgramTarget target, uint index, int count, float* @params);
		internal unsafe delegate void glProgramEnvParametersI4ivNV(ProgramTarget target, uint index, int count, int* @params);
		internal unsafe delegate void glProgramEnvParametersI4uivNV(ProgramTarget target, uint index, int count, uint* @params);
		internal delegate void glProgramLocalParameter4dARB(ProgramTarget target, uint index, double x, double y, double z, double w);
		internal unsafe delegate void glProgramLocalParameter4dvARB(ProgramTarget target, uint index, double* @params);
		internal delegate void glProgramLocalParameter4fARB(ProgramTarget target, uint index, float x, float y, float z, float w);
		internal unsafe delegate void glProgramLocalParameter4fvARB(ProgramTarget target, uint index, float* @params);
		internal delegate void glProgramLocalParameterI4iNV(ProgramTarget target, uint index, int x, int y, int z, int w);
		internal unsafe delegate void glProgramLocalParameterI4ivNV(ProgramTarget target, uint index, int* @params);
		internal delegate void glProgramLocalParameterI4uiNV(ProgramTarget target, uint index, uint x, uint y, uint z, uint w);
		internal unsafe delegate void glProgramLocalParameterI4uivNV(ProgramTarget target, uint index, uint* @params);
		internal unsafe delegate void glProgramLocalParameters4fvEXT(ProgramTarget target, uint index, int count, float* @params);
		internal unsafe delegate void glProgramLocalParametersI4ivNV(ProgramTarget target, uint index, int count, int* @params);
		internal unsafe delegate void glProgramLocalParametersI4uivNV(ProgramTarget target, uint index, int count, uint* @params);
		internal unsafe delegate void glProgramNamedParameter4dNV(uint id, int len, byte* name, double x, double y, double z, double w);
		internal unsafe delegate void glProgramNamedParameter4dvNV(uint id, int len, byte* name, double* v);
		internal unsafe delegate void glProgramNamedParameter4fNV(uint id, int len, byte* name, float x, float y, float z, float w);
		internal unsafe delegate void glProgramNamedParameter4fvNV(uint id, int len, byte* name, float* v);
		internal delegate void glProgramParameter4dNV(VertexAttribEnumNV target, uint index, double x, double y, double z, double w);
		internal unsafe delegate void glProgramParameter4dvNV(VertexAttribEnumNV target, uint index, double* v);
		internal delegate void glProgramParameter4fNV(VertexAttribEnumNV target, uint index, float x, float y, float z, float w);
		internal unsafe delegate void glProgramParameter4fvNV(VertexAttribEnumNV target, uint index, float* v);
		internal delegate void glProgramParameteri(uint program, ProgramParameterPName pname, int value);
		internal delegate void glProgramParameteriARB(uint program, ProgramParameterPName pname, int value);
		internal delegate void glProgramParameteriEXT(uint program, ProgramParameterPName pname, int value);
		internal unsafe delegate void glProgramParameters4dvNV(VertexAttribEnumNV target, uint index, int count, double* v);
		internal unsafe delegate void glProgramParameters4fvNV(VertexAttribEnumNV target, uint index, int count, float* v);
		internal unsafe delegate void glProgramPathFragmentInputGenNV(uint program, int location, uint genMode, int components, float* coeffs);
		internal delegate void glProgramStringARB(ProgramTarget target, ProgramFormat format, int len, IntPtr @string);
		internal unsafe delegate void glProgramSubroutineParametersuivNV(uint target, int count, uint* @params);
		internal delegate void glProgramUniform1d(uint program, int location, double v0);
		internal delegate void glProgramUniform1dEXT(uint program, int location, double x);
		internal unsafe delegate void glProgramUniform1dv(uint program, int location, int count, double* value);
		internal unsafe delegate void glProgramUniform1dvEXT(uint program, int location, int count, double* value);
		internal delegate void glProgramUniform1f(uint program, int location, float v0);
		internal delegate void glProgramUniform1fEXT(uint program, int location, float v0);
		internal unsafe delegate void glProgramUniform1fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform1fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform1i(uint program, int location, int v0);
		internal delegate void glProgramUniform1i64ARB(uint program, int location, long x);
		internal delegate void glProgramUniform1i64NV(uint program, int location, long x);
		internal unsafe delegate void glProgramUniform1i64vARB(uint program, int location, int count, long* value);
		internal unsafe delegate void glProgramUniform1i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform1iEXT(uint program, int location, int v0);
		internal unsafe delegate void glProgramUniform1iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform1ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform1ui(uint program, int location, uint v0);
		internal delegate void glProgramUniform1ui64ARB(uint program, int location, ulong x);
		internal delegate void glProgramUniform1ui64NV(uint program, int location, ulong x);
		internal unsafe delegate void glProgramUniform1ui64vARB(uint program, int location, int count, ulong* value);
		internal unsafe delegate void glProgramUniform1ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform1uiEXT(uint program, int location, uint v0);
		internal unsafe delegate void glProgramUniform1uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform1uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniform2d(uint program, int location, double v0, double v1);
		internal delegate void glProgramUniform2dEXT(uint program, int location, double x, double y);
		internal unsafe delegate void glProgramUniform2dv(uint program, int location, int count, double* value);
		internal unsafe delegate void glProgramUniform2dvEXT(uint program, int location, int count, double* value);
		internal delegate void glProgramUniform2f(uint program, int location, float v0, float v1);
		internal delegate void glProgramUniform2fEXT(uint program, int location, float v0, float v1);
		internal unsafe delegate void glProgramUniform2fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform2fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform2i(uint program, int location, int v0, int v1);
		internal delegate void glProgramUniform2i64ARB(uint program, int location, long x, long y);
		internal delegate void glProgramUniform2i64NV(uint program, int location, long x, long y);
		internal unsafe delegate void glProgramUniform2i64vARB(uint program, int location, int count, long* value);
		internal unsafe delegate void glProgramUniform2i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform2iEXT(uint program, int location, int v0, int v1);
		internal unsafe delegate void glProgramUniform2iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform2ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform2ui(uint program, int location, uint v0, uint v1);
		internal delegate void glProgramUniform2ui64ARB(uint program, int location, ulong x, ulong y);
		internal delegate void glProgramUniform2ui64NV(uint program, int location, ulong x, ulong y);
		internal unsafe delegate void glProgramUniform2ui64vARB(uint program, int location, int count, ulong* value);
		internal unsafe delegate void glProgramUniform2ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform2uiEXT(uint program, int location, uint v0, uint v1);
		internal unsafe delegate void glProgramUniform2uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform2uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniform3d(uint program, int location, double v0, double v1, double v2);
		internal delegate void glProgramUniform3dEXT(uint program, int location, double x, double y, double z);
		internal unsafe delegate void glProgramUniform3dv(uint program, int location, int count, double* value);
		internal unsafe delegate void glProgramUniform3dvEXT(uint program, int location, int count, double* value);
		internal delegate void glProgramUniform3f(uint program, int location, float v0, float v1, float v2);
		internal delegate void glProgramUniform3fEXT(uint program, int location, float v0, float v1, float v2);
		internal unsafe delegate void glProgramUniform3fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform3fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform3i(uint program, int location, int v0, int v1, int v2);
		internal delegate void glProgramUniform3i64ARB(uint program, int location, long x, long y, long z);
		internal delegate void glProgramUniform3i64NV(uint program, int location, long x, long y, long z);
		internal unsafe delegate void glProgramUniform3i64vARB(uint program, int location, int count, long* value);
		internal unsafe delegate void glProgramUniform3i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform3iEXT(uint program, int location, int v0, int v1, int v2);
		internal unsafe delegate void glProgramUniform3iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform3ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform3ui(uint program, int location, uint v0, uint v1, uint v2);
		internal delegate void glProgramUniform3ui64ARB(uint program, int location, ulong x, ulong y, ulong z);
		internal delegate void glProgramUniform3ui64NV(uint program, int location, ulong x, ulong y, ulong z);
		internal unsafe delegate void glProgramUniform3ui64vARB(uint program, int location, int count, ulong* value);
		internal unsafe delegate void glProgramUniform3ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform3uiEXT(uint program, int location, uint v0, uint v1, uint v2);
		internal unsafe delegate void glProgramUniform3uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform3uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniform4d(uint program, int location, double v0, double v1, double v2, double v3);
		internal delegate void glProgramUniform4dEXT(uint program, int location, double x, double y, double z, double w);
		internal unsafe delegate void glProgramUniform4dv(uint program, int location, int count, double* value);
		internal unsafe delegate void glProgramUniform4dvEXT(uint program, int location, int count, double* value);
		internal delegate void glProgramUniform4f(uint program, int location, float v0, float v1, float v2, float v3);
		internal delegate void glProgramUniform4fEXT(uint program, int location, float v0, float v1, float v2, float v3);
		internal unsafe delegate void glProgramUniform4fv(uint program, int location, int count, float* value);
		internal unsafe delegate void glProgramUniform4fvEXT(uint program, int location, int count, float* value);
		internal delegate void glProgramUniform4i(uint program, int location, int v0, int v1, int v2, int v3);
		internal delegate void glProgramUniform4i64ARB(uint program, int location, long x, long y, long z, long w);
		internal delegate void glProgramUniform4i64NV(uint program, int location, long x, long y, long z, long w);
		internal unsafe delegate void glProgramUniform4i64vARB(uint program, int location, int count, long* value);
		internal unsafe delegate void glProgramUniform4i64vNV(uint program, int location, int count, long* value);
		internal delegate void glProgramUniform4iEXT(uint program, int location, int v0, int v1, int v2, int v3);
		internal unsafe delegate void glProgramUniform4iv(uint program, int location, int count, int* value);
		internal unsafe delegate void glProgramUniform4ivEXT(uint program, int location, int count, int* value);
		internal delegate void glProgramUniform4ui(uint program, int location, uint v0, uint v1, uint v2, uint v3);
		internal delegate void glProgramUniform4ui64ARB(uint program, int location, ulong x, ulong y, ulong z, ulong w);
		internal delegate void glProgramUniform4ui64NV(uint program, int location, ulong x, ulong y, ulong z, ulong w);
		internal unsafe delegate void glProgramUniform4ui64vARB(uint program, int location, int count, ulong* value);
		internal unsafe delegate void glProgramUniform4ui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramUniform4uiEXT(uint program, int location, uint v0, uint v1, uint v2, uint v3);
		internal unsafe delegate void glProgramUniform4uiv(uint program, int location, int count, uint* value);
		internal unsafe delegate void glProgramUniform4uivEXT(uint program, int location, int count, uint* value);
		internal delegate void glProgramUniformHandleui64ARB(uint program, int location, ulong value);
		internal delegate void glProgramUniformHandleui64IMG(uint program, int location, ulong value);
		internal delegate void glProgramUniformHandleui64NV(uint program, int location, ulong value);
		internal unsafe delegate void glProgramUniformHandleui64vARB(uint program, int location, int count, ulong* values);
		internal unsafe delegate void glProgramUniformHandleui64vIMG(uint program, int location, int count, ulong* values);
		internal unsafe delegate void glProgramUniformHandleui64vNV(uint program, int location, int count, ulong* values);
		internal unsafe delegate void glProgramUniformMatrix2dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix2dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix2fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x3dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix2x3dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix2x3fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x3fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x4dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix2x4dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix2x4fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix2x4fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix3dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix3fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x2dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix3x2dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix3x2fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x2fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x4dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix3x4dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix3x4fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix3x4fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix4dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix4fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x2dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix4x2dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix4x2fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x2fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x3dv(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix4x3dvEXT(uint program, int location, int count, bool transpose, double* value);
		internal unsafe delegate void glProgramUniformMatrix4x3fv(uint program, int location, int count, bool transpose, float* value);
		internal unsafe delegate void glProgramUniformMatrix4x3fvEXT(uint program, int location, int count, bool transpose, float* value);
		internal delegate void glProgramUniformui64NV(uint program, int location, ulong value);
		internal unsafe delegate void glProgramUniformui64vNV(uint program, int location, int count, ulong* value);
		internal delegate void glProgramVertexLimitNV(ProgramTarget target, int limit);
		internal delegate void glProvokingVertex(VertexProvokingMode mode);
		internal delegate void glProvokingVertexEXT(VertexProvokingMode mode);
		internal delegate void glPushAttrib(uint mask);
		internal delegate void glPushClientAttrib(uint mask);
		internal delegate void glPushClientAttribDefaultEXT(uint mask);
		internal unsafe delegate void glPushDebugGroup(DebugSource source, uint id, int length, sbyte* message);
		internal unsafe delegate void glPushDebugGroupKHR(DebugSource source, uint id, int length, sbyte* message);
		internal unsafe delegate void glPushGroupMarkerEXT(int length, sbyte* marker);
		internal delegate void glPushMatrix();
		internal delegate void glPushName(uint name);
		#endregion

		#region Q:

		internal delegate void glQueryCounter(uint id, QueryCounterTarget target);
		internal delegate void glQueryCounterEXT(uint id, QueryCounterTarget target);
		internal unsafe delegate uint glQueryMatrixxOES(int* mantissa, int* exponent);
		internal delegate void glQueryObjectParameteruiAMD(QueryTarget target, uint id, uint pname, uint param);
		internal unsafe delegate int glQueryResourceNV(uint queryType, int tagId, uint count, int* buffer);
		internal unsafe delegate void glQueryResourceTagNV(int tagId, sbyte* tagString);
		#endregion

		#region R:

		internal delegate void glRasterPos2d(double x, double y);
		internal unsafe delegate void glRasterPos2dv(double* v);
		internal delegate void glRasterPos2f(float x, float y);
		internal unsafe delegate void glRasterPos2fv(float* v);
		internal delegate void glRasterPos2i(int x, int y);
		internal unsafe delegate void glRasterPos2iv(int* v);
		internal delegate void glRasterPos2s(short x, short y);
		internal unsafe delegate void glRasterPos2sv(short* v);
		internal delegate void glRasterPos2xOES(int x, int y);
		internal unsafe delegate void glRasterPos2xvOES(int* coords);
		internal delegate void glRasterPos3d(double x, double y, double z);
		internal unsafe delegate void glRasterPos3dv(double* v);
		internal delegate void glRasterPos3f(float x, float y, float z);
		internal unsafe delegate void glRasterPos3fv(float* v);
		internal delegate void glRasterPos3i(int x, int y, int z);
		internal unsafe delegate void glRasterPos3iv(int* v);
		internal delegate void glRasterPos3s(short x, short y, short z);
		internal unsafe delegate void glRasterPos3sv(short* v);
		internal delegate void glRasterPos3xOES(int x, int y, int z);
		internal unsafe delegate void glRasterPos3xvOES(int* coords);
		internal delegate void glRasterPos4d(double x, double y, double z, double w);
		internal unsafe delegate void glRasterPos4dv(double* v);
		internal delegate void glRasterPos4f(float x, float y, float z, float w);
		internal unsafe delegate void glRasterPos4fv(float* v);
		internal delegate void glRasterPos4i(int x, int y, int z, int w);
		internal unsafe delegate void glRasterPos4iv(int* v);
		internal delegate void glRasterPos4s(short x, short y, short z, short w);
		internal unsafe delegate void glRasterPos4sv(short* v);
		internal delegate void glRasterPos4xOES(int x, int y, int z, int w);
		internal unsafe delegate void glRasterPos4xvOES(int* coords);
		internal delegate void glRasterSamplesEXT(uint samples, bool fixedsamplelocations);
		internal delegate void glReadBuffer(ReadBufferMode src);
		internal delegate void glReadBufferIndexedEXT(ReadBufferMode src, int index);
		internal delegate void glReadBufferNV(uint mode);
		internal delegate void glReadInstrumentsSGIX(int marker);
		internal delegate void glReadnPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadnPixelsARB(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadnPixelsEXT(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadnPixelsKHR(int x, int y, int width, int height, PixelFormat format, PixelType type, int bufSize, IntPtr data);
		internal delegate void glReadPixels(int x, int y, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glRectd(double x1, double y1, double x2, double y2);
		internal unsafe delegate void glRectdv(double* v1, double* v2);
		internal delegate void glRectf(float x1, float y1, float x2, float y2);
		internal unsafe delegate void glRectfv(float* v1, float* v2);
		internal delegate void glRecti(int x1, int y1, int x2, int y2);
		internal unsafe delegate void glRectiv(int* v1, int* v2);
		internal delegate void glRects(short x1, short y1, short x2, short y2);
		internal unsafe delegate void glRectsv(short* v1, short* v2);
		internal delegate void glRectxOES(int x1, int y1, int x2, int y2);
		internal unsafe delegate void glRectxvOES(int* v1, int* v2);
		internal unsafe delegate void glReferencePlaneSGIX(double* equation);
		internal delegate bool glReleaseKeyedMutexWin32EXT(uint memory, ulong key);
		internal delegate void glReleaseShaderCompiler();
		internal delegate void glRenderbufferStorage(RenderbufferTarget target, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageEXT(RenderbufferTarget target, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisample(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleAdvancedAMD(RenderbufferTarget target, int samples, int storageSamples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleANGLE(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleAPPLE(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleCoverageNV(RenderbufferTarget target, int coverageSamples, int colorSamples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleEXT(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleIMG(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageMultisampleNV(RenderbufferTarget target, int samples, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderbufferStorageOES(RenderbufferTarget target, InternalFormat internalformat, int width, int height);
		internal delegate void glRenderGpuMaskNV(uint mask);
		internal delegate int glRenderMode(RenderingMode mode);
		internal delegate void glReplacementCodePointerSUN(ReplacementCodeTypeSUN type, int stride, IntPtr pointer);
		internal delegate void glReplacementCodeubSUN(byte code);
		internal unsafe delegate void glReplacementCodeubvSUN(byte* code);
		internal delegate void glReplacementCodeuiColor3fVertex3fSUN(uint rc, float r, float g, float b, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiColor3fVertex3fvSUN(uint* rc, float* c, float* v);
		internal delegate void glReplacementCodeuiColor4fNormal3fVertex3fSUN(uint rc, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiColor4fNormal3fVertex3fvSUN(uint* rc, float* c, float* n, float* v);
		internal delegate void glReplacementCodeuiColor4ubVertex3fSUN(uint rc, byte r, byte g, byte b, byte a, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiColor4ubVertex3fvSUN(uint* rc, byte* c, float* v);
		internal delegate void glReplacementCodeuiNormal3fVertex3fSUN(uint rc, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiNormal3fVertex3fvSUN(uint* rc, float* n, float* v);
		internal delegate void glReplacementCodeuiSUN(uint code);
		internal delegate void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(uint rc, float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(uint* rc, float* tc, float* c, float* n, float* v);
		internal delegate void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(uint rc, float s, float t, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(uint* rc, float* tc, float* n, float* v);
		internal delegate void glReplacementCodeuiTexCoord2fVertex3fSUN(uint rc, float s, float t, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiTexCoord2fVertex3fvSUN(uint* rc, float* tc, float* v);
		internal delegate void glReplacementCodeuiVertex3fSUN(uint rc, float x, float y, float z);
		internal unsafe delegate void glReplacementCodeuiVertex3fvSUN(uint* rc, float* v);
		internal unsafe delegate void glReplacementCodeuivSUN(uint* code);
		internal delegate void glReplacementCodeusSUN(ushort code);
		internal unsafe delegate void glReplacementCodeusvSUN(ushort* code);
		internal unsafe delegate void glRequestResidentProgramsNV(int n, uint* programs);
		internal delegate void glResetHistogram(HistogramTargetEXT target);
		internal delegate void glResetHistogramEXT(HistogramTargetEXT target);
		internal delegate void glResetMemoryObjectParameterNV(uint memory, uint pname);
		internal delegate void glResetMinmax(MinmaxTargetEXT target);
		internal delegate void glResetMinmaxEXT(MinmaxTargetEXT target);
		internal delegate void glResizeBuffersMESA();
		internal delegate void glResolveDepthValuesNV();
		internal delegate void glResolveMultisampleFramebufferAPPLE();
		internal delegate void glResumeTransformFeedback();
		internal delegate void glResumeTransformFeedbackNV();
		internal delegate void glRotated(double angle, double x, double y, double z);
		internal delegate void glRotatef(float angle, float x, float y, float z);
		internal delegate void glRotatex(int angle, int x, int y, int z);
		internal delegate void glRotatexOES(int angle, int x, int y, int z);
		#endregion

		#region S:

		internal delegate void glSampleCoverage(float value, bool invert);
		internal delegate void glSampleCoverageARB(float value, bool invert);
		internal delegate void glSampleCoveragex(int value, bool invert);
		internal delegate void glSampleCoveragexOES(int value, bool invert);
		internal delegate void glSampleMapATI(uint dst, uint interp, SwizzleOpATI swizzle);
		internal delegate void glSampleMaskEXT(float value, bool invert);
		internal delegate void glSampleMaski(uint maskNumber, uint mask);
		internal delegate void glSampleMaskIndexedNV(uint index, uint mask);
		internal delegate void glSampleMaskSGIS(float value, bool invert);
		internal delegate void glSamplePatternEXT(SamplePatternEXT pattern);
		internal delegate void glSamplePatternSGIS(SamplePatternSGIS pattern);
		internal delegate void glSamplerParameterf(uint sampler, SamplerParameterF pname, float param);
		internal unsafe delegate void glSamplerParameterfv(uint sampler, SamplerParameterF pname, float* param);
		internal delegate void glSamplerParameteri(uint sampler, SamplerParameterI pname, int param);
		internal unsafe delegate void glSamplerParameterIiv(uint sampler, SamplerParameterI pname, int* param);
		internal unsafe delegate void glSamplerParameterIivEXT(uint sampler, SamplerParameterI pname, int* param);
		internal unsafe delegate void glSamplerParameterIivOES(uint sampler, SamplerParameterI pname, int* param);
		internal unsafe delegate void glSamplerParameterIuiv(uint sampler, SamplerParameterI pname, uint* param);
		internal unsafe delegate void glSamplerParameterIuivEXT(uint sampler, SamplerParameterI pname, uint* param);
		internal unsafe delegate void glSamplerParameterIuivOES(uint sampler, SamplerParameterI pname, uint* param);
		internal unsafe delegate void glSamplerParameteriv(uint sampler, SamplerParameterI pname, int* param);
		internal delegate void glScaled(double x, double y, double z);
		internal delegate void glScalef(float x, float y, float z);
		internal delegate void glScalex(int x, int y, int z);
		internal delegate void glScalexOES(int x, int y, int z);
		internal delegate void glScissor(int x, int y, int width, int height);
		internal unsafe delegate void glScissorArrayv(uint first, int count, int* v);
		internal unsafe delegate void glScissorArrayvNV(uint first, int count, int* v);
		internal unsafe delegate void glScissorArrayvOES(uint first, int count, int* v);
		internal unsafe delegate void glScissorExclusiveArrayvNV(uint first, int count, int* v);
		internal delegate void glScissorExclusiveNV(int x, int y, int width, int height);
		internal delegate void glScissorIndexed(uint index, int left, int bottom, int width, int height);
		internal delegate void glScissorIndexedNV(uint index, int left, int bottom, int width, int height);
		internal delegate void glScissorIndexedOES(uint index, int left, int bottom, int width, int height);
		internal unsafe delegate void glScissorIndexedv(uint index, int* v);
		internal unsafe delegate void glScissorIndexedvNV(uint index, int* v);
		internal unsafe delegate void glScissorIndexedvOES(uint index, int* v);
		internal delegate void glSecondaryColor3b(sbyte red, sbyte green, sbyte blue);
		internal delegate void glSecondaryColor3bEXT(sbyte red, sbyte green, sbyte blue);
		internal unsafe delegate void glSecondaryColor3bv(sbyte* v);
		internal unsafe delegate void glSecondaryColor3bvEXT(sbyte* v);
		internal delegate void glSecondaryColor3d(double red, double green, double blue);
		internal delegate void glSecondaryColor3dEXT(double red, double green, double blue);
		internal unsafe delegate void glSecondaryColor3dv(double* v);
		internal unsafe delegate void glSecondaryColor3dvEXT(double* v);
		internal delegate void glSecondaryColor3f(float red, float green, float blue);
		internal delegate void glSecondaryColor3fEXT(float red, float green, float blue);
		internal unsafe delegate void glSecondaryColor3fv(float* v);
		internal unsafe delegate void glSecondaryColor3fvEXT(float* v);
		internal delegate void glSecondaryColor3hNV(ushort red, ushort green, ushort blue);
		internal unsafe delegate void glSecondaryColor3hvNV(ushort* v);
		internal delegate void glSecondaryColor3i(int red, int green, int blue);
		internal delegate void glSecondaryColor3iEXT(int red, int green, int blue);
		internal unsafe delegate void glSecondaryColor3iv(int* v);
		internal unsafe delegate void glSecondaryColor3ivEXT(int* v);
		internal delegate void glSecondaryColor3s(short red, short green, short blue);
		internal delegate void glSecondaryColor3sEXT(short red, short green, short blue);
		internal unsafe delegate void glSecondaryColor3sv(short* v);
		internal unsafe delegate void glSecondaryColor3svEXT(short* v);
		internal delegate void glSecondaryColor3ub(byte red, byte green, byte blue);
		internal delegate void glSecondaryColor3ubEXT(byte red, byte green, byte blue);
		internal unsafe delegate void glSecondaryColor3ubv(byte* v);
		internal unsafe delegate void glSecondaryColor3ubvEXT(byte* v);
		internal delegate void glSecondaryColor3ui(uint red, uint green, uint blue);
		internal delegate void glSecondaryColor3uiEXT(uint red, uint green, uint blue);
		internal unsafe delegate void glSecondaryColor3uiv(uint* v);
		internal unsafe delegate void glSecondaryColor3uivEXT(uint* v);
		internal delegate void glSecondaryColor3us(ushort red, ushort green, ushort blue);
		internal delegate void glSecondaryColor3usEXT(ushort red, ushort green, ushort blue);
		internal unsafe delegate void glSecondaryColor3usv(ushort* v);
		internal unsafe delegate void glSecondaryColor3usvEXT(ushort* v);
		internal delegate void glSecondaryColorFormatNV(int size, ColorPointerType type, int stride);
		internal delegate void glSecondaryColorP3ui(ColorPointerType type, uint color);
		internal unsafe delegate void glSecondaryColorP3uiv(ColorPointerType type, uint* color);
		internal delegate void glSecondaryColorPointer(int size, ColorPointerType type, int stride, IntPtr pointer);
		internal delegate void glSecondaryColorPointerEXT(int size, ColorPointerType type, int stride, IntPtr pointer);
		internal delegate void glSecondaryColorPointerListIBM(int size, SecondaryColorPointerTypeIBM type, int stride, IntPtr pointer, int ptrstride);
		internal unsafe delegate void glSelectBuffer(int size, uint* buffer);
		internal unsafe delegate void glSelectPerfMonitorCountersAMD(uint monitor, bool enable, uint group, int numCounters, uint* counterList);
		internal unsafe delegate void glSemaphoreParameterui64vEXT(uint semaphore, SemaphoreParameterName pname, ulong* @params);
		internal delegate void glSeparableFilter2D(SeparableTargetEXT target, InternalFormat internalformat, int width, int height, PixelFormat format, PixelType type, IntPtr row, IntPtr column);
		internal delegate void glSeparableFilter2DEXT(SeparableTargetEXT target, InternalFormat internalformat, int width, int height, PixelFormat format, PixelType type, IntPtr row, IntPtr column);
		internal delegate void glSetFenceAPPLE(uint fence);
		internal delegate void glSetFenceNV(uint fence, FenceConditionNV condition);
		internal unsafe delegate void glSetFragmentShaderConstantATI(uint dst, float* value);
		internal delegate void glSetInvariantEXT(uint id, ScalarType type, IntPtr addr);
		internal delegate void glSetLocalConstantEXT(uint id, ScalarType type, IntPtr addr);
		internal unsafe delegate void glSetMultisamplefvAMD(uint pname, uint index, float* val);
		internal delegate void glShadeModel(ShadingModel mode);
		internal unsafe delegate void glShaderBinary(int count, uint* shaders, uint binaryformat, IntPtr binary, int length);
		internal delegate void glShaderOp1EXT(VertexShaderOpEXT op, uint res, uint arg1);
		internal delegate void glShaderOp2EXT(VertexShaderOpEXT op, uint res, uint arg1, uint arg2);
		internal delegate void glShaderOp3EXT(VertexShaderOpEXT op, uint res, uint arg1, uint arg2, uint arg3);
		internal unsafe delegate void glShaderSource(uint shader, int count, sbyte* @string, int* length);
		internal unsafe delegate void glShaderSourceARB(uint shaderObj, int count, sbyte* @string, int* length);
		internal delegate void glShaderStorageBlockBinding(uint program, uint storageBlockIndex, uint storageBlockBinding);
		internal delegate void glShadingRateImageBarrierNV(bool synchronize);
		internal unsafe delegate void glShadingRateImagePaletteNV(uint viewport, uint first, int count, uint* rates);
		internal delegate void glShadingRateQCOM(ShadingRateQCOM rate);
		internal unsafe delegate void glShadingRateSampleOrderCustomNV(uint rate, uint samples, int* locations);
		internal delegate void glShadingRateSampleOrderNV(uint order);
		internal unsafe delegate void glSharpenTexFuncSGIS(TextureTarget target, int n, float* points);
		internal unsafe delegate void glSignalSemaphoreEXT(uint semaphore, uint numBufferBarriers, uint* buffers, uint numTextureBarriers, uint* textures, TextureLayout* dstLayouts);
		internal unsafe delegate void glSignalSemaphoreui64NVX(uint signalGpu, int fenceObjectCount, uint* semaphoreArray, ulong* fenceValueArray);
		internal delegate void glSignalVkFenceNV(ulong vkFence);
		internal delegate void glSignalVkSemaphoreNV(ulong vkSemaphore);
		internal unsafe delegate void glSpecializeShader(uint shader, sbyte* pEntryPoint, uint numSpecializationConstants, uint* pConstantIndex, uint* pConstantValue);
		internal unsafe delegate void glSpecializeShaderARB(uint shader, sbyte* pEntryPoint, uint numSpecializationConstants, uint* pConstantIndex, uint* pConstantValue);
		internal delegate void glSpriteParameterfSGIX(SpriteParameterNameSGIX pname, float param);
		internal unsafe delegate void glSpriteParameterfvSGIX(SpriteParameterNameSGIX pname, float* @params);
		internal delegate void glSpriteParameteriSGIX(SpriteParameterNameSGIX pname, int param);
		internal unsafe delegate void glSpriteParameterivSGIX(SpriteParameterNameSGIX pname, int* @params);
		internal delegate void glStartInstrumentsSGIX();
		internal delegate void glStartTilingQCOM(uint x, uint y, uint width, uint height, uint preserveMask);
		internal delegate void glStateCaptureNV(uint state, uint mode);
		internal delegate void glStencilClearTagEXT(int stencilTagBits, uint stencilClearTag);
		internal unsafe delegate void glStencilFillPathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, PathFillMode fillMode, uint mask, PathTransformType transformType, float* transformValues);
		internal delegate void glStencilFillPathNV(uint path, PathFillMode fillMode, uint mask);
		internal delegate void glStencilFunc(StencilFunction func, int @ref, uint mask);
		internal delegate void glStencilFuncSeparate(StencilFaceDirection face, StencilFunction func, int @ref, uint mask);
		internal delegate void glStencilFuncSeparateATI(StencilFunction frontfunc, StencilFunction backfunc, int @ref, uint mask);
		internal delegate void glStencilMask(uint mask);
		internal delegate void glStencilMaskSeparate(StencilFaceDirection face, uint mask);
		internal delegate void glStencilOp(StencilOp fail, StencilOp zfail, StencilOp zpass);
		internal delegate void glStencilOpSeparate(StencilFaceDirection face, StencilOp sfail, StencilOp dpfail, StencilOp dppass);
		internal delegate void glStencilOpSeparateATI(StencilFaceDirection face, StencilOp sfail, StencilOp dpfail, StencilOp dppass);
		internal delegate void glStencilOpValueAMD(StencilFaceDirection face, uint value);
		internal unsafe delegate void glStencilStrokePathInstancedNV(int numPaths, PathElementType pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, PathTransformType transformType, float* transformValues);
		internal delegate void glStencilStrokePathNV(uint path, int reference, uint mask);
		internal unsafe delegate void glStencilThenCoverFillPathInstancedNV(int numPaths, uint pathNameType, IntPtr paths, uint pathBase, uint fillMode, uint mask, uint coverMode, uint transformType, float* transformValues);
		internal delegate void glStencilThenCoverFillPathNV(uint path, uint fillMode, uint mask, uint coverMode);
		internal unsafe delegate void glStencilThenCoverStrokePathInstancedNV(int numPaths, uint pathNameType, IntPtr paths, uint pathBase, int reference, uint mask, uint coverMode, uint transformType, float* transformValues);
		internal delegate void glStencilThenCoverStrokePathNV(uint path, int reference, uint mask, uint coverMode);
		internal delegate void glStopInstrumentsSGIX(int marker);
		internal delegate void glStringMarkerGREMEDY(int len, IntPtr @string);
		internal delegate void glSubpixelPrecisionBiasNV(uint xbits, uint ybits);
		internal delegate void glSwizzleEXT(uint res, uint @in, VertexShaderCoordOutEXT outX, VertexShaderCoordOutEXT outY, VertexShaderCoordOutEXT outZ, VertexShaderCoordOutEXT outW);
		internal delegate void glSyncTextureINTEL(uint texture);
		#endregion

		#region T:

		internal delegate void glTagSampleBufferSGIX();
		internal delegate void glTangent3bEXT(sbyte tx, sbyte ty, sbyte tz);
		internal unsafe delegate void glTangent3bvEXT(sbyte* v);
		internal delegate void glTangent3dEXT(double tx, double ty, double tz);
		internal unsafe delegate void glTangent3dvEXT(double* v);
		internal delegate void glTangent3fEXT(float tx, float ty, float tz);
		internal unsafe delegate void glTangent3fvEXT(float* v);
		internal delegate void glTangent3iEXT(int tx, int ty, int tz);
		internal unsafe delegate void glTangent3ivEXT(int* v);
		internal delegate void glTangent3sEXT(short tx, short ty, short tz);
		internal unsafe delegate void glTangent3svEXT(short* v);
		internal delegate void glTangentPointerEXT(TangentPointerTypeEXT type, int stride, IntPtr pointer);
		internal delegate void glTbufferMask3DFX(uint mask);
		internal delegate void glTessellationFactorAMD(float factor);
		internal delegate void glTessellationModeAMD(uint mode);
		internal delegate bool glTestFenceAPPLE(uint fence);
		internal delegate bool glTestFenceNV(uint fence);
		internal delegate bool glTestObjectAPPLE(ObjectTypeAPPLE @object, uint name);
		internal delegate void glTexAttachMemoryNV(TextureTarget target, uint memory, ulong offset);
		internal delegate void glTexBuffer(TextureTarget target, InternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferARB(TextureTarget target, InternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferEXT(TextureTarget target, InternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferOES(TextureTarget target, InternalFormat internalformat, uint buffer);
		internal delegate void glTexBufferRange(TextureTarget target, InternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTexBufferRangeEXT(TextureTarget target, InternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTexBufferRangeOES(TextureTarget target, InternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal unsafe delegate void glTexBumpParameterfvATI(TexBumpParameterATI pname, float* param);
		internal unsafe delegate void glTexBumpParameterivATI(TexBumpParameterATI pname, int* param);
		internal delegate void glTexCoord1bOES(sbyte s);
		internal unsafe delegate void glTexCoord1bvOES(sbyte* coords);
		internal delegate void glTexCoord1d(double s);
		internal unsafe delegate void glTexCoord1dv(double* v);
		internal delegate void glTexCoord1f(float s);
		internal unsafe delegate void glTexCoord1fv(float* v);
		internal delegate void glTexCoord1hNV(ushort s);
		internal unsafe delegate void glTexCoord1hvNV(ushort* v);
		internal delegate void glTexCoord1i(int s);
		internal unsafe delegate void glTexCoord1iv(int* v);
		internal delegate void glTexCoord1s(short s);
		internal unsafe delegate void glTexCoord1sv(short* v);
		internal delegate void glTexCoord1xOES(int s);
		internal unsafe delegate void glTexCoord1xvOES(int* coords);
		internal delegate void glTexCoord2bOES(sbyte s, sbyte t);
		internal unsafe delegate void glTexCoord2bvOES(sbyte* coords);
		internal delegate void glTexCoord2d(double s, double t);
		internal unsafe delegate void glTexCoord2dv(double* v);
		internal delegate void glTexCoord2f(float s, float t);
		internal delegate void glTexCoord2fColor3fVertex3fSUN(float s, float t, float r, float g, float b, float x, float y, float z);
		internal unsafe delegate void glTexCoord2fColor3fVertex3fvSUN(float* tc, float* c, float* v);
		internal delegate void glTexCoord2fColor4fNormal3fVertex3fSUN(float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glTexCoord2fColor4fNormal3fVertex3fvSUN(float* tc, float* c, float* n, float* v);
		internal delegate void glTexCoord2fColor4ubVertex3fSUN(float s, float t, byte r, byte g, byte b, byte a, float x, float y, float z);
		internal unsafe delegate void glTexCoord2fColor4ubVertex3fvSUN(float* tc, byte* c, float* v);
		internal delegate void glTexCoord2fNormal3fVertex3fSUN(float s, float t, float nx, float ny, float nz, float x, float y, float z);
		internal unsafe delegate void glTexCoord2fNormal3fVertex3fvSUN(float* tc, float* n, float* v);
		internal unsafe delegate void glTexCoord2fv(float* v);
		internal delegate void glTexCoord2fVertex3fSUN(float s, float t, float x, float y, float z);
		internal unsafe delegate void glTexCoord2fVertex3fvSUN(float* tc, float* v);
		internal delegate void glTexCoord2hNV(ushort s, ushort t);
		internal unsafe delegate void glTexCoord2hvNV(ushort* v);
		internal delegate void glTexCoord2i(int s, int t);
		internal unsafe delegate void glTexCoord2iv(int* v);
		internal delegate void glTexCoord2s(short s, short t);
		internal unsafe delegate void glTexCoord2sv(short* v);
		internal delegate void glTexCoord2xOES(int s, int t);
		internal unsafe delegate void glTexCoord2xvOES(int* coords);
		internal delegate void glTexCoord3bOES(sbyte s, sbyte t, sbyte r);
		internal unsafe delegate void glTexCoord3bvOES(sbyte* coords);
		internal delegate void glTexCoord3d(double s, double t, double r);
		internal unsafe delegate void glTexCoord3dv(double* v);
		internal delegate void glTexCoord3f(float s, float t, float r);
		internal unsafe delegate void glTexCoord3fv(float* v);
		internal delegate void glTexCoord3hNV(ushort s, ushort t, ushort r);
		internal unsafe delegate void glTexCoord3hvNV(ushort* v);
		internal delegate void glTexCoord3i(int s, int t, int r);
		internal unsafe delegate void glTexCoord3iv(int* v);
		internal delegate void glTexCoord3s(short s, short t, short r);
		internal unsafe delegate void glTexCoord3sv(short* v);
		internal delegate void glTexCoord3xOES(int s, int t, int r);
		internal unsafe delegate void glTexCoord3xvOES(int* coords);
		internal delegate void glTexCoord4bOES(sbyte s, sbyte t, sbyte r, sbyte q);
		internal unsafe delegate void glTexCoord4bvOES(sbyte* coords);
		internal delegate void glTexCoord4d(double s, double t, double r, double q);
		internal unsafe delegate void glTexCoord4dv(double* v);
		internal delegate void glTexCoord4f(float s, float t, float r, float q);
		internal delegate void glTexCoord4fColor4fNormal3fVertex4fSUN(float s, float t, float p, float q, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z, float w);
		internal unsafe delegate void glTexCoord4fColor4fNormal3fVertex4fvSUN(float* tc, float* c, float* n, float* v);
		internal unsafe delegate void glTexCoord4fv(float* v);
		internal delegate void glTexCoord4fVertex4fSUN(float s, float t, float p, float q, float x, float y, float z, float w);
		internal unsafe delegate void glTexCoord4fVertex4fvSUN(float* tc, float* v);
		internal delegate void glTexCoord4hNV(ushort s, ushort t, ushort r, ushort q);
		internal unsafe delegate void glTexCoord4hvNV(ushort* v);
		internal delegate void glTexCoord4i(int s, int t, int r, int q);
		internal unsafe delegate void glTexCoord4iv(int* v);
		internal delegate void glTexCoord4s(short s, short t, short r, short q);
		internal unsafe delegate void glTexCoord4sv(short* v);
		internal delegate void glTexCoord4xOES(int s, int t, int r, int q);
		internal unsafe delegate void glTexCoord4xvOES(int* coords);
		internal delegate void glTexCoordFormatNV(int size, uint type, int stride);
		internal delegate void glTexCoordP1ui(TexCoordPointerType type, uint coords);
		internal unsafe delegate void glTexCoordP1uiv(TexCoordPointerType type, uint* coords);
		internal delegate void glTexCoordP2ui(TexCoordPointerType type, uint coords);
		internal unsafe delegate void glTexCoordP2uiv(TexCoordPointerType type, uint* coords);
		internal delegate void glTexCoordP3ui(TexCoordPointerType type, uint coords);
		internal unsafe delegate void glTexCoordP3uiv(TexCoordPointerType type, uint* coords);
		internal delegate void glTexCoordP4ui(TexCoordPointerType type, uint coords);
		internal unsafe delegate void glTexCoordP4uiv(TexCoordPointerType type, uint* coords);
		internal delegate void glTexCoordPointer(int size, TexCoordPointerType type, int stride, IntPtr pointer);
		internal delegate void glTexCoordPointerEXT(int size, TexCoordPointerType type, int stride, int count, IntPtr pointer);
		internal delegate void glTexCoordPointerListIBM(int size, TexCoordPointerType type, int stride, IntPtr pointer, int ptrstride);
		internal delegate void glTexCoordPointervINTEL(int size, VertexPointerType type, IntPtr pointer);
		internal delegate void glTexEnvf(TextureEnvTarget target, TextureEnvParameter pname, float param);
		internal unsafe delegate void glTexEnvfv(TextureEnvTarget target, TextureEnvParameter pname, float* @params);
		internal delegate void glTexEnvi(TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal unsafe delegate void glTexEnviv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal delegate void glTexEnvx(TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal delegate void glTexEnvxOES(TextureEnvTarget target, TextureEnvParameter pname, int param);
		internal unsafe delegate void glTexEnvxv(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal unsafe delegate void glTexEnvxvOES(TextureEnvTarget target, TextureEnvParameter pname, int* @params);
		internal delegate void glTexEstimateMotionQCOM(uint @ref, uint target, uint output);
		internal delegate void glTexEstimateMotionRegionsQCOM(uint @ref, uint target, uint output, uint mask);
		internal unsafe delegate void glTexFilterFuncSGIS(TextureTarget target, TextureFilterSGIS filter, int n, float* weights);
		internal delegate void glTexGend(TextureCoordName coord, TextureGenParameter pname, double param);
		internal unsafe delegate void glTexGendv(TextureCoordName coord, TextureGenParameter pname, double* @params);
		internal delegate void glTexGenf(TextureCoordName coord, TextureGenParameter pname, float param);
		internal delegate void glTexGenfOES(TextureCoordName coord, TextureGenParameter pname, float param);
		internal unsafe delegate void glTexGenfv(TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal unsafe delegate void glTexGenfvOES(TextureCoordName coord, TextureGenParameter pname, float* @params);
		internal delegate void glTexGeni(TextureCoordName coord, TextureGenParameter pname, int param);
		internal delegate void glTexGeniOES(TextureCoordName coord, TextureGenParameter pname, int param);
		internal unsafe delegate void glTexGeniv(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal unsafe delegate void glTexGenivOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glTexGenxOES(TextureCoordName coord, TextureGenParameter pname, int param);
		internal unsafe delegate void glTexGenxvOES(TextureCoordName coord, TextureGenParameter pname, int* @params);
		internal delegate void glTexImage1D(TextureTarget target, int level, int internalformat, int width, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage2D(TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage2DMultisample(TextureTarget target, int samples, InternalFormat internalformat, int width, int height, bool fixedsamplelocations);
		internal delegate void glTexImage2DMultisampleCoverageNV(TextureTarget target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, bool fixedSampleLocations);
		internal delegate void glTexImage3D(TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage3DEXT(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage3DMultisample(TextureTarget target, int samples, InternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal delegate void glTexImage3DMultisampleCoverageNV(TextureTarget target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, int depth, bool fixedSampleLocations);
		internal delegate void glTexImage3DOES(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexImage4DSGIS(TextureTarget target, int level, InternalFormat internalformat, int width, int height, int depth, int size4d, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexPageCommitmentARB(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, bool commit);
		internal delegate void glTexPageCommitmentEXT(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, bool commit);
		internal delegate void glTexParameterf(TextureTarget target, TextureParameterName pname, float param);
		internal unsafe delegate void glTexParameterfv(TextureTarget target, TextureParameterName pname, float* @params);
		internal delegate void glTexParameteri(TextureTarget target, TextureParameterName pname, int param);
		internal unsafe delegate void glTexParameterIiv(TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTexParameterIivEXT(TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTexParameterIivOES(TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTexParameterIuiv(TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTexParameterIuivEXT(TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTexParameterIuivOES(TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTexParameteriv(TextureTarget target, TextureParameterName pname, int* @params);
		internal delegate void glTexParameterx(TextureTarget target, GetTextureParameter pname, int param);
		internal delegate void glTexParameterxOES(TextureTarget target, GetTextureParameter pname, int param);
		internal unsafe delegate void glTexParameterxv(TextureTarget target, GetTextureParameter pname, int* @params);
		internal unsafe delegate void glTexParameterxvOES(TextureTarget target, GetTextureParameter pname, int* @params);
		internal delegate void glTexRenderbufferNV(TextureTarget target, uint renderbuffer);
		internal delegate void glTexStorage1D(TextureTarget target, int levels, InternalFormat internalformat, int width);
		internal delegate void glTexStorage1DEXT(TextureTarget target, int levels, InternalFormat internalformat, int width);
		internal delegate void glTexStorage2D(TextureTarget target, int levels, InternalFormat internalformat, int width, int height);
		internal delegate void glTexStorage2DEXT(TextureTarget target, int levels, InternalFormat internalformat, int width, int height);
		internal delegate void glTexStorage2DMultisample(TextureTarget target, int samples, InternalFormat internalformat, int width, int height, bool fixedsamplelocations);
		internal delegate void glTexStorage3D(TextureTarget target, int levels, InternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTexStorage3DEXT(TextureTarget target, int levels, InternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTexStorage3DMultisample(TextureTarget target, int samples, InternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal delegate void glTexStorage3DMultisampleOES(TextureTarget target, int samples, InternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal delegate void glTexStorageMem1DEXT(TextureTarget target, int levels, uint internalFormat, int width, uint memory, ulong offset);
		internal delegate void glTexStorageMem2DEXT(TextureTarget target, int levels, uint internalFormat, int width, int height, uint memory, ulong offset);
		internal delegate void glTexStorageMem2DMultisampleEXT(TextureTarget target, int samples, uint internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTexStorageMem3DEXT(TextureTarget target, int levels, uint internalFormat, int width, int height, int depth, uint memory, ulong offset);
		internal delegate void glTexStorageMem3DMultisampleEXT(TextureTarget target, int samples, uint internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTexStorageSparseAMD(TextureTarget target, InternalFormat internalFormat, int width, int height, int depth, int layers, uint flags);
		internal delegate void glTexSubImage1D(TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage1DEXT(TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage2D(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage2DEXT(TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage3D(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage3DEXT(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage3DOES(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTexSubImage4DSGIS(TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureAttachMemoryNV(uint texture, uint memory, ulong offset);
		internal delegate void glTextureBarrier();
		internal delegate void glTextureBarrierNV();
		internal delegate void glTextureBuffer(uint texture, InternalFormat internalformat, uint buffer);
		internal delegate void glTextureBufferEXT(uint texture, TextureTarget target, InternalFormat internalformat, uint buffer);
		internal delegate void glTextureBufferRange(uint texture, InternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTextureBufferRangeEXT(uint texture, TextureTarget target, InternalFormat internalformat, uint buffer, IntPtr offset, int size);
		internal delegate void glTextureColorMaskSGIS(bool red, bool green, bool blue, bool alpha);
		internal delegate void glTextureFoveationParametersQCOM(uint texture, uint layer, uint focalPoint, float focalX, float focalY, float gainX, float gainY, float foveaArea);
		internal delegate void glTextureImage1DEXT(uint texture, TextureTarget target, int level, int internalformat, int width, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureImage2DEXT(uint texture, TextureTarget target, int level, int internalformat, int width, int height, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureImage2DMultisampleCoverageNV(uint texture, TextureTarget target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, bool fixedSampleLocations);
		internal delegate void glTextureImage2DMultisampleNV(uint texture, TextureTarget target, int samples, int internalFormat, int width, int height, bool fixedSampleLocations);
		internal delegate void glTextureImage3DEXT(uint texture, TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureImage3DMultisampleCoverageNV(uint texture, TextureTarget target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, int depth, bool fixedSampleLocations);
		internal delegate void glTextureImage3DMultisampleNV(uint texture, TextureTarget target, int samples, int internalFormat, int width, int height, int depth, bool fixedSampleLocations);
		internal delegate void glTextureLightEXT(LightTexturePNameEXT pname);
		internal delegate void glTextureMaterialEXT(MaterialFace face, MaterialParameter mode);
		internal delegate void glTextureNormalEXT(TextureNormalModeEXT mode);
		internal delegate void glTexturePageCommitmentEXT(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, bool commit);
		internal delegate void glTextureParameterf(uint texture, TextureParameterName pname, float param);
		internal delegate void glTextureParameterfEXT(uint texture, TextureTarget target, TextureParameterName pname, float param);
		internal unsafe delegate void glTextureParameterfv(uint texture, TextureParameterName pname, float* param);
		internal unsafe delegate void glTextureParameterfvEXT(uint texture, TextureTarget target, TextureParameterName pname, float* @params);
		internal delegate void glTextureParameteri(uint texture, TextureParameterName pname, int param);
		internal delegate void glTextureParameteriEXT(uint texture, TextureTarget target, TextureParameterName pname, int param);
		internal unsafe delegate void glTextureParameterIiv(uint texture, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTextureParameterIivEXT(uint texture, TextureTarget target, TextureParameterName pname, int* @params);
		internal unsafe delegate void glTextureParameterIuiv(uint texture, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTextureParameterIuivEXT(uint texture, TextureTarget target, TextureParameterName pname, uint* @params);
		internal unsafe delegate void glTextureParameteriv(uint texture, TextureParameterName pname, int* param);
		internal unsafe delegate void glTextureParameterivEXT(uint texture, TextureTarget target, TextureParameterName pname, int* @params);
		internal delegate void glTextureRangeAPPLE(uint target, int length, IntPtr pointer);
		internal delegate void glTextureRenderbufferEXT(uint texture, TextureTarget target, uint renderbuffer);
		internal delegate void glTextureStorage1D(uint texture, int levels, InternalFormat internalformat, int width);
		internal delegate void glTextureStorage1DEXT(uint texture, uint target, int levels, InternalFormat internalformat, int width);
		internal delegate void glTextureStorage2D(uint texture, int levels, InternalFormat internalformat, int width, int height);
		internal delegate void glTextureStorage2DEXT(uint texture, uint target, int levels, InternalFormat internalformat, int width, int height);
		internal delegate void glTextureStorage2DMultisample(uint texture, int samples, InternalFormat internalformat, int width, int height, bool fixedsamplelocations);
		internal delegate void glTextureStorage2DMultisampleEXT(uint texture, TextureTarget target, int samples, InternalFormat internalformat, int width, int height, bool fixedsamplelocations);
		internal delegate void glTextureStorage3D(uint texture, int levels, InternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTextureStorage3DEXT(uint texture, uint target, int levels, InternalFormat internalformat, int width, int height, int depth);
		internal delegate void glTextureStorage3DMultisample(uint texture, int samples, InternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal delegate void glTextureStorage3DMultisampleEXT(uint texture, uint target, int samples, InternalFormat internalformat, int width, int height, int depth, bool fixedsamplelocations);
		internal delegate void glTextureStorageMem1DEXT(uint texture, int levels, uint internalFormat, int width, uint memory, ulong offset);
		internal delegate void glTextureStorageMem2DEXT(uint texture, int levels, uint internalFormat, int width, int height, uint memory, ulong offset);
		internal delegate void glTextureStorageMem2DMultisampleEXT(uint texture, int samples, uint internalFormat, int width, int height, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTextureStorageMem3DEXT(uint texture, int levels, uint internalFormat, int width, int height, int depth, uint memory, ulong offset);
		internal delegate void glTextureStorageMem3DMultisampleEXT(uint texture, int samples, uint internalFormat, int width, int height, int depth, bool fixedSampleLocations, uint memory, ulong offset);
		internal delegate void glTextureStorageSparseAMD(uint texture, uint target, InternalFormat internalFormat, int width, int height, int depth, int layers, uint flags);
		internal delegate void glTextureSubImage1D(uint texture, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureSubImage1DEXT(uint texture, TextureTarget target, int level, int xoffset, int width, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureSubImage2D(uint texture, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureSubImage2DEXT(uint texture, TextureTarget target, int level, int xoffset, int yoffset, int width, int height, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureSubImage3D(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureSubImage3DEXT(uint texture, TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, PixelFormat format, PixelType type, IntPtr pixels);
		internal delegate void glTextureView(uint texture, TextureTarget target, uint origtexture, InternalFormat internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
		internal delegate void glTextureViewEXT(uint texture, TextureTarget target, uint origtexture, InternalFormat internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
		internal delegate void glTextureViewOES(uint texture, TextureTarget target, uint origtexture, InternalFormat internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
		internal delegate void glTrackMatrixNV(VertexAttribEnumNV target, uint address, VertexAttribEnumNV matrix, VertexAttribEnumNV transform);
		internal unsafe delegate void glTransformFeedbackAttribsNV(int count, int* attribs, uint bufferMode);
		internal delegate void glTransformFeedbackBufferBase(uint xfb, uint index, uint buffer);
		internal delegate void glTransformFeedbackBufferRange(uint xfb, uint index, uint buffer, IntPtr offset, int size);
		internal unsafe delegate void glTransformFeedbackStreamAttribsNV(int count, int* attribs, int nbuffers, int* bufstreams, uint bufferMode);
		internal unsafe delegate void glTransformFeedbackVaryings(uint program, int count, sbyte* varyings, TransformFeedbackBufferMode bufferMode);
		internal unsafe delegate void glTransformFeedbackVaryingsEXT(uint program, int count, sbyte* varyings, uint bufferMode);
		internal unsafe delegate void glTransformFeedbackVaryingsNV(uint program, int count, int* locations, uint bufferMode);
		internal unsafe delegate void glTransformPathNV(uint resultPath, uint srcPath, PathTransformType transformType, float* transformValues);
		internal delegate void glTranslated(double x, double y, double z);
		internal delegate void glTranslatef(float x, float y, float z);
		internal delegate void glTranslatex(int x, int y, int z);
		internal delegate void glTranslatexOES(int x, int y, int z);
		#endregion

		#region U:

		internal delegate void glUniform1d(int location, double x);
		internal unsafe delegate void glUniform1dv(int location, int count, double* value);
		internal delegate void glUniform1f(int location, float v0);
		internal delegate void glUniform1fARB(int location, float v0);
		internal unsafe delegate void glUniform1fv(int location, int count, float* value);
		internal unsafe delegate void glUniform1fvARB(int location, int count, float* value);
		internal delegate void glUniform1i(int location, int v0);
		internal delegate void glUniform1i64ARB(int location, long x);
		internal delegate void glUniform1i64NV(int location, long x);
		internal unsafe delegate void glUniform1i64vARB(int location, int count, long* value);
		internal unsafe delegate void glUniform1i64vNV(int location, int count, long* value);
		internal delegate void glUniform1iARB(int location, int v0);
		internal unsafe delegate void glUniform1iv(int location, int count, int* value);
		internal unsafe delegate void glUniform1ivARB(int location, int count, int* value);
		internal delegate void glUniform1ui(int location, uint v0);
		internal delegate void glUniform1ui64ARB(int location, ulong x);
		internal delegate void glUniform1ui64NV(int location, ulong x);
		internal unsafe delegate void glUniform1ui64vARB(int location, int count, ulong* value);
		internal unsafe delegate void glUniform1ui64vNV(int location, int count, ulong* value);
		internal delegate void glUniform1uiEXT(int location, uint v0);
		internal unsafe delegate void glUniform1uiv(int location, int count, uint* value);
		internal unsafe delegate void glUniform1uivEXT(int location, int count, uint* value);
		internal delegate void glUniform2d(int location, double x, double y);
		internal unsafe delegate void glUniform2dv(int location, int count, double* value);
		internal delegate void glUniform2f(int location, float v0, float v1);
		internal delegate void glUniform2fARB(int location, float v0, float v1);
		internal unsafe delegate void glUniform2fv(int location, int count, float* value);
		internal unsafe delegate void glUniform2fvARB(int location, int count, float* value);
		internal delegate void glUniform2i(int location, int v0, int v1);
		internal delegate void glUniform2i64ARB(int location, long x, long y);
		internal delegate void glUniform2i64NV(int location, long x, long y);
		internal unsafe delegate void glUniform2i64vARB(int location, int count, long* value);
		internal unsafe delegate void glUniform2i64vNV(int location, int count, long* value);
		internal delegate void glUniform2iARB(int location, int v0, int v1);
		internal unsafe delegate void glUniform2iv(int location, int count, int* value);
		internal unsafe delegate void glUniform2ivARB(int location, int count, int* value);
		internal delegate void glUniform2ui(int location, uint v0, uint v1);
		internal delegate void glUniform2ui64ARB(int location, ulong x, ulong y);
		internal delegate void glUniform2ui64NV(int location, ulong x, ulong y);
		internal unsafe delegate void glUniform2ui64vARB(int location, int count, ulong* value);
		internal unsafe delegate void glUniform2ui64vNV(int location, int count, ulong* value);
		internal delegate void glUniform2uiEXT(int location, uint v0, uint v1);
		internal unsafe delegate void glUniform2uiv(int location, int count, uint* value);
		internal unsafe delegate void glUniform2uivEXT(int location, int count, uint* value);
		internal delegate void glUniform3d(int location, double x, double y, double z);
		internal unsafe delegate void glUniform3dv(int location, int count, double* value);
		internal delegate void glUniform3f(int location, float v0, float v1, float v2);
		internal delegate void glUniform3fARB(int location, float v0, float v1, float v2);
		internal unsafe delegate void glUniform3fv(int location, int count, float* value);
		internal unsafe delegate void glUniform3fvARB(int location, int count, float* value);
		internal delegate void glUniform3i(int location, int v0, int v1, int v2);
		internal delegate void glUniform3i64ARB(int location, long x, long y, long z);
		internal delegate void glUniform3i64NV(int location, long x, long y, long z);
		internal unsafe delegate void glUniform3i64vARB(int location, int count, long* value);
		internal unsafe delegate void glUniform3i64vNV(int location, int count, long* value);
		internal delegate void glUniform3iARB(int location, int v0, int v1, int v2);
		internal unsafe delegate void glUniform3iv(int location, int count, int* value);
		internal unsafe delegate void glUniform3ivARB(int location, int count, int* value);
		internal delegate void glUniform3ui(int location, uint v0, uint v1, uint v2);
		internal delegate void glUniform3ui64ARB(int location, ulong x, ulong y, ulong z);
		internal delegate void glUniform3ui64NV(int location, ulong x, ulong y, ulong z);
		internal unsafe delegate void glUniform3ui64vARB(int location, int count, ulong* value);
		internal unsafe delegate void glUniform3ui64vNV(int location, int count, ulong* value);
		internal delegate void glUniform3uiEXT(int location, uint v0, uint v1, uint v2);
		internal unsafe delegate void glUniform3uiv(int location, int count, uint* value);
		internal unsafe delegate void glUniform3uivEXT(int location, int count, uint* value);
		internal delegate void glUniform4d(int location, double x, double y, double z, double w);
		internal unsafe delegate void glUniform4dv(int location, int count, double* value);
		internal delegate void glUniform4f(int location, float v0, float v1, float v2, float v3);
		internal delegate void glUniform4fARB(int location, float v0, float v1, float v2, float v3);
		internal unsafe delegate void glUniform4fv(int location, int count, float* value);
		internal unsafe delegate void glUniform4fvARB(int location, int count, float* value);
		internal delegate void glUniform4i(int location, int v0, int v1, int v2, int v3);
		internal delegate void glUniform4i64ARB(int location, long x, long y, long z, long w);
		internal delegate void glUniform4i64NV(int location, long x, long y, long z, long w);
		internal unsafe delegate void glUniform4i64vARB(int location, int count, long* value);
		internal unsafe delegate void glUniform4i64vNV(int location, int count, long* value);
		internal delegate void glUniform4iARB(int location, int v0, int v1, int v2, int v3);
		internal unsafe delegate void glUniform4iv(int location, int count, int* value);
		internal unsafe delegate void glUniform4ivARB(int location, int count, int* value);
		internal delegate void glUniform4ui(int location, uint v0, uint v1, uint v2, uint v3);
		internal delegate void glUniform4ui64ARB(int location, ulong x, ulong y, ulong z, ulong w);
		internal delegate void glUniform4ui64NV(int location, ulong x, ulong y, ulong z, ulong w);
		internal unsafe delegate void glUniform4ui64vARB(int location, int count, ulong* value);
		internal unsafe delegate void glUniform4ui64vNV(int location, int count, ulong* value);
		internal delegate void glUniform4uiEXT(int location, uint v0, uint v1, uint v2, uint v3);
		internal unsafe delegate void glUniform4uiv(int location, int count, uint* value);
		internal unsafe delegate void glUniform4uivEXT(int location, int count, uint* value);
		internal delegate void glUniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
		internal delegate void glUniformBufferEXT(uint program, int location, uint buffer);
		internal delegate void glUniformHandleui64ARB(int location, ulong value);
		internal delegate void glUniformHandleui64IMG(int location, ulong value);
		internal delegate void glUniformHandleui64NV(int location, ulong value);
		internal unsafe delegate void glUniformHandleui64vARB(int location, int count, ulong* value);
		internal unsafe delegate void glUniformHandleui64vIMG(int location, int count, ulong* value);
		internal unsafe delegate void glUniformHandleui64vNV(int location, int count, ulong* value);
		internal unsafe delegate void glUniformMatrix2dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix2fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2fvARB(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x3dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix2x3fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x3fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x4dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix2x4fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix2x4fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix3fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3fvARB(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x2dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix3x2fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x2fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x4dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix3x4fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix3x4fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix4fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4fvARB(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x2dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix4x2fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x2fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x3dv(int location, int count, bool transpose, double* value);
		internal unsafe delegate void glUniformMatrix4x3fv(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformMatrix4x3fvNV(int location, int count, bool transpose, float* value);
		internal unsafe delegate void glUniformSubroutinesuiv(ShaderType shadertype, int count, uint* indices);
		internal delegate void glUniformui64NV(int location, ulong value);
		internal unsafe delegate void glUniformui64vNV(int location, int count, ulong* value);
		internal delegate void glUnlockArraysEXT();
		internal delegate bool glUnmapBuffer(BufferTargetARB target);
		internal delegate bool glUnmapBufferARB(BufferTargetARB target);
		internal delegate bool glUnmapBufferOES(uint target);
		internal delegate bool glUnmapNamedBuffer(uint buffer);
		internal delegate bool glUnmapNamedBufferEXT(uint buffer);
		internal delegate void glUnmapObjectBufferATI(uint buffer);
		internal delegate void glUnmapTexture2DINTEL(uint texture, int level);
		internal delegate void glUpdateObjectBufferATI(uint buffer, uint offset, int size, IntPtr pointer, PreserveModeATI preserve);
		internal delegate void glUploadGpuMaskNVX(uint mask);
		internal delegate void glUseProgram(uint program);
		internal delegate void glUseProgramObjectARB(uint programObj);
		internal delegate void glUseProgramStages(uint pipeline, uint stages, uint program);
		internal delegate void glUseProgramStagesEXT(uint pipeline, uint stages, uint program);
		internal delegate void glUseShaderProgramEXT(uint type, uint program);
		#endregion

		#region V:

		internal delegate void glValidateProgram(uint program);
		internal delegate void glValidateProgramARB(uint programObj);
		internal delegate void glValidateProgramPipeline(uint pipeline);
		internal delegate void glValidateProgramPipelineEXT(uint pipeline);
		internal delegate void glVariantArrayObjectATI(uint id, ScalarType type, int stride, uint buffer, uint offset);
		internal unsafe delegate void glVariantbvEXT(uint id, sbyte* addr);
		internal unsafe delegate void glVariantdvEXT(uint id, double* addr);
		internal unsafe delegate void glVariantfvEXT(uint id, float* addr);
		internal unsafe delegate void glVariantivEXT(uint id, int* addr);
		internal delegate void glVariantPointerEXT(uint id, ScalarType type, uint stride, IntPtr addr);
		internal unsafe delegate void glVariantsvEXT(uint id, short* addr);
		internal unsafe delegate void glVariantubvEXT(uint id, byte* addr);
		internal unsafe delegate void glVariantuivEXT(uint id, uint* addr);
		internal unsafe delegate void glVariantusvEXT(uint id, ushort* addr);
		internal delegate void glVDPAUFiniNV();
		internal unsafe delegate void glVDPAUGetSurfaceivNV(IntPtr surface, uint pname, int count, int* length, int* values);
		internal delegate void glVDPAUInitNV(IntPtr vdpDevice, IntPtr getProcAddress);
		internal delegate bool glVDPAUIsSurfaceNV(IntPtr surface);
		internal unsafe delegate void glVDPAUMapSurfacesNV(int numSurfaces, IntPtr* surfaces);
		internal unsafe delegate IntPtr glVDPAURegisterOutputSurfaceNV(IntPtr vdpSurface, uint target, int numTextureNames, uint* textureNames);
		internal unsafe delegate IntPtr glVDPAURegisterVideoSurfaceNV(IntPtr vdpSurface, uint target, int numTextureNames, uint* textureNames);
		internal unsafe delegate IntPtr glVDPAURegisterVideoSurfaceWithPictureStructureNV(IntPtr vdpSurface, uint target, int numTextureNames, uint* textureNames, bool isFrameStructure);
		internal delegate void glVDPAUSurfaceAccessNV(IntPtr surface, uint access);
		internal unsafe delegate void glVDPAUUnmapSurfacesNV(int numSurface, IntPtr* surfaces);
		internal delegate void glVDPAUUnregisterSurfaceNV(IntPtr surface);
		internal delegate void glVertex2bOES(sbyte x, sbyte y);
		internal unsafe delegate void glVertex2bvOES(sbyte* coords);
		internal delegate void glVertex2d(double x, double y);
		internal unsafe delegate void glVertex2dv(double* v);
		internal delegate void glVertex2f(float x, float y);
		internal unsafe delegate void glVertex2fv(float* v);
		internal delegate void glVertex2hNV(ushort x, ushort y);
		internal unsafe delegate void glVertex2hvNV(ushort* v);
		internal delegate void glVertex2i(int x, int y);
		internal unsafe delegate void glVertex2iv(int* v);
		internal delegate void glVertex2s(short x, short y);
		internal unsafe delegate void glVertex2sv(short* v);
		internal delegate void glVertex2xOES(int x);
		internal unsafe delegate void glVertex2xvOES(int* coords);
		internal delegate void glVertex3bOES(sbyte x, sbyte y, sbyte z);
		internal unsafe delegate void glVertex3bvOES(sbyte* coords);
		internal delegate void glVertex3d(double x, double y, double z);
		internal unsafe delegate void glVertex3dv(double* v);
		internal delegate void glVertex3f(float x, float y, float z);
		internal unsafe delegate void glVertex3fv(float* v);
		internal delegate void glVertex3hNV(ushort x, ushort y, ushort z);
		internal unsafe delegate void glVertex3hvNV(ushort* v);
		internal delegate void glVertex3i(int x, int y, int z);
		internal unsafe delegate void glVertex3iv(int* v);
		internal delegate void glVertex3s(short x, short y, short z);
		internal unsafe delegate void glVertex3sv(short* v);
		internal delegate void glVertex3xOES(int x, int y);
		internal unsafe delegate void glVertex3xvOES(int* coords);
		internal delegate void glVertex4bOES(sbyte x, sbyte y, sbyte z, sbyte w);
		internal unsafe delegate void glVertex4bvOES(sbyte* coords);
		internal delegate void glVertex4d(double x, double y, double z, double w);
		internal unsafe delegate void glVertex4dv(double* v);
		internal delegate void glVertex4f(float x, float y, float z, float w);
		internal unsafe delegate void glVertex4fv(float* v);
		internal delegate void glVertex4hNV(ushort x, ushort y, ushort z, ushort w);
		internal unsafe delegate void glVertex4hvNV(ushort* v);
		internal delegate void glVertex4i(int x, int y, int z, int w);
		internal unsafe delegate void glVertex4iv(int* v);
		internal delegate void glVertex4s(short x, short y, short z, short w);
		internal unsafe delegate void glVertex4sv(short* v);
		internal delegate void glVertex4xOES(int x, int y, int z);
		internal unsafe delegate void glVertex4xvOES(int* coords);
		internal delegate void glVertexArrayAttribBinding(uint vaobj, uint attribindex, uint bindingindex);
		internal delegate void glVertexArrayAttribFormat(uint vaobj, uint attribindex, int size, VertexAttribType type, bool normalized, uint relativeoffset);
		internal delegate void glVertexArrayAttribIFormat(uint vaobj, uint attribindex, int size, VertexAttribIType type, uint relativeoffset);
		internal delegate void glVertexArrayAttribLFormat(uint vaobj, uint attribindex, int size, VertexAttribLType type, uint relativeoffset);
		internal delegate void glVertexArrayBindingDivisor(uint vaobj, uint bindingindex, uint divisor);
		internal delegate void glVertexArrayBindVertexBufferEXT(uint vaobj, uint bindingindex, uint buffer, IntPtr offset, int stride);
		internal delegate void glVertexArrayColorOffsetEXT(uint vaobj, uint buffer, int size, ColorPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayEdgeFlagOffsetEXT(uint vaobj, uint buffer, int stride, IntPtr offset);
		internal delegate void glVertexArrayElementBuffer(uint vaobj, uint buffer);
		internal delegate void glVertexArrayFogCoordOffsetEXT(uint vaobj, uint buffer, FogCoordinatePointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayIndexOffsetEXT(uint vaobj, uint buffer, IndexPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayMultiTexCoordOffsetEXT(uint vaobj, uint buffer, uint texunit, int size, TexCoordPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayNormalOffsetEXT(uint vaobj, uint buffer, NormalPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayParameteriAPPLE(VertexArrayPNameAPPLE pname, int param);
		internal delegate void glVertexArrayRangeAPPLE(int length, IntPtr pointer);
		internal delegate void glVertexArrayRangeNV(int length, IntPtr pointer);
		internal delegate void glVertexArraySecondaryColorOffsetEXT(uint vaobj, uint buffer, int size, ColorPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayTexCoordOffsetEXT(uint vaobj, uint buffer, int size, TexCoordPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayVertexAttribBindingEXT(uint vaobj, uint attribindex, uint bindingindex);
		internal delegate void glVertexArrayVertexAttribDivisorEXT(uint vaobj, uint index, uint divisor);
		internal delegate void glVertexArrayVertexAttribFormatEXT(uint vaobj, uint attribindex, int size, VertexAttribType type, bool normalized, uint relativeoffset);
		internal delegate void glVertexArrayVertexAttribIFormatEXT(uint vaobj, uint attribindex, int size, VertexAttribIType type, uint relativeoffset);
		internal delegate void glVertexArrayVertexAttribIOffsetEXT(uint vaobj, uint buffer, uint index, int size, VertexAttribType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayVertexAttribLFormatEXT(uint vaobj, uint attribindex, int size, VertexAttribLType type, uint relativeoffset);
		internal delegate void glVertexArrayVertexAttribLOffsetEXT(uint vaobj, uint buffer, uint index, int size, VertexAttribLType type, int stride, IntPtr offset);
		internal delegate void glVertexArrayVertexAttribOffsetEXT(uint vaobj, uint buffer, uint index, int size, VertexAttribPointerType type, bool normalized, int stride, IntPtr offset);
		internal delegate void glVertexArrayVertexBindingDivisorEXT(uint vaobj, uint bindingindex, uint divisor);
		internal delegate void glVertexArrayVertexBuffer(uint vaobj, uint bindingindex, uint buffer, IntPtr offset, int stride);
		internal unsafe delegate void glVertexArrayVertexBuffers(uint vaobj, uint first, int count, uint* buffers, IntPtr* offsets, int* strides);
		internal delegate void glVertexArrayVertexOffsetEXT(uint vaobj, uint buffer, int size, VertexPointerType type, int stride, IntPtr offset);
		internal delegate void glVertexAttrib1d(uint index, double x);
		internal delegate void glVertexAttrib1dARB(uint index, double x);
		internal delegate void glVertexAttrib1dNV(uint index, double x);
		internal unsafe delegate void glVertexAttrib1dv(uint index, double* v);
		internal unsafe delegate void glVertexAttrib1dvARB(uint index, double* v);
		internal unsafe delegate void glVertexAttrib1dvNV(uint index, double* v);
		internal delegate void glVertexAttrib1f(uint index, float x);
		internal delegate void glVertexAttrib1fARB(uint index, float x);
		internal delegate void glVertexAttrib1fNV(uint index, float x);
		internal unsafe delegate void glVertexAttrib1fv(uint index, float* v);
		internal unsafe delegate void glVertexAttrib1fvARB(uint index, float* v);
		internal unsafe delegate void glVertexAttrib1fvNV(uint index, float* v);
		internal delegate void glVertexAttrib1hNV(uint index, ushort x);
		internal unsafe delegate void glVertexAttrib1hvNV(uint index, ushort* v);
		internal delegate void glVertexAttrib1s(uint index, short x);
		internal delegate void glVertexAttrib1sARB(uint index, short x);
		internal delegate void glVertexAttrib1sNV(uint index, short x);
		internal unsafe delegate void glVertexAttrib1sv(uint index, short* v);
		internal unsafe delegate void glVertexAttrib1svARB(uint index, short* v);
		internal unsafe delegate void glVertexAttrib1svNV(uint index, short* v);
		internal delegate void glVertexAttrib2d(uint index, double x, double y);
		internal delegate void glVertexAttrib2dARB(uint index, double x, double y);
		internal delegate void glVertexAttrib2dNV(uint index, double x, double y);
		internal unsafe delegate void glVertexAttrib2dv(uint index, double* v);
		internal unsafe delegate void glVertexAttrib2dvARB(uint index, double* v);
		internal unsafe delegate void glVertexAttrib2dvNV(uint index, double* v);
		internal delegate void glVertexAttrib2f(uint index, float x, float y);
		internal delegate void glVertexAttrib2fARB(uint index, float x, float y);
		internal delegate void glVertexAttrib2fNV(uint index, float x, float y);
		internal unsafe delegate void glVertexAttrib2fv(uint index, float* v);
		internal unsafe delegate void glVertexAttrib2fvARB(uint index, float* v);
		internal unsafe delegate void glVertexAttrib2fvNV(uint index, float* v);
		internal delegate void glVertexAttrib2hNV(uint index, ushort x, ushort y);
		internal unsafe delegate void glVertexAttrib2hvNV(uint index, ushort* v);
		internal delegate void glVertexAttrib2s(uint index, short x, short y);
		internal delegate void glVertexAttrib2sARB(uint index, short x, short y);
		internal delegate void glVertexAttrib2sNV(uint index, short x, short y);
		internal unsafe delegate void glVertexAttrib2sv(uint index, short* v);
		internal unsafe delegate void glVertexAttrib2svARB(uint index, short* v);
		internal unsafe delegate void glVertexAttrib2svNV(uint index, short* v);
		internal delegate void glVertexAttrib3d(uint index, double x, double y, double z);
		internal delegate void glVertexAttrib3dARB(uint index, double x, double y, double z);
		internal delegate void glVertexAttrib3dNV(uint index, double x, double y, double z);
		internal unsafe delegate void glVertexAttrib3dv(uint index, double* v);
		internal unsafe delegate void glVertexAttrib3dvARB(uint index, double* v);
		internal unsafe delegate void glVertexAttrib3dvNV(uint index, double* v);
		internal delegate void glVertexAttrib3f(uint index, float x, float y, float z);
		internal delegate void glVertexAttrib3fARB(uint index, float x, float y, float z);
		internal delegate void glVertexAttrib3fNV(uint index, float x, float y, float z);
		internal unsafe delegate void glVertexAttrib3fv(uint index, float* v);
		internal unsafe delegate void glVertexAttrib3fvARB(uint index, float* v);
		internal unsafe delegate void glVertexAttrib3fvNV(uint index, float* v);
		internal delegate void glVertexAttrib3hNV(uint index, ushort x, ushort y, ushort z);
		internal unsafe delegate void glVertexAttrib3hvNV(uint index, ushort* v);
		internal delegate void glVertexAttrib3s(uint index, short x, short y, short z);
		internal delegate void glVertexAttrib3sARB(uint index, short x, short y, short z);
		internal delegate void glVertexAttrib3sNV(uint index, short x, short y, short z);
		internal unsafe delegate void glVertexAttrib3sv(uint index, short* v);
		internal unsafe delegate void glVertexAttrib3svARB(uint index, short* v);
		internal unsafe delegate void glVertexAttrib3svNV(uint index, short* v);
		internal unsafe delegate void glVertexAttrib4bv(uint index, sbyte* v);
		internal unsafe delegate void glVertexAttrib4bvARB(uint index, sbyte* v);
		internal delegate void glVertexAttrib4d(uint index, double x, double y, double z, double w);
		internal delegate void glVertexAttrib4dARB(uint index, double x, double y, double z, double w);
		internal delegate void glVertexAttrib4dNV(uint index, double x, double y, double z, double w);
		internal unsafe delegate void glVertexAttrib4dv(uint index, double* v);
		internal unsafe delegate void glVertexAttrib4dvARB(uint index, double* v);
		internal unsafe delegate void glVertexAttrib4dvNV(uint index, double* v);
		internal delegate void glVertexAttrib4f(uint index, float x, float y, float z, float w);
		internal delegate void glVertexAttrib4fARB(uint index, float x, float y, float z, float w);
		internal delegate void glVertexAttrib4fNV(uint index, float x, float y, float z, float w);
		internal unsafe delegate void glVertexAttrib4fv(uint index, float* v);
		internal unsafe delegate void glVertexAttrib4fvARB(uint index, float* v);
		internal unsafe delegate void glVertexAttrib4fvNV(uint index, float* v);
		internal delegate void glVertexAttrib4hNV(uint index, ushort x, ushort y, ushort z, ushort w);
		internal unsafe delegate void glVertexAttrib4hvNV(uint index, ushort* v);
		internal unsafe delegate void glVertexAttrib4iv(uint index, int* v);
		internal unsafe delegate void glVertexAttrib4ivARB(uint index, int* v);
		internal unsafe delegate void glVertexAttrib4Nbv(uint index, sbyte* v);
		internal unsafe delegate void glVertexAttrib4NbvARB(uint index, sbyte* v);
		internal unsafe delegate void glVertexAttrib4Niv(uint index, int* v);
		internal unsafe delegate void glVertexAttrib4NivARB(uint index, int* v);
		internal unsafe delegate void glVertexAttrib4Nsv(uint index, short* v);
		internal unsafe delegate void glVertexAttrib4NsvARB(uint index, short* v);
		internal delegate void glVertexAttrib4Nub(uint index, byte x, byte y, byte z, byte w);
		internal delegate void glVertexAttrib4NubARB(uint index, byte x, byte y, byte z, byte w);
		internal unsafe delegate void glVertexAttrib4Nubv(uint index, byte* v);
		internal unsafe delegate void glVertexAttrib4NubvARB(uint index, byte* v);
		internal unsafe delegate void glVertexAttrib4Nuiv(uint index, uint* v);
		internal unsafe delegate void glVertexAttrib4NuivARB(uint index, uint* v);
		internal unsafe delegate void glVertexAttrib4Nusv(uint index, ushort* v);
		internal unsafe delegate void glVertexAttrib4NusvARB(uint index, ushort* v);
		internal delegate void glVertexAttrib4s(uint index, short x, short y, short z, short w);
		internal delegate void glVertexAttrib4sARB(uint index, short x, short y, short z, short w);
		internal delegate void glVertexAttrib4sNV(uint index, short x, short y, short z, short w);
		internal unsafe delegate void glVertexAttrib4sv(uint index, short* v);
		internal unsafe delegate void glVertexAttrib4svARB(uint index, short* v);
		internal unsafe delegate void glVertexAttrib4svNV(uint index, short* v);
		internal delegate void glVertexAttrib4ubNV(uint index, byte x, byte y, byte z, byte w);
		internal unsafe delegate void glVertexAttrib4ubv(uint index, byte* v);
		internal unsafe delegate void glVertexAttrib4ubvARB(uint index, byte* v);
		internal unsafe delegate void glVertexAttrib4ubvNV(uint index, byte* v);
		internal unsafe delegate void glVertexAttrib4uiv(uint index, uint* v);
		internal unsafe delegate void glVertexAttrib4uivARB(uint index, uint* v);
		internal unsafe delegate void glVertexAttrib4usv(uint index, ushort* v);
		internal unsafe delegate void glVertexAttrib4usvARB(uint index, ushort* v);
		internal delegate void glVertexAttribArrayObjectATI(uint index, int size, VertexAttribPointerType type, bool normalized, int stride, uint buffer, uint offset);
		internal delegate void glVertexAttribBinding(uint attribindex, uint bindingindex);
		internal delegate void glVertexAttribDivisor(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorANGLE(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorARB(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorEXT(uint index, uint divisor);
		internal delegate void glVertexAttribDivisorNV(uint index, uint divisor);
		internal delegate void glVertexAttribFormat(uint attribindex, int size, VertexAttribType type, bool normalized, uint relativeoffset);
		internal delegate void glVertexAttribFormatNV(uint index, int size, VertexAttribType type, bool normalized, int stride);
		internal delegate void glVertexAttribI1i(uint index, int x);
		internal delegate void glVertexAttribI1iEXT(uint index, int x);
		internal unsafe delegate void glVertexAttribI1iv(uint index, int* v);
		internal unsafe delegate void glVertexAttribI1ivEXT(uint index, int* v);
		internal delegate void glVertexAttribI1ui(uint index, uint x);
		internal delegate void glVertexAttribI1uiEXT(uint index, uint x);
		internal unsafe delegate void glVertexAttribI1uiv(uint index, uint* v);
		internal unsafe delegate void glVertexAttribI1uivEXT(uint index, uint* v);
		internal delegate void glVertexAttribI2i(uint index, int x, int y);
		internal delegate void glVertexAttribI2iEXT(uint index, int x, int y);
		internal unsafe delegate void glVertexAttribI2iv(uint index, int* v);
		internal unsafe delegate void glVertexAttribI2ivEXT(uint index, int* v);
		internal delegate void glVertexAttribI2ui(uint index, uint x, uint y);
		internal delegate void glVertexAttribI2uiEXT(uint index, uint x, uint y);
		internal unsafe delegate void glVertexAttribI2uiv(uint index, uint* v);
		internal unsafe delegate void glVertexAttribI2uivEXT(uint index, uint* v);
		internal delegate void glVertexAttribI3i(uint index, int x, int y, int z);
		internal delegate void glVertexAttribI3iEXT(uint index, int x, int y, int z);
		internal unsafe delegate void glVertexAttribI3iv(uint index, int* v);
		internal unsafe delegate void glVertexAttribI3ivEXT(uint index, int* v);
		internal delegate void glVertexAttribI3ui(uint index, uint x, uint y, uint z);
		internal delegate void glVertexAttribI3uiEXT(uint index, uint x, uint y, uint z);
		internal unsafe delegate void glVertexAttribI3uiv(uint index, uint* v);
		internal unsafe delegate void glVertexAttribI3uivEXT(uint index, uint* v);
		internal unsafe delegate void glVertexAttribI4bv(uint index, sbyte* v);
		internal unsafe delegate void glVertexAttribI4bvEXT(uint index, sbyte* v);
		internal delegate void glVertexAttribI4i(uint index, int x, int y, int z, int w);
		internal delegate void glVertexAttribI4iEXT(uint index, int x, int y, int z, int w);
		internal unsafe delegate void glVertexAttribI4iv(uint index, int* v);
		internal unsafe delegate void glVertexAttribI4ivEXT(uint index, int* v);
		internal unsafe delegate void glVertexAttribI4sv(uint index, short* v);
		internal unsafe delegate void glVertexAttribI4svEXT(uint index, short* v);
		internal unsafe delegate void glVertexAttribI4ubv(uint index, byte* v);
		internal unsafe delegate void glVertexAttribI4ubvEXT(uint index, byte* v);
		internal delegate void glVertexAttribI4ui(uint index, uint x, uint y, uint z, uint w);
		internal delegate void glVertexAttribI4uiEXT(uint index, uint x, uint y, uint z, uint w);
		internal unsafe delegate void glVertexAttribI4uiv(uint index, uint* v);
		internal unsafe delegate void glVertexAttribI4uivEXT(uint index, uint* v);
		internal unsafe delegate void glVertexAttribI4usv(uint index, ushort* v);
		internal unsafe delegate void glVertexAttribI4usvEXT(uint index, ushort* v);
		internal delegate void glVertexAttribIFormat(uint attribindex, int size, VertexAttribIType type, uint relativeoffset);
		internal delegate void glVertexAttribIFormatNV(uint index, int size, VertexAttribIType type, int stride);
		internal delegate void glVertexAttribIPointer(uint index, int size, VertexAttribIType type, int stride, IntPtr pointer);
		internal delegate void glVertexAttribIPointerEXT(uint index, int size, VertexAttribIType type, int stride, IntPtr pointer);
		internal delegate void glVertexAttribL1d(uint index, double x);
		internal delegate void glVertexAttribL1dEXT(uint index, double x);
		internal unsafe delegate void glVertexAttribL1dv(uint index, double* v);
		internal unsafe delegate void glVertexAttribL1dvEXT(uint index, double* v);
		internal delegate void glVertexAttribL1i64NV(uint index, long x);
		internal unsafe delegate void glVertexAttribL1i64vNV(uint index, long* v);
		internal delegate void glVertexAttribL1ui64ARB(uint index, ulong x);
		internal delegate void glVertexAttribL1ui64NV(uint index, ulong x);
		internal unsafe delegate void glVertexAttribL1ui64vARB(uint index, ulong* v);
		internal unsafe delegate void glVertexAttribL1ui64vNV(uint index, ulong* v);
		internal delegate void glVertexAttribL2d(uint index, double x, double y);
		internal delegate void glVertexAttribL2dEXT(uint index, double x, double y);
		internal unsafe delegate void glVertexAttribL2dv(uint index, double* v);
		internal unsafe delegate void glVertexAttribL2dvEXT(uint index, double* v);
		internal delegate void glVertexAttribL2i64NV(uint index, long x, long y);
		internal unsafe delegate void glVertexAttribL2i64vNV(uint index, long* v);
		internal delegate void glVertexAttribL2ui64NV(uint index, ulong x, ulong y);
		internal unsafe delegate void glVertexAttribL2ui64vNV(uint index, ulong* v);
		internal delegate void glVertexAttribL3d(uint index, double x, double y, double z);
		internal delegate void glVertexAttribL3dEXT(uint index, double x, double y, double z);
		internal unsafe delegate void glVertexAttribL3dv(uint index, double* v);
		internal unsafe delegate void glVertexAttribL3dvEXT(uint index, double* v);
		internal delegate void glVertexAttribL3i64NV(uint index, long x, long y, long z);
		internal unsafe delegate void glVertexAttribL3i64vNV(uint index, long* v);
		internal delegate void glVertexAttribL3ui64NV(uint index, ulong x, ulong y, ulong z);
		internal unsafe delegate void glVertexAttribL3ui64vNV(uint index, ulong* v);
		internal delegate void glVertexAttribL4d(uint index, double x, double y, double z, double w);
		internal delegate void glVertexAttribL4dEXT(uint index, double x, double y, double z, double w);
		internal unsafe delegate void glVertexAttribL4dv(uint index, double* v);
		internal unsafe delegate void glVertexAttribL4dvEXT(uint index, double* v);
		internal delegate void glVertexAttribL4i64NV(uint index, long x, long y, long z, long w);
		internal unsafe delegate void glVertexAttribL4i64vNV(uint index, long* v);
		internal delegate void glVertexAttribL4ui64NV(uint index, ulong x, ulong y, ulong z, ulong w);
		internal unsafe delegate void glVertexAttribL4ui64vNV(uint index, ulong* v);
		internal delegate void glVertexAttribLFormat(uint attribindex, int size, VertexAttribLType type, uint relativeoffset);
		internal delegate void glVertexAttribLFormatNV(uint index, int size, VertexAttribLType type, int stride);
		internal delegate void glVertexAttribLPointer(uint index, int size, VertexAttribLType type, int stride, IntPtr pointer);
		internal delegate void glVertexAttribLPointerEXT(uint index, int size, VertexAttribLType type, int stride, IntPtr pointer);
		internal delegate void glVertexAttribP1ui(uint index, VertexAttribPointerType type, bool normalized, uint value);
		internal unsafe delegate void glVertexAttribP1uiv(uint index, VertexAttribPointerType type, bool normalized, uint* value);
		internal delegate void glVertexAttribP2ui(uint index, VertexAttribPointerType type, bool normalized, uint value);
		internal unsafe delegate void glVertexAttribP2uiv(uint index, VertexAttribPointerType type, bool normalized, uint* value);
		internal delegate void glVertexAttribP3ui(uint index, VertexAttribPointerType type, bool normalized, uint value);
		internal unsafe delegate void glVertexAttribP3uiv(uint index, VertexAttribPointerType type, bool normalized, uint* value);
		internal delegate void glVertexAttribP4ui(uint index, VertexAttribPointerType type, bool normalized, uint value);
		internal unsafe delegate void glVertexAttribP4uiv(uint index, VertexAttribPointerType type, bool normalized, uint* value);
		internal delegate void glVertexAttribParameteriAMD(uint index, uint pname, int param);
		internal delegate void glVertexAttribPointer(uint index, int size, VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);
		internal delegate void glVertexAttribPointerARB(uint index, int size, VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);
		internal delegate void glVertexAttribPointerNV(uint index, int fsize, VertexAttribEnumNV type, int stride, IntPtr pointer);
		internal unsafe delegate void glVertexAttribs1dvNV(uint index, int count, double* v);
		internal unsafe delegate void glVertexAttribs1fvNV(uint index, int count, float* v);
		internal unsafe delegate void glVertexAttribs1hvNV(uint index, int n, ushort* v);
		internal unsafe delegate void glVertexAttribs1svNV(uint index, int count, short* v);
		internal unsafe delegate void glVertexAttribs2dvNV(uint index, int count, double* v);
		internal unsafe delegate void glVertexAttribs2fvNV(uint index, int count, float* v);
		internal unsafe delegate void glVertexAttribs2hvNV(uint index, int n, ushort* v);
		internal unsafe delegate void glVertexAttribs2svNV(uint index, int count, short* v);
		internal unsafe delegate void glVertexAttribs3dvNV(uint index, int count, double* v);
		internal unsafe delegate void glVertexAttribs3fvNV(uint index, int count, float* v);
		internal unsafe delegate void glVertexAttribs3hvNV(uint index, int n, ushort* v);
		internal unsafe delegate void glVertexAttribs3svNV(uint index, int count, short* v);
		internal unsafe delegate void glVertexAttribs4dvNV(uint index, int count, double* v);
		internal unsafe delegate void glVertexAttribs4fvNV(uint index, int count, float* v);
		internal unsafe delegate void glVertexAttribs4hvNV(uint index, int n, ushort* v);
		internal unsafe delegate void glVertexAttribs4svNV(uint index, int count, short* v);
		internal unsafe delegate void glVertexAttribs4ubvNV(uint index, int count, byte* v);
		internal delegate void glVertexBindingDivisor(uint bindingindex, uint divisor);
		internal delegate void glVertexBlendARB(int count);
		internal delegate void glVertexBlendEnvfATI(VertexStreamATI pname, float param);
		internal delegate void glVertexBlendEnviATI(VertexStreamATI pname, int param);
		internal delegate void glVertexFormatNV(int size, VertexPointerType type, int stride);
		internal delegate void glVertexP2ui(VertexPointerType type, uint value);
		internal unsafe delegate void glVertexP2uiv(VertexPointerType type, uint* value);
		internal delegate void glVertexP3ui(VertexPointerType type, uint value);
		internal unsafe delegate void glVertexP3uiv(VertexPointerType type, uint* value);
		internal delegate void glVertexP4ui(VertexPointerType type, uint value);
		internal unsafe delegate void glVertexP4uiv(VertexPointerType type, uint* value);
		internal delegate void glVertexPointer(int size, VertexPointerType type, int stride, IntPtr pointer);
		internal delegate void glVertexPointerEXT(int size, VertexPointerType type, int stride, int count, IntPtr pointer);
		internal delegate void glVertexPointerListIBM(int size, VertexPointerType type, int stride, IntPtr pointer, int ptrstride);
		internal delegate void glVertexPointervINTEL(int size, VertexPointerType type, IntPtr pointer);
		internal delegate void glVertexStream1dATI(VertexStreamATI stream, double x);
		internal unsafe delegate void glVertexStream1dvATI(VertexStreamATI stream, double* coords);
		internal delegate void glVertexStream1fATI(VertexStreamATI stream, float x);
		internal unsafe delegate void glVertexStream1fvATI(VertexStreamATI stream, float* coords);
		internal delegate void glVertexStream1iATI(VertexStreamATI stream, int x);
		internal unsafe delegate void glVertexStream1ivATI(VertexStreamATI stream, int* coords);
		internal delegate void glVertexStream1sATI(VertexStreamATI stream, short x);
		internal unsafe delegate void glVertexStream1svATI(VertexStreamATI stream, short* coords);
		internal delegate void glVertexStream2dATI(VertexStreamATI stream, double x, double y);
		internal unsafe delegate void glVertexStream2dvATI(VertexStreamATI stream, double* coords);
		internal delegate void glVertexStream2fATI(VertexStreamATI stream, float x, float y);
		internal unsafe delegate void glVertexStream2fvATI(VertexStreamATI stream, float* coords);
		internal delegate void glVertexStream2iATI(VertexStreamATI stream, int x, int y);
		internal unsafe delegate void glVertexStream2ivATI(VertexStreamATI stream, int* coords);
		internal delegate void glVertexStream2sATI(VertexStreamATI stream, short x, short y);
		internal unsafe delegate void glVertexStream2svATI(VertexStreamATI stream, short* coords);
		internal delegate void glVertexStream3dATI(VertexStreamATI stream, double x, double y, double z);
		internal unsafe delegate void glVertexStream3dvATI(VertexStreamATI stream, double* coords);
		internal delegate void glVertexStream3fATI(VertexStreamATI stream, float x, float y, float z);
		internal unsafe delegate void glVertexStream3fvATI(VertexStreamATI stream, float* coords);
		internal delegate void glVertexStream3iATI(VertexStreamATI stream, int x, int y, int z);
		internal unsafe delegate void glVertexStream3ivATI(VertexStreamATI stream, int* coords);
		internal delegate void glVertexStream3sATI(VertexStreamATI stream, short x, short y, short z);
		internal unsafe delegate void glVertexStream3svATI(VertexStreamATI stream, short* coords);
		internal delegate void glVertexStream4dATI(VertexStreamATI stream, double x, double y, double z, double w);
		internal unsafe delegate void glVertexStream4dvATI(VertexStreamATI stream, double* coords);
		internal delegate void glVertexStream4fATI(VertexStreamATI stream, float x, float y, float z, float w);
		internal unsafe delegate void glVertexStream4fvATI(VertexStreamATI stream, float* coords);
		internal delegate void glVertexStream4iATI(VertexStreamATI stream, int x, int y, int z, int w);
		internal unsafe delegate void glVertexStream4ivATI(VertexStreamATI stream, int* coords);
		internal delegate void glVertexStream4sATI(VertexStreamATI stream, short x, short y, short z, short w);
		internal unsafe delegate void glVertexStream4svATI(VertexStreamATI stream, short* coords);
		internal delegate void glVertexWeightfEXT(float weight);
		internal unsafe delegate void glVertexWeightfvEXT(float* weight);
		internal delegate void glVertexWeighthNV(ushort weight);
		internal unsafe delegate void glVertexWeighthvNV(ushort* weight);
		internal delegate void glVertexWeightPointerEXT(int size, VertexWeightPointerTypeEXT type, int stride, IntPtr pointer);
		internal unsafe delegate uint glVideoCaptureNV(uint video_capture_slot, uint* sequence_num, ulong* capture_time);
		internal unsafe delegate void glVideoCaptureStreamParameterdvNV(uint video_capture_slot, uint stream, uint pname, double* @params);
		internal unsafe delegate void glVideoCaptureStreamParameterfvNV(uint video_capture_slot, uint stream, uint pname, float* @params);
		internal unsafe delegate void glVideoCaptureStreamParameterivNV(uint video_capture_slot, uint stream, uint pname, int* @params);
		internal delegate void glViewport(int x, int y, int width, int height);
		internal unsafe delegate void glViewportArrayv(uint first, int count, float* v);
		internal unsafe delegate void glViewportArrayvNV(uint first, int count, float* v);
		internal unsafe delegate void glViewportArrayvOES(uint first, int count, float* v);
		internal delegate void glViewportIndexedf(uint index, float x, float y, float w, float h);
		internal delegate void glViewportIndexedfNV(uint index, float x, float y, float w, float h);
		internal delegate void glViewportIndexedfOES(uint index, float x, float y, float w, float h);
		internal unsafe delegate void glViewportIndexedfv(uint index, float* v);
		internal unsafe delegate void glViewportIndexedfvNV(uint index, float* v);
		internal unsafe delegate void glViewportIndexedfvOES(uint index, float* v);
		internal delegate void glViewportPositionWScaleNV(uint index, float xcoeff, float ycoeff);
		internal delegate void glViewportSwizzleNV(uint index, uint swizzlex, uint swizzley, uint swizzlez, uint swizzlew);
		#endregion

		#region W:

		internal unsafe delegate void glWaitSemaphoreEXT(uint semaphore, uint numBufferBarriers, uint* buffers, uint numTextureBarriers, uint* textures, TextureLayout* srcLayouts);
		internal unsafe delegate void glWaitSemaphoreui64NVX(uint waitGpu, int fenceObjectCount, uint* semaphoreArray, ulong* fenceValueArray);
		internal delegate void glWaitSync(IntPtr sync, uint flags, ulong timeout);
		internal delegate void glWaitSyncAPPLE(IntPtr sync, uint flags, ulong timeout);
		internal delegate void glWaitVkSemaphoreNV(ulong vkSemaphore);
		internal unsafe delegate void glWeightbvARB(int size, sbyte* weights);
		internal unsafe delegate void glWeightdvARB(int size, double* weights);
		internal unsafe delegate void glWeightfvARB(int size, float* weights);
		internal unsafe delegate void glWeightivARB(int size, int* weights);
		internal unsafe delegate void glWeightPathsNV(uint resultPath, int numPaths, uint* paths, float* weights);
		internal delegate void glWeightPointerARB(int size, WeightPointerTypeARB type, int stride, IntPtr pointer);
		internal delegate void glWeightPointerOES(int size, uint type, int stride, IntPtr pointer);
		internal unsafe delegate void glWeightsvARB(int size, short* weights);
		internal unsafe delegate void glWeightubvARB(int size, byte* weights);
		internal unsafe delegate void glWeightuivARB(int size, uint* weights);
		internal unsafe delegate void glWeightusvARB(int size, ushort* weights);
		internal delegate void glWindowPos2d(double x, double y);
		internal delegate void glWindowPos2dARB(double x, double y);
		internal delegate void glWindowPos2dMESA(double x, double y);
		internal unsafe delegate void glWindowPos2dv(double* v);
		internal unsafe delegate void glWindowPos2dvARB(double* v);
		internal unsafe delegate void glWindowPos2dvMESA(double* v);
		internal delegate void glWindowPos2f(float x, float y);
		internal delegate void glWindowPos2fARB(float x, float y);
		internal delegate void glWindowPos2fMESA(float x, float y);
		internal unsafe delegate void glWindowPos2fv(float* v);
		internal unsafe delegate void glWindowPos2fvARB(float* v);
		internal unsafe delegate void glWindowPos2fvMESA(float* v);
		internal delegate void glWindowPos2i(int x, int y);
		internal delegate void glWindowPos2iARB(int x, int y);
		internal delegate void glWindowPos2iMESA(int x, int y);
		internal unsafe delegate void glWindowPos2iv(int* v);
		internal unsafe delegate void glWindowPos2ivARB(int* v);
		internal unsafe delegate void glWindowPos2ivMESA(int* v);
		internal delegate void glWindowPos2s(short x, short y);
		internal delegate void glWindowPos2sARB(short x, short y);
		internal delegate void glWindowPos2sMESA(short x, short y);
		internal unsafe delegate void glWindowPos2sv(short* v);
		internal unsafe delegate void glWindowPos2svARB(short* v);
		internal unsafe delegate void glWindowPos2svMESA(short* v);
		internal delegate void glWindowPos3d(double x, double y, double z);
		internal delegate void glWindowPos3dARB(double x, double y, double z);
		internal delegate void glWindowPos3dMESA(double x, double y, double z);
		internal unsafe delegate void glWindowPos3dv(double* v);
		internal unsafe delegate void glWindowPos3dvARB(double* v);
		internal unsafe delegate void glWindowPos3dvMESA(double* v);
		internal delegate void glWindowPos3f(float x, float y, float z);
		internal delegate void glWindowPos3fARB(float x, float y, float z);
		internal delegate void glWindowPos3fMESA(float x, float y, float z);
		internal unsafe delegate void glWindowPos3fv(float* v);
		internal unsafe delegate void glWindowPos3fvARB(float* v);
		internal unsafe delegate void glWindowPos3fvMESA(float* v);
		internal delegate void glWindowPos3i(int x, int y, int z);
		internal delegate void glWindowPos3iARB(int x, int y, int z);
		internal delegate void glWindowPos3iMESA(int x, int y, int z);
		internal unsafe delegate void glWindowPos3iv(int* v);
		internal unsafe delegate void glWindowPos3ivARB(int* v);
		internal unsafe delegate void glWindowPos3ivMESA(int* v);
		internal delegate void glWindowPos3s(short x, short y, short z);
		internal delegate void glWindowPos3sARB(short x, short y, short z);
		internal delegate void glWindowPos3sMESA(short x, short y, short z);
		internal unsafe delegate void glWindowPos3sv(short* v);
		internal unsafe delegate void glWindowPos3svARB(short* v);
		internal unsafe delegate void glWindowPos3svMESA(short* v);
		internal delegate void glWindowPos4dMESA(double x, double y, double z, double w);
		internal unsafe delegate void glWindowPos4dvMESA(double* v);
		internal delegate void glWindowPos4fMESA(float x, float y, float z, float w);
		internal unsafe delegate void glWindowPos4fvMESA(float* v);
		internal delegate void glWindowPos4iMESA(int x, int y, int z, int w);
		internal unsafe delegate void glWindowPos4ivMESA(int* v);
		internal delegate void glWindowPos4sMESA(short x, short y, short z, short w);
		internal unsafe delegate void glWindowPos4svMESA(short* v);
		internal unsafe delegate void glWindowRectanglesEXT(uint mode, int count, int* box);
		internal delegate void glWriteMaskEXT(uint res, uint @in, VertexShaderWriteMaskEXT outX, VertexShaderWriteMaskEXT outY, VertexShaderWriteMaskEXT outZ, VertexShaderWriteMaskEXT outW);
		#endregion

	}
}

