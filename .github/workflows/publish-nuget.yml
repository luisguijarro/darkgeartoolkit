name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*'  # Se activa solo en tags como v1.9.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup .NET 8
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 3️⃣ Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore DarkGearToolKit/DarkGearToolKit.csproj

      # 4️⃣ Extraer la versión del tag
      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          ASSEMBLY_VERSION="$VERSION.0"
          FILE_VERSION="$VERSION.0"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "ASSEMBLY_VERSION=$ASSEMBLY_VERSION" >> $GITHUB_ENV
          echo "FILE_VERSION=$FILE_VERSION" >> $GITHUB_ENV

      # 5️⃣ Compilar y empaquetar el proyecto con versiones dinámicas
      - name: Pack NuGet Package
        run: |
          dotnet pack DarkGearToolKit/DarkGearToolKit.csproj -c Release \
            /p:Version=$VERSION \
            /p:AssemblyVersion=$ASSEMBLY_VERSION \
            /p:FileVersion=$FILE_VERSION \
            -o ./nupkg

      # 6️⃣ Publicar el paquete en NuGet
      - name: Publish to NuGet
        uses: nuget/setup-nuget@v1
      - run: dotnet nuget push ./nupkg/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json
